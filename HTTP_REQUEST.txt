HTTP:

REQUESTS:

XHR GET Requests:

const xhr = new XMLHttpRequest();
const url = 'https://api-to-call.com/endpoint';

xhr.responseType = 'json';
xhr.onreadystatechange = () => {
  if (xhr.readyState === XMLHttpRequest.DONE) {
    return xhr.response;
  }
};

xhr.open('GET', url);
xhr.send('GET', XMLHttpRequest());



--------------------------------------------------------------------------------------------------------------------------------------------------

XHR GET Requests:

const url = 'https://api.datamuse.com/words?';
const queryParams = 'rel_rhy=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  
  const xhr = new XMLHttpRequest();
  xhr.responseType = 'json';

  xhr.onreadystatechange = () => {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      renderResponse(xhr.response);
    }
  }
  
  xhr.open('GET', endpoint);
  xhr.send();
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
}

submit.addEventListener('click', displaySuggestions);

---


const renderResponse = (res) => {
  if(!res){
    console.log(res.status)
  }

  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>"
    return
  }
  let wordList = []
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`)
  }

  wordList = wordList.join("")
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`
  return
}

const renderRawResponse = (res) => {
  let trimmedResponse = res.slice(0, 10)
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`
}

const renderJsonResponse = (res) => {
  let rawJson = {}
  for(let key in response){
    rawJson[key] = response[key]
  }

  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n")
  responseField.innerHTML = `<pre>${rawJson}</pre>`
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Word Smith</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

XHR GET Requests:

const url = 'https://api.datamuse.com/words?';
const queryParams = 'rel_jjb=';
const additionalParams = '&topics=';

const inputField = document.querySelector('#input');
const topicField = document.querySelector('#topic');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}${additionalParams}${topicQuery}`;
  const topicQuery = topicField.value;
  const xhr = new XMLHttpRequest();
  xhr.responseType = 'json';

  xhr.onreadystatechange = () => {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      renderResponse(xhr.response);
    }
  }
  
  xhr.open('GET', endpoint);
  xhr.send();
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
}

submit.addEventListener('click', displaySuggestions);

---


const renderResponse = (res) => {
  if(!res){
    console.log(res.status)
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>"
    return
  }
  let wordList = []
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`)
  }
  wordList = wordList.join("")
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`
  return
}

const renderRawResponse = (res) => {
  let trimmedResponse = res.slice(0, 10)
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`
}

const renderJsonResponse = (res) => {
  let rawJson = {}
  for(let key in response){
    rawJson[key] = response[key]
  }

  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n")
  responseField.innerHTML = `<pre>${rawJson}</pre>`
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Word Smith</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="" placeholder="type in a word">

        <input type="text" id="topic" value="" placeholder="type in a topic">
        <button id="submit">SUBMIT</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

XHR POST Requests:

const xhr = new XMLHttpRequest();
const url = 'https://api-to-call.com/endpoint';
const data = JSON.stringify({id: '200'});

xhr.responseType = 'json';
xhr.onreadystatechange = () => {
  if (xhr.readyState === XMLHttpRequest.DONE) {
    return xhr.response;
  }
};

xhr.open('POST', url);
xhr.send(data, XMLHttpRequest);



--------------------------------------------------------------------------------------------------------------------------------------------------

XHR Post Requests:

const apiKey = '<Your API Key>';
const url = 'https://api.rebrandly.com/v1/links';

const inputField = document.querySelector('#input');
const shortenButton = document.querySelector('#shorten');
const responseField = document.querySelector('#responseField');

const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten});
  const xhr = new XMLHttpRequest();
  xhr.responseType = 'json';
  xhr.onreadystatechange = () => {
    if (xhr.readyState === XMLHttpRequest.DONE) {
  		renderResponse(xhr.response);
		}
  }
  xhr.open('POST', url);
  xhr.setRequestHeader('Content-type', 'application/json');
	xhr.setRequestHeader('apikey', apiKey);
  xhr.send(data);
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>"
  } else {
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`
  }
}

const renderRawResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>"
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n")
    structuredRes = `<pre>${structuredRes}</pre>`
    responseField.innerHTML = `${structuredRes}`
  }
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Byte Size</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/bytesize_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a URL</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

const dataMuseUrl = 'https://api.datamuse.com/words?';
const queryParams = 'rel_jjb=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endPoint = dataMuseUrl + queryParams + wordQuery;

  const xhr = new XMLHttpRequest();
  xhr.responseType = 'json';

  xhr.onreadystatechange = () => {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      renderWordResponse(xhr.response);
    }
  };
  xhr.open('GET', endPoint);
  xhr.send();
}

// clear previous results and display results to webpage
const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  };
  getSuggestions();
};

submit.addEventListener('click', displaySuggestions);

const apiKey = '<Your API Key>';
const rebrandlyUrl = 'https://api.rebrandly.com/v1/links';

const shortenButton = document.querySelector('#shorten');

const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten});

  const xhr = new XMLHttpRequest();
  xhr.responseType = 'json';

  xhr.onreadystatechange = () => {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      renderByteResponse(xhr.response);
    }
  };
  xhr.open('POST', rebrandlyUrl);
  xhr.setRequestHeader('Content-type', 'application/json');
	xhr.setRequestHeader('apikey', apiKey);
  xhr.send(data);
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  };
  shortenUrl();
};

shortenButton.addEventListener('click', displayShortUrl);

---


const renderWordResponse = (res) => {
  if(!res){
    console.log(res.status);
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>";
    return;
  }
  let wordList = []
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`);
  }
  wordList = wordList.join("");
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`;
  return;
}

const renderRawWordResponse = (res) => {
  let trimmedResponse = res.slice(0, 10);
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`;
}

const renderJsonWordResponse = (res) => {
  let rawJson = {};
  for(let key in response){
    rawJson[key] = response[key];
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n");
  responseField.innerHTML = `<pre>${rawJson}</pre>`;
}

const renderByteResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawByteResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title id="title">Word Smith</title>
  <link id="css" rel="stylesheet" type="text/css" href="public/wordSmithStyle.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500|Roboto:300" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" id="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1 id="prompt">Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>
      <button id="toggle">Switch to POST requests!</button>
    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
  <script src="public/toggleSite.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

const jsonButton = document.querySelector('#generate');
const buttonContainer = document.querySelector('#buttonContainer');
const display = document.querySelector('#displayContainer');
const collection = ["Another", "More", "Next", "Continue", "Keep going", "Click me", "A new one"];

const generateJson = async () => {
  try {
    const response = await fetch('https://jsonplaceholder.typicode.com/users');
    if(response.ok){
      const jsonResponse = await response.json();
      renderResponse(jsonResponse);
      changeButton();
    }
  } catch(error) {
    console.log(error);
  }
};
    
const formatJson = (resJson) => {
  resJson = JSON.stringify(resJson);
  let counter = 0;
  return resJson.split('')
  .map(char => {
    switch (char) {
      case ',':
        return `,\n${' '.repeat(counter * 2)}`;
      case '{':
        counter += 1;
        return `{\n${' '.repeat(counter * 2)}`;
      case '}':
        counter -= 1;
        return `\n${' '.repeat(counter * 2)}}`;
      default:
        return char;
    }
  })
  .join('');
};

const renderResponse = (jsonResponse) => {
  const jsonSelection = Math.floor(Math.random() * 10);
  display.innerHTML = `<pre>${formatJson(jsonResponse[jsonSelection])}</pre>`;
};

const changeButton = () => {
  const newText = Math.floor(Math.random() * 7);
  jsonButton.innerHTML = `${collection[newText]}!`;
};

jsonButton.addEventListener('click', generateJson);

---


<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>JSON Jenerator</title>
    <link rel="stylesheet" type="text/css" href="public/style.css" />

  </head>
  <body>
    <h1>JSON Jenerator:</h1>
    <main>
      <div id="displayContainer">

      </div>
      <div id="buttonContainer">
        <button type="button" id="generate">Jenerate!</button>
      </div>

    </main>
    <script src="public/main.js"></script>
  </body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() GET Requests:

fetch('https://api-to-call.com/endpoint').then(response => {
  if (response.ok) {
    return response.json();
  }
  throw new Error('Request failed!');
}, networkError => {
  console.log(networkError.message);
}).then(jsonResponse => {
  return jsonResponse;
});



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() GET Requests:

const url = 'https://api.datamuse.com/words';
const queryParams = '?sl=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  
  fetch(endpoint, {cache: 'no-cache'}).then(response => {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Request failed!');
  }, networkError => {
    console.log(networkError.message)
  })
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
};

submit.addEventListener('click', displaySuggestions);

---


const renderResponse = (res) => {
  if(!res){
    console.log(res.status);
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>";
    return;
  }

  let wordList = [];
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`);
  }
  wordList = wordList.join("");
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`;
  return
}

const renderRawResponse = (res) => {
  let trimmedResponse = res.slice(0, 10);
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`;
}

const renderJsonResponse = (res) => {
  let rawJson = {};
  for(let key in res){
    rawJson[key] = res[key];
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n");
  responseField.innerHTML = `<pre>${rawJson}</pre>`;
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Word Smith</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() GET Requests:

const url = 'https://api.datamuse.com/words';
const queryParams = '?sl=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  
  fetch(endpoint, {cache: 'no-cache'}).then(response => {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Request failed!');
  }, networkError => {
    console.log(networkError.message)
  }).then(jsonResponse => {
    renderResponse(jsonResponse);
  })
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
};

submit.addEventListener('click', displaySuggestions);

---


const renderResponse = (res) => {
  if(!res){
    console.log(res.status);
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>";
    return;
  }
  let wordList = [];
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`);
  }
  wordList = wordList.join("");
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`;
  return
}

const renderRawResponse = (res) => {
  let trimmedResponse = res.slice(0, 10);
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`;
}

const renderJsonResponse = (res) => {
  let rawJson = {};
  for(let key in response){
    rawJson[key] = response[key];
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n");
  responseField.innerHTML = `<pre>${rawJson}</pre>`;
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Word Smith</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() POST Requests:

fetch('https://api-to-call.com/endpoint', {
  method: 'POST',
  body: JSON.stringify({id: "200"})
}).then(response => {
  if(response.ok){
	  return response.json();  
  }
	throw new Error('Request failed!');
}, networkError => {
  console.log(networkError.message);
}).then(jsonResponse => {
  console.log(jsonResponse);
})



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() Post Requests:

const apiKey = '<Your API Key>';
const url = 'https://api.rebrandly.com/v1/links';

const inputField = document.querySelector('#input');
const shortenButton = document.querySelector('#shorten');
const responseField = document.querySelector('#responseField');

const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten})
  
	fetch(url, {
    method: 'POST',
    headers: {
      'Content-type': 'application/json',
      'apikey': apiKey
    },
    body: data
  })
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild)
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {  
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawResponse = (res) => {
  if(res.errors){  
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

const renderJsonResponse = (response) => {
  let rawJson = {}
  for(let key in response){
    rawJson[key] = response[key]
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n")
  responseField.innerHTML = `<pre>${rawJson}</pre>`
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Byte Size</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/bytesize_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a URL</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() POST Requests:

const apiKey = '<Your API Key>';
const url = 'https://api.rebrandly.com/v1/links';

const inputField = document.querySelector('#input');
const shortenButton = document.querySelector('#shorten');
const responseField = document.querySelector('#responseField');

const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten})
  
	fetch(url, {
    method: 'POST',
    headers: {
      'Content-type': 'application/json',
      'apikey': apiKey
    },
    body: data
  }).then(response => {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Request failed!');
  }, networkError => {
    console.log(networkError.message)
  })
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild)
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {  
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawResponse = (res) => {
  if(res.errors){  
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

const renderJsonResponse = (response) => {
  let rawJson = {}
  for(let key in response){
    rawJson[key] = response[key]
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n")
  responseField.innerHTML = `<pre>${rawJson}</pre>`
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Byte Size</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/bytesize_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a URL</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

fetch() POST Requests:

const apiKey = '<Your API Key>';
const url = 'https://api.rebrandly.com/v1/links';

const inputField = document.querySelector('#input');
const shortenButton = document.querySelector('#shorten');
const responseField = document.querySelector('#responseField');

const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten})
  
	fetch(url, {
    method: 'POST',
    headers: {
      'Content-type': 'application/json',
      'apikey': apiKey
    },
    body: data
  }).then(response => {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Request failed!');
  }, networkError => {
    console.log(networkError.message)
  }).then(jsonResponse => {
    renderResponse(jsonResponse);
  })
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild)
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {  
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawResponse = (res) => {
  if(res.errors){  
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

const renderJsonResponse = (response) => {
  let rawJson = {}
  for(let key in response){
    rawJson[key] = response[key]
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n")
  responseField.innerHTML = `<pre>${rawJson}</pre>`
}

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Byte Size</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/bytesize_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a URL</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

async GET Requests:

const getData = async () => {
  try {
    const response = await fetch('https://api-to-call.com/endpoint');
    if (response.ok) {
      const jsonResponse = await response.json();
      return jsonResponse;
    }
    throw new Error('Request failed!');
  } catch (error) {
    console.log(error);	
  }
}



--------------------------------------------------------------------------------------------------------------------------------------------------

async GET Requests:

const url = 'https://api.datamuse.com/words?';
const queryParams = 'rel_jja=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = async () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  try {
    const response = await fetch(endpoint, {cache: 'no-cache'});
    if(response.ok){
      const jsonResponse = await response.json();
      renderResponse(jsonResponse);
    }
  } catch (error) {
    console.log(error);
  }
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
}

submit.addEventListener('click', displaySuggestions);

---


const renderResponse = (res) => {
  if(!res){
    console.log(res.status);
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>";
    return;
  }
  let wordList = [];
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`);
  }
  wordList = wordList.join("");
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`;
  return
}

const renderRawResponse = (res) => {
  let trimmedResponse = res.slice(0, 10);
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`;
}

const renderJsonResponse = (res) => {
  let rawJson = {};
  for(let key in response){
    rawJson[key] = response[key];
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n");
  responseField.innerHTML = `<pre>${rawJson}</pre>`;
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Word Smith</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

async POST Requests:

const getData = async () => {
  try {
    const response = await fetch('https://api-to-call.com/endpoint', {
      method: 'POST',
      body: JSON.stringify({id: 200})
    })
    if(response.ok){
      const jsonResponse = await response.json();
      return jsonResponse;
    }
    throw new Error('Request failed!');
  } catch(error) {
    console.log(error);
  }
}



--------------------------------------------------------------------------------------------------------------------------------------------------

async POST Requests:

const apiKey = '<Your API Key>';
const url = 'https://api.rebrandly.com/v1/links';

const inputField = document.querySelector('#input');
const shortenButton = document.querySelector('#shorten');
const responseField = document.querySelector('#responseField');

const shortenUrl = async () => {
	const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten});
  try {
    const response = await fetch(url, {
			method: 'POST',
      body: data,
      headers: {
        'Content-type': 'application/json',
				'apikey': apiKey
      }
    });
		if(response.ok){
      const jsonResponse = await response.json();
      renderResponse(jsonResponse);
    }
  } catch (error) {
    console.log(error);
  }
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {  
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawResponse = (res) => {
  if(res.errors){  
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Byte Size</title>
  <link rel="stylesheet" type="text/css" href="public/style.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/bytesize_logo.svg" class="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1>Enter a URL</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>

    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------

const dataMuseUrl = 'https://api.datamuse.com/words?';
const queryParams = 'rel_jjb=';

const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

const getSuggestions = async () => {
  const wordQuery = inputField.value;
  const endpoint = dataMuseUrl + queryParams + wordQuery;

  try{
    const response =  await fetch(endpoint);
    if(response.ok){
      let jsonResponse = await response.json();
			renderWordResponse(jsonResponse);
    }
  }
  catch(error){
    console.log(error);
  }
}

const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
}

submit.addEventListener('click', displaySuggestions);

const apiKey = '<Your API Key>';
const rebrandlyEndpoint = 'https://api.rebrandly.com/v1/links';
const shortenButton = document.querySelector('#shorten');
const shortenUrl = async () =>{
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten});

  try{
    const response =  await fetch(rebrandlyEndpoint, {
      method: 'POST',
      body: data,
      headers: {
        "Content-type": "application/json",
        'apikey': apiKey
      }
    })
    if(response.ok){
      const jsonResponse = await response.json();
			renderByteResponse(jsonResponse);
    }
  }
  catch(error){
    console.log(error);
  }
}

const displayShortUrl = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  shortenUrl();
}

shortenButton.addEventListener('click', displayShortUrl);

---


const renderWordResponse = (res) => {
  if(!res){
    console.log(res.status);
  }
  if(!res.length){
    responseField.innerHTML = "<p>Try again!</p><p>There were no suggestions found!</p>";
    return;
  }
  let wordList = []
  for(let i = 0; i < Math.min(res.length, 10); i++){
    wordList.push(`<li>${res[i].word}</li>`);
  }
  wordList = wordList.join("");
  responseField.innerHTML = `<p>You might be interested in:</p><ol>${wordList}</ol>`;
  return;
}

const renderRawWordResponse = (res) => {
  let trimmedResponse = res.slice(0, 10);
  responseField.innerHTML = `<text>${JSON.stringify(trimmedResponse)}</text>`;
}

const renderJsonWordResponse = (res) => {
  let rawJson = {};
  for(let key in response){
    rawJson[key] = response[key];
  }
  rawJson = JSON.stringify(rawJson).replace(/,/g, ", \n");
  responseField.innerHTML = `<pre>${rawJson}</pre>`;
}

const renderByteResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;
  }
}

const renderRawByteResponse = (res) => {
  if(res.errors){
    responseField.innerHTML = "<p>Sorry, couldn't format your URL.</p><p>Try again.</p>";
  } else {
    let structuredRes = JSON.stringify(res).replace(/,/g, ", \n");
    structuredRes = `<pre>${structuredRes}</pre>`;
    responseField.innerHTML = `${structuredRes}`;
  }
}

---


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title id="title">Word Smith</title>
  <link id="css" rel="stylesheet" type="text/css" href="public/wordSmithStyle.css" />
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro|Work+Sans:200,500|Roboto:300" rel="stylesheet">
</head>

<body>
  <header>
    <img src="https://s3.amazonaws.com/codecademy-content/courses/intermediate-javascript-requests/wordsmith_logo.svg" id="logo" />

  </header>
  <main id="main">
    <div class="container">

      <h1 id="prompt">Enter a Word</h1>

      <form id="form" autocomplete="off">
        <input type="text" id="input" value="">
        <button id="submit">SUBMIT</button>
        <button id="shorten">Shorten</button>
      </form>

      <div id="responseField">

      </div>
      <button id="toggle">Switch to POST requests!</button>
    </div>
  </main>
  <script src='https://code.jquery.com/jquery-3.1.0.min.js'></script>
  <script src="public/main.js"></script>
  <script src="public/helperFunctions.js"></script>
  <script src="public/toggleSite.js"></script>
</body>
</html>



--------------------------------------------------------------------------------------------------------------------------------------------------
































































