-------------
RUBY LESSONS:
-------------


---------
1. INTRO:
---------


(function(){ document.querySelector('video').playbackRate = 2.0; })();


about odesc


Far cmd's:
----------

# encoding: cp866	--- кодировка для русского языка

s + file_dyrectory 	--- open in sublime 3
start atom .		--- open in atom
Ctrl + O 		    --- open consolse (full window)
F3 			        --- open folder, look file
F4 			        --- open file (parse file)
F7 			        --- make folder
Shift + F4 		    --- touch file (create file)
F2 			        --- save file, save changes in file
Esc / F10 		    --- exit (close file)
Shift + up/down 	--- choose files (select data)
F5			        --- copy files (folders and files in folders)
Ctrl + [		    --- copy to console left panel path
Ctrl + ]		    --- copy to console right panel path
CTRL + F		    --- copy path with file to console
F6			        --- move files, rename files and folders
CTRL + l		    --- mashine hard disk info
Alt + F7		    --- скать файлы с помощью специального диалога
F8			        --- delete


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

2. BEGIN

salary.rb:
----------

salary = 3000
annual = salary * 12
tax = 0.4

puts "Salary - #{salary}"
puts

puts "Tax - #{tax}"
puts

puts "Final - #{salary - salary * tax}"
puts

puts "Annual salary - #{annual}"
puts

puts "Final Annual - #{annual - annual * tax}"
puts

print "Enter your name "
name = gets.strip.capitalize.to_s
puts

print "#{name}, programm finished, press enter to exit.  "
gets


---------------------------------------------------------------------------------------------------------------------------------------------------------




---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------
3. DATA TYPES:
--------------


Data types:

String "aa" "2"
Fixnum 2 22
Float 3.14
Array []
Hash {}

puts object
string object
integer object


everithing in Ruby is object


to_i
to_f
to_s
to_a
to_h

'22'.to_i

a = gets.to_i
a = gets.to_f


gets.rb:
--------

print "Enter voltage: "
U = gets.strip.to_i

print "Enter resistance: "
R = gets.strip.to_i
puts

I = U / R

puts "Result: #{I}"
puts

print "Press enter to exit: "
gets.strip

sleep 0.7
exit



interpolation.rb:
-----------------

print "Enter value: "
n = gets.chomp.to_s

puts "#{n} + #{n} * #{n}"


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------
4. WORK WITH STRING:
--------------------


String interpolation:

puts "x = #{variable}"


Russian encoding for Far:

# encoding: cp866 + f8


\n


str = gets.chomp
str = str.chomp
str = gets
str.chomp!


ruby string documentation


word.methods
5.methods


kickstarter.com - donation for ideas


calc.rb:
--------

print "Enter 'x': "
x = gets.chomp

print "Enter 'y': "
y = gets.to_i

print "Enter 'z': "
z = gets.to_f

puts "x = #{x} y = #{y} z = #{z}"
puts

print "Press enter to exit: "
gets.chomp

puts "Exit"
sleep 0.7
exit


times_do.rb:
------------

50.times do |i|
  puts "i = #{i.to_i}, even: #{i.even?}"
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------
5. WORK WITH FEW DATA TYPES:
----------------------------


Iteration, repeat:

puts " str #{...} something"


Special symbols:

\n
\t
\r

puts "\naabb\t\t\neae"
[
aabb
	[
neae

\n - new line
\t - tabbing
\r - return

\r\n = Enter

\\ - \



up_to.rb:
---------

9.times do |i|
  2.downto(-2) do |x|
  	puts "#{i + 1} = #{x}"
  end
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------
6. RUBY METHODS:
----------------


sleep 1
sleep 10
(timeing operator)


operator do
  ...
end

operator do
  operator do
    ...
  end
end


rand (5) 0..4


postpone.rb:
------------

print "How many years 'll be postpone: "
years = gets.strip.to_i

print "How much 'll be postpone in month ($): "
money = gets.strip.to_f

month = 0                            #!!!!!

1.upto (years) do |i|
  1.upto (12) do |ii|

    month = month + 1               #!!!!
    summ = month * money            #!!!!

    puts "Year #{i}, month #{ii}, postponed: #{summ}$"

  end
end

puts

capital = money * years * 12

puts "It's #{capital}$"
puts

print "Press enter to exit  "
gets.chomp
puts
puts "Exit"
exit



raind.rb:
---------

print "Enter string: "
str = gets.chomp

10.times do
  str.size.times do |x|
    print str [x]
    d = (1 + rand(30)).to_f / 100
    sleep d
    print "-"
  end
  print " "
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------
7. TEXT EDITORS:
----------------


Sublime text 3
s app1.rb


if ...
  ...
end


elsif
exit



casino.rb:
----------

print "How old are you? "
age = gets.strip.to_i

print "Wont some play? (Y/N) "
answer = gets.strip.capitalize

money = 1000
d = "$"
quit = "Q"

if age >= 18 && answer == "Y"

  puts "\nOk, you got #{money}#{d}, lets go!"
  puts

  200.times do |i|

    print "Press enter to go =>\nor (Q) to completion.. "
    go_on = gets.chomp.capitalize
    puts

    x = rand (1..9)
    y = rand (1..9)
    z = rand (1..9)

    puts "Round №#{i + 1}, remained #{1000 - (i + 1)} attempts"
    puts

    puts "--| #{x} |---| #{y} |---| #{z} |--"
    puts

    # puts "You got #{money = money}#{d} now" # bug!!!
    # puts

    if x == 0 && y == 0 && z == 0

      puts "You lose, you got zero"
      money = 0

    elsif x == 1 && y == 1 && z == 1

      puts "You got 10#{d}"
      money = money + 10

    elsif x == 2 && y == 2 && z == 2

      puts "You got 20#{d}"
      money = money + 20

    elsif x == 3 && y == 3 && z == 3

      puts "You got 30#{d}"
      money = money + 30

    elsif x == 4 && y == 4 && z == 4

      puts "You got 40#{d}"
      money = money + 40

    elsif x == 5 && y == 5 && z == 5

      puts "You got 50#{d}"
      money = money + 50

    elsif x == 6 && y == 6 && z == 6

      puts "You lose and lost half of #{d}"
      money = money / 2

    elsif x == 7 && y == 7 && z == 7

      puts "You got 70#{d}"
      money = money + 70

    elsif x == 8 && y == 8 && z == 8

      puts "You got 80#{d}"
      money = money + 80

    elsif x == 9 && y == 9 && z == 9

      puts "You got 90#{d}"
      money = money + 90

    elsif x == 1 && y == 2 && z == 3
      puts "You got 123#{d}"
      money = money + 123

    elsif x == y && y != z && x != z

      puts "You lose, and lost 10#{d}"
      money = money - 10

    elsif x != y && y == z && x != z

      puts "You lose, and lost 10#{d}"
      money = money - 10

    elsif x != y && y != z && x == z

      puts "You lose, and lost 10#{d}"
      money = money - 10

    elsif x !=y && y != z && x != z

      puts "You lose, and lost 20#{d}"
      money = money - 20
    end

    if i > 199 && money > 0

      puts "The game is over, you don't got any attemts."
      puts "Take your #{money}#{d} and bye."
      money = money
      puts "Nice game, see ya..."
      sleep 0.7
      puts "Exit"
      exit

    elsif quit == gets

      puts "Ok, take your #{money}#{d} and bye."
      money = money
      puts "Nice game, see ya..."
      sleep 0.7
      puts "Exit"
      exit

    elsif money <= 0

      puts "You lose all money, now you got #{money}#{d}, it's over..."
      money = money
      sleep 0.7
      puts "exit"
      exit

    end

    puts "------------------------"
    puts "   You got #{money}#{d} now"
    puts "------------------------"
    puts

  end

elsif age < 18

  puts "Sorry, you can't play."
  sleep 0.7
  puts "Exit"
  exit

elsif answer != "Y" && answer != "N"

  puts "No valid answer, please try again: (Y/N) "
  answer = gets.strip.capitalize

elsif answer == "N"

  puts "Ok, another time. See ya..."
  sleep 0.7
  puts "Exit"
  exit

end



---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------
8. IF ELSE, ELSIF:
------------------


if else

x = 100000000000
x = 1_000_000_000

calculator


break


while true
end


.reverse


range (1..10).each do |x|
  puts
end



casino.rb:
----------

x = rand (1..100)

10.downto (1) do |i|

  print "I made a number try to guess? (1..100) "
  num = gets.to_i

  puts "\nRemained #{i - 1} attempts!!!"
  puts
  puts "The number: (#{x})"

  if num == x
    puts "Bingo!"
    break
  elsif num < x
    print "No, it's more than #{num} "
    num = num
  elsif num > x
    print "No, it's less than #{num} "
    num = num
  end

  if i < 1
    puts "You don't got attepts any more..."
    sleep 0.9
    puts "Exit"
    exit
  end
end



calc.rb:
--------

res = 0

while true

  res = 0

  print "\nEnter value A: "
  a = gets.strip.to_f

  print "Enter value B: "
  b = gets.strip.to_f

  print "What to do? (+ - * /) "
  o = gets.strip
  puts

  if o == "/" && b == 0       #!!!!
    puts "Error"
  end

  if o == "+"
    res = a + b
  elsif o == "-"
    res = a - b
  elsif o == "*"
    res = a * b
  elsif o == "/"
    res == a / b
  end

  # if o == "/" && b == 0     # wrong place
  #   puts "Error"
  # end
end

puts "Result: #{res}\n"



rainge.rb:
----------

(-2..2).each do |x|
  puts "#{x}"
end
puts "==="

(0..5).each do |y|
  puts "#{y}"
end
puts "==="

("cde".."fff").each do |z|
  puts "#{z}"
end



---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------
9. FUNCTIONS:
-------------


def get_password
  ...
end

@a = 1

def get_password
  @a = 2
  print "Type password: "
  gets.chomp
end

xx = get_password

puts "Was entered password: #{xx}"

puts "Variable a = #{@a}"

instance (objects)


SYMBOLS:
:symbol

Array

14, 22, 31, "Vasya", 44, 88

arr = []
arr = [ 18,4,5 ]

["Mike", 56]
[["Mike", 56"], ["Jake", 33]]


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------
10. ARRAY:
----------


arr = []
arr = ["Roman", 32]
arr << "Mike"
arr = %w[Roman 32 Mike]
arr = [:left, :right]

arr[index]
arr[0]

arr.each do |name|
  some code
end

arr abcde
arr[1..3] => bcd

.delete_at 0
.delete item


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------
11. HASH:
---------


a = 5
b = 2
tmp = ?

a, b = b, a

arr.each do |item|

end

arr.each_with_index do |item, index|
  puts "#{ index + 1 } #{ item }
end

key value storage

NOSQL

Mike	32345
Jessie	12332
...	...

arr = []
arr = Array.new

hh = {}
hh = Hash.new

hh = {'Mike' => '32344', 'Jessie' => '89876'}

puts hh

hh[key] = value

arr << x
hh['Mike'] = 43

arr.each do |item|
end

hh.each do |key, value|
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------
12. HASH - PART 2:
------------------


key	value
string	array
cat	o
dog	oo


hh.keys
hh.values


.each_key do |key|
  ...
end

.each_value do |value|
  ...
end


key	value


hh = { 'cat' => 'кошка' }

hh.has_key? 'cat'

if hh['cat']
  puts ...
end

has_value? 'кошка'


loop do
end

while true
end

break
exit

def say_some
  puts "Hi"
  puts "By"
end

say_some

return = break

def say_some a
  puts a
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------
13. BLOCKS & METHODS:
---------------------


loop do
end

while true do
end

break

def say_hi
  ...
  return
end

exit


hh = {}
arr = []

hh = Hash.new
arr = Array.new

hh = {}
hh['Mike'] = 65
hh['Jessie'] = 43

hh = {'Mike' => 65, 'Jessie' => 23}

hh = {}
hh.push('Mike', 65)
hh.store('Mike', 43)

puts hh
puts hh.inspect

hh.each do |k, v|
  puts ...
end

puts hh.keys
puts hh.keys.inspect
puts hh.values
puts hh.values.inspect

hh.keys.each do |key|
  value = hh[key]
end

hh.values.each do ...

hh.clear

if hh.has_key? 'Mike'
  ...
end

if hh.key? 'Mike'
  ...
end

if hh['Mike']
  ...
end

if hh.value? 'Some'
  ...
end

hh.delete 'Mike'

def say_hi name, age
  ...
end


say_hi 'Mike', 65

puts 'Ok' if ...

hh['Mike'] if ...


def add_person age, name
  ...
end

add_person name, age

def add_person options

  age = options[:age]
end

options = {:name => 'Mike', :age => 43}


merge

>

>>


<body>
<br>
<b><b/>
<e><e/>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------
14. CLASS:
----------


class Animal

  def run
    puts 'Run'
  end

  def stop
    puts 'Ok'
  end
end

aa = Animal.new
aa.run

x = Animal.new
x.run


class Animal

  @name = 'Dog'

  def run
    @name = ...
  end
end

def initialize
  ...
end

attr_reader :variable
attr_accessor :variable
attr_writer :variable


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------
15. CLASS - PART 2:
-------------------


class Airplane

  attr_reader :a
  attr_writer :b
  attr_accessor :c

  def initialize par1, par2
     @a = par1
  end

  def something
    ...
  end
end

attr_reader r
attr_writer w
attr_accessor rw

phone.a = 1 W
puts plane.a R


Airport1 ------ *Airplane

Inheritance


class Animal

  def run
     ...
  end

  def stop
    ...
  end
end


class Dog < Animal
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------
16. INHERITANCE:
----------------


class Animal

  def initialize par1, par2
    @a = par1
    @b = par2
    @arr = []
    @hh = {}
  end
end

animal = Animal.new 5, 'Abc'


class Dog < Animal

  def initialize
    super 'dog'
  end
end

naming conventions
camelcase


class Animal
  jump
  run
end

a.jump
a.run


public
private
protected


static methods


class Man

  def say
    puts "Hi"
  end
end

man = Man.new
man.say


class Man

  def self.say
    puts "Hi"
  end
end

Man.say


yield

lambda

x = lambda { ... }

x = lambda do |a|
  ...
end

x.call


module = namespace

module
class
def

::


require './file1.rb'


$global_variable
@instance_variable
@@class_variable
local_variable
Constant


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------
17. METAPROGRAMMING:
--------------------


send (function)

def mm
  puts x
end

mm

send :mm
send 'mm' - metaprogramming

:mm = gets.strip

def mm par1
  ...
end

send :mm, 55

def mm hash
  ...
end

a = {x => 1, y => 2}
mm a
mm {x => 1, y => 2}

send :mm, x: 1, y: 2

method_missing

class Something

  def method_missing name
    puts ...
  end
end

s = Something.new
s.asdbla

reserbed

def mm par, hh
end


split []

input = File.open 'test.txt', 'r'
output = File.open 'output.txt', 'w'


r
w
r+
w+

a


output = File.open 'test.txt', 'w'
output.write 'Something'
output.close

docx

input = File.open 'test.txt', 'r'

while line = input.gets
  puts line
end

File.rename 'file1', 'file2'

chmod (for linux)

r - read
w - write
x - execute

File.chmod

puts Dir.pwd


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------
18. HTTP / HTTPS:
-----------------


.include?

GET		POST
browser		server
<-		->

server - serv (service)


fidler


Raw


NET::Http


require 'net/http'

response = Net::HTTP.get 'avito.ru', '/moskva'
puts response

require 'net/http'
require 'uri'

uri = URI.parse 'https://www.avito.ru/moskva'
response = Net::HTTP.get uri
puts response

Std-lib - standart library

require 'net/http'
require 'uri'

uri = URI.parse 'https://www.avito.ru/moskva'
response = Net::HTTP.post_form uri, login: 'a', password: 'b'
puts response

require 'net/http'
require 'uri'

uri = URI.parse 'https://www.avito.ru/moskva'
response = Net::HTTP.post_form(uri, login: 'aaa', password: 'bbb').body
puts response

ctrl + f search something

gem - add_on

hipchat

gow

dir (command)
ls

grep

ruby app.rb | grep denied

https://github.com/bmatzelle/gow


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------
19. RUBY GEM'S & SINATRA:
-------------------------


> gem install hipchat

install ruby
isert to PATH
Development kit (MYSYS)

win + E - проводник
win + Prn Sc -


> ruby dk.rb init

config.yml:
C:/Ruby200-x64


> ruby dk.rb install

https://github.com/krdprog/rubyschool-notes

Environment Variables


permanent - постоянный


stackoverflow


https://github.com/sinatra/sinatra - sinatra documentation


get		post
methods for server

require 'sinatra'

> ruby first_sapp.rb:

== Sinatra (v2.1.0) has taken the stage on 4567 for development with backup from Thin
Thin web server (v1.7.2 codename Bachmanity)
Maximum connections set to 1024
Listening on localhost:4567, CTRL+C to stop


google > http://localhost:4567


views

view
frontand
backend

view - frontend


MVC - model view controller

ctrl + u          - view page source
ctrl + shift + i  - console (development tools)


erb - template engine


https://happyhours.io/
https://github.com/DefactoSoftware/Hours

http://putshello.wordpress.com/2014/08/03/installing-ruby-for-windows-the-right-way/


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------
20. GIT & UNGIT:
----------------


flash messages

@message

git
ungit

> node
> node -v

> npm install -g ungit

> start ungit


repository


ungit -> git
ungit		git
create repo	git init .


git commit
initial commit


http://putshello.wordpress.com/2014/08/14/installing-git-for-windows-git-ungit/


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------
21. HTML, FRONTEND & TWITTER BOOTSTRAP:
---------------------------------------


https://nicothin.pro/Atom/Atom-hotkeys.html - atom hotkeys

ctrl + d  - highlight word (atom)
ctrl + p  - find file
alt + \   - hendler


> git checkout 462ef4ff - go to the branch 462ef4ff


<head><head>


css	jacascript


/*Hello*/


body {
  font-family: Arial;
}


twitter bootstrap

css:

ctrl + alt + c  - colorpicker (atom)

<p>
.class
#id


https://github.com/bootstrap-ruby/sinatra-bootstrap

> git clone git@github.com:bootstrap-ruby/sinatra-bootstrap.git

Cloning into 'sinatra-bootstrap'...
Warning: Permanently added the RSA host key for IP address '140.82.121.4' to the list of known hosts.
remote: Enumerating objects: 296, done.
remote: Total 296 (delta 0), reused 0 (delta 0), pack-reused 296 eceiving objects:  85% (25
Receiving objects: 100% (296/296), 791.43 KiB | 1.48 MiB/s, done.
Resolving deltas: 100% (93/93), done.


> bundle install

Fetching gem metadata from https://rubygems.org/.....
Resolving dependencies...
Using bundler 1.16.0
Using mustermann 1.0.1
Using rack 2.0.3
Using rack-protection 2.0.0
Using tilt 2.0.8
Using sinatra 2.0.0
Bundle complete! 1 Gemfile dependency, 6 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.


> bundle exec ruby app.rb

[2021-01-11 20:18:01] INFO  WEBrick 1.4.2
[2021-01-11 20:18:01] INFO  ruby 2.5.8 (2020-03-31) [x64-mingw32]
== Sinatra (v2.0.0) has taken the stage on 4567 for development with backup from WEBrick
[2021-01-11 20:18:01] INFO  WEBrick::HTTPServer#start: pid=9600 port=4567


session[:identity]


javascript


HTML5


CSS3 Transitions


<table></table>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------
22. SINATRA, GIT, FRONTEND:
---------------------------


git push


https://github.com


git pull

> git pull
Already up to date.


> gem install sinatra-reloader
> gem install sinatra-contrib


require "sinatra/reloader" if development?


ctrl + k + b  - tree (sublime text3)

<input name="username" - for post method

<form action="/visit" method="post">


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------
23. GITHUB, JAVASCRIPT, JQUERY, JS PLUGINS:
-------------------------------------------


https://github.com


action="..." method="post"


post '/...' do
  ...
end


@username = params[:username]

CSS		javascript
bootstrap	jQuery

<script type="text/javascript">
  alert('Hello from visit page')
</script>

<script type="text/javascript" src="/scripts.js"></script>

selectors:
.class		#id

<script type="text/javascript">
  $('#aaa').css('background-color', '#b4fff6');
</script>

$('selector')

jQuery CDN:

<head>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
</head>

simplecolorpicker


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------
24. SINATRA, JQUERY, CSS:
-------------------------


<script type="text/javascript">
  $('#aaa').css('background-color', '#b4fff6');
  $('.bbb').css('background-color', '#d7feff');
  $('#color').simplecolorpicker();
</script>

CSS		javascript
jQuery - $

<body>
  <script>
    $(function() { ... });
  </script>
</body>

<script type="text/javascript">
  $('#aaa').css('background-color', '#b4fff6');
  $('.bbb').css('background-color', '#d7feff');

  $(function() {
    $('#color').simplecolorpicker();
  });
</script>

https://api.jquery.com/ready/ - documentation

<script type="text/javascript">
  $(function() {
    $('#color').simplecolorpicker();
    $('#aaa').css('background-color', '#b4fff6');
    $('.bbb').css('background-color', '#d7feff');
  });
</script>

def some do
  ...
end

function() {
  ...
}


checklist:

1. Atom / sublime / FAR
2. Git / Bash / Ungit + Github.com
3. http://localhost:4567
4. start ruby app.rb (bundle exec ruby app.rb)

validation

pull request

if @username == ''
  @error = 'Enter name'
  return erb :visit
end


return erb :visit if @error != ''

input_info.each do |key, value|
  @error = input_info[key] if params[key] == ''
  return erb :visit
end


input_info.each do |key, value|
  if params[key] == ''
    @error = input_info[key]
    return erb :visit
  end
end

@error = input_info.select { |key, _| params[key] == '' }.values.join(', ')
return erb :visit if @error != ''

discarte all

redirect '/visit'

CDN - Content Delivery Network

gem pony


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------
25. SQL, DATABASE, SQLITE3:
---------------------------


sqlite3


github ssh key


gem sqlite3


SQL


sqlite3 --version
3.32.2 2020-06-04 12:58:43 ec02243ea6ce33b090870ae55ab8aa2534b54d216d45c4aa2fdbb00e86861e8c


mySQL, postgresql

noSQL

SQL - Structured Querry Language


tables
columns


select * from Cars
where price < 1000

insert ...


copy * %WINDIR%\System32\


http://www.sqlishard.com/Exercise - select exercises


Create table:

( first column: id )

CREATE TABLE "Cars" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "model" VARCHAR,
  "price" INTEGER);


insert into Cars (
  id, model, price)
values (1, 'BMW', 10000)

insert into Cars (model, price)
values ('BMW', 10000)

> sqlite3 cars.sqlite

SQLite version 3.32.2 2020-06-04 12:58:43
Enter ".help" for usage hints.
sqlite>

sqlite> .tables
Cars

sqlite> .exit

sqlite> select * from cars;
1|Mersedes-benz|100000
2|Audi|90000
3|BMWi|80000
4|Toyota|70000
5|Nissan|60000
6|KIA|50000
7|LADA|10000

sqlite> .mode column
sqlite> .header on


sqlite> select * from cars;
id          model          price
----------  -------------  ----------
1           Mersedes-benz  100000
2           Audi           90000
3           BMWi           80000
4           Toyota         70000
5           Nissan         60000
6           KIA            50000
7           LADA           10000



sqlite> select model, price from Cars;
model          price
-------------  ----------
Mersedes-benz  100000
Audi           90000
BMWi           80000
Toyota         70000
Nissan         60000
KIA            50000
LADA           10000



sqlite> insert into Cars (model, price) values ('RangeRover', 200000);
sqlite> select model from Cars;
model
-------------
Mersedes-benz
Audi
BMWi
Toyota
Nissan
KIA
LADA
RangeRover



require 'sqlite3'

db = SQLite3::Database.new 'cars.sqlite'

db.execute ''
db.close


require 'sqlite3'

db = SQLite3::Database.new 'cars.sqlite'
db.execute "INSERT INTO Cars (model, price) VALUES ('jaguar', 250000)"
db.close


sqlite> select * from Cars;
1|Mersedes-benz|100000
2|Audi|90000
3|BMWi|80000
4|Toyota|70000
5|Nissan|60000
6|KIA|50000
7|LADA|10000
8|RangeRover|200000
9|jaguar|250000



db.execute ''

select ... ... "NO VARIABLES"

DROP TABLE Cars


SQL injection


http://rubyschool.us/files/sqlite3.zip


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------
26. SQL, SQLITE3, WEB:
----------------------


sqlite3 and web

... ? ... : ...
a = ...
b = ...

a + b == 4 ? true : false

<select class="form-select bbb" name="barber">
  <option <%= @barber == 'Jessie Pincman' ? 'selected' : '' %>>Jessie Pincman</option>
  <option>Walter White</option>
  <option>Gus Fring</option>
</select>

<option selected>Walter White</option>
<option <%= @barber == 'none' ? 'selected' : '' %> >None</option>

... -> nginx -> sinatra (rails) -> nginx -> ...

varchar(200)
text

nvarchar
ntext - unicode

sql text
ruby string

datetime - sql key word
datestamp
date_stamp


---


CREATE TABLE IF NOT EXISTS "Users" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "username" TEXT,
  "phone" TEXT,
  "datestamp" TEXT,
  "barber" TEXT,
  "color" TEXT
);

IF NOT EXISTS


----


> sqlite3 barbershop.sqlite

.tables
drop table Users


----


Initialization:

configure do

  db = SQLite3::Database.new 'barbershop.sqlite'
  db.execute 'CREATE TABLE IF NOT EXISTS "Users" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "username" TEXT,
    "phone" TEXT,
    "datestamp" TEXT,
    "barber" TEXT,
    "color" TEXT
    );'
end


---


def get_db
  return SQLite3::Database.new 'barber_shop.sqlite'
end

configure do
  db = get_db
  db.execute 'CREATE TABLE IF NOT EXISTS "Users" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "username" TEXT,
  "phone" TEXT,
  "datestamp" TEXT,
  "barber" TEXT,
  "color" TEXT
  )'
end

  db = get_db
  db.execute 'insert into Users (
  username,
  phone,
  datestamp,
  barber,
  color
  ) values (?, ?, ?, ?, ?)', [@username, @phone, @datetime, @barber, @color]

SELECT * FROM Users;


sqlite> select * from Users;

id          username    phone         datestamp         barber        color
----------  ----------  ------------  ----------------  ------------  ----------
1           John        +1 111222333  01.02.2022 13:40  Walter White  #fbd75b
2           Mike        +1 444555     23.11.2022 12:44  Jessie Pincm  #7bd148


---


Save data to database:

https://stackoverflow.com/questions/9614236/escaping-strings-for-ruby-sqlite-insert
https://stackoverflow.com/questions/13462112/inserting-ruby-string-into-sqlite


---


db.execute( "INSERT INTO Products ( stockID, Name ) VALUES ( ?, ? )", [id, name])


---


require 'sqlite3'

SQLite3::Database.new( "data.db" ) do |db|
  db.execute( "select * from table" ) do |row|
    puts row
  end
end


---


def get_db
  return SQLite::Database.new 'barbershop.sqlite
end


---


app.rb:

post '/' do

  db = get_db

  db.execute 'INSERT INTO Users (username, phobe, datestamp, barber, color)
    VALUES (?, ?, ?, ?, ?)', [@username, @phone, @datetime, @barber, @color]
end


---


sqlite3 databaseName.sqlite

.tables
.mode column
.header on
SELECT * FROM Users;


---


Datetimepicker:

https://github.com/xdan/datetimepicker


---


datapicker.css


RAW:

https://raw.githubusercontent.com/xdan/datetimepicker/master/jquery.datetimepicker.css


---


wget:

PS C:\Projects
\ruby
\repeat
\sinatra_bootstrap
\barber_bootstrap_clean_v2
\public > wget https://raw.githubusercontent.com/xdan/datetimepicker/master/jquery.datetimepicker.css

> wget https://github.com/xdan/datetimepicker/blob/master/jquery.datetimepicker.css

SYSTEM_WGETRC = c:/progra~1/wget/etc/wgetrc
syswgetrc = C:\Program Files (x86)\Gow/etc/wgetrc
--2021-01-13 07:53:08--  https://github.com/xdan/datetimepicker/blob/master/jquery.datetimepicker.css
Resolving github.com... 140.82.121.3
Connecting to github.com|140.82.121.3|:443... connected.
OpenSSL: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version
Unable to establish SSL connection.


---


> wget --no-check-certificate https://github.com/xdan/datetimepicker/blob/master/jquery.datetimepicker.css

https://github.com/xdan/datetimepicker
https://xdsoft.net/jqplugins/datetimepicker/ - documentation



---


<input id="datetimepicker" type="text" >
jQuery('#datetimepicker').datetimepicker();

=> 2014/03/15 05:06

axel
wget


---


get '/showusers' do
  erb 'Hello world'
end

db.results_as_hash = true

require 'sqlite3'

db = SQLite3::Database.new 'barber_shop.sqlite'
db.results_as_hash = true

db.execute 'select * from Users' do |row|
  puts "#{row['username']} visited at #{row['datestamp']}"
  puts '---'
end

def get_db
  db = SQLite3::Database.new 'barber_shop.sqlite'
  db.results_as_hash = true
  return db
end

Output from database:

require 'sqlite3'

db = SQLite3::Database.new 'barbershop.sqlite'
db.results_as_hash = true


---


db.execute 'SELECT * FROM Users' do |row|

  print row['name']
  print "\t\t"
  puts row['datestamp']
  puts '==='
end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------
27. SINATRA DEVELOPMENT ERB:
----------------------------


git clone https://github.com/ro31337/BarberShop.git


<table>
  <tr>
    <td><td>
  <tr>
</table>


<%= ... %>
<% ... %>


<tbody>
  <% @results.each do |row| %>
    <tr>
      <td><%= row['id'] %></td>
      <td><%= row['username'] %></td>
      <td><%= row['phone'] %></td>
      <td><%= row['datestamp'] %></td>
      <td><%= row['barber'] %></td>
      <td><%= row['color'] %></td>
    </tr>
  <% end %>
</tbody>


desc - descending


sqlite> select * from Users order by id desc;

id          username    phone       datestamp         barber        color
----------  ----------  ----------  ----------------  ------------  ----------
4           Vittorio    +1 8888888  2021/01/08 13:00  Walter White  #51b749
3           Eric        +1 234234   02.03.2021 11:00  Gus Fring     #e1e1e1
2           Mike        +1 444555   23.11.2022 12:44  Jessie Pincm  #7bd148
1           John        +1 1112223  01.02.2022 13:40  Walter White  #fbd75b


git reset hard HEAD~1


barbers hardcoded


sqlite> select * from Users where username = 'Mike';

id          username    phone       datestamp         barber          color
----------  ----------  ----------  ----------------  --------------  ----------
2           Mike        +1 444555   23.11.2022 12:44  Jessie Pincman  #7bd148


def is_barber_exists? db, name
  db.execute('select * from Barbers where name = ?', [name]).size > 0
end


def seed_db db, barbers
  barbers.each do |barber|
    if !is_barber_exists? db, barber
      db.execute 'insert into Barbers (name) values (?)', [barber]
    end
  end
end


seed_db db, ['Jessie Pinkman', 'Walter White', 'Gus Fring', 'Mike Smit']


migrations


before do
  db = get_db
  @barbers = db.execute 'select * from Barbers'
end


---


get '/show_users' do

  db = get_db

  @results = db.execute 'SELECT * FROM users
    ORDER BY id DESC'

  erb :show_users
end


---


<%= x + y %>  - show x + y result

<% x + y %>   - do x + y


---


Add Barber table to db:
-----------------------

configure do
  db = get_db
  db.execute 'CREATE TABLE IF NOT EXISTS Users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT,
    phone TEXT,
    datestamp TEXT,
    barber TEXT,
    color TEXT
  )'

  db.execut 'CREATE TABLE IF NOT EXISTS Barbers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    barbername TEXT
  )'
end


---


def is_barber_exists? db, barbername
  db.execute('SELECT * FROM Barbers WHERE barbername = ?', [barbername]).length > 0 (true / false)
end

def seed_db db, barbers
  barbers.each do |barber|
    if !is_barber_exists? db, barber
      db.execute 'INSERT INTO Barbers (barbername) VALUES (?)', [barber]
    end
  end
end


---


befor do
  db = get_db
  @barbers = db.execute 'SELECT * FROM Barbers'
end


---


<div class="mb-3">

  <label class="form-label">Choose your barber</label><br>

  <select class="form-select bbb" name="barber">
    <% @barbers.each do |item| %>
      <option <%= @barber == item['name'] ? 'selected' : '' %>><%= item['name'] %></option>
    <% end %>
  </select>
</div>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------
28. SINATRA DEVELOPMENT:
------------------------


git clone git@github.com:ro31337/Lepositorium.git


---


action="/new" method="POST"
style="width: 400px"
name="content"


---


gem install sqlite3
require 'sqlite3'


---


def ini_db
  @db = SQLite::Database.new 'leprosorium.sqlite'
  @db.results_as_hash = true
end


---


before do
  init_db
end


---


configure do
  init_db
  db.execute 'CREATE TABLE IF NOT EXISTS Posts (id INTEGER PRIMARY KEY AUTOINCREMENT, created_date DATE, content TEXT)'
end


---


Input validation:

  if content.length <= 0
    @error = 'Input post text'
    return erb :new
  end


---


sqlite> insert into Posts (content, created_date) values ('Something', datetime();


sqlite3:
--------

INSERT INTO Posts (content, created_date) VALUES ('Something', datetime());


ruby app.rb:
------------

@db.execute 'INSERT INTO Posts (content, created_date) VALUES (?, datetime())', [content]


ctrl + L - highlihgt string


---


.databases
.mode column
.header on


---


get '/' do
  @results = @db.execute 'SELECT * FROM Posts ORDER BY id DESC'

  erb :index
end


---


get '/details/:post_id' do

  post_id = params[:post_id]

  @results = @db.execute 'SELECT * FROM Posts WHERE id = ?', [post_id]

  erb "Displaying info for post with id: #{post_id}"
end


---


get '/details/:post_id' do

  post_id = params[:post_id]

  @results = @db.execute 'SELECT * FROM Posts WHERE id = ?', [post_id]
  @row = results[0]

  erb :details
end

post '/details/:post_id' do

  post_id = params[:post_id]

  content = params[:content]

  erb "#{content} #{post_id}"
end


---


configure do
  init_db
  db.execute 'CREATE TABLE IF NOT EXISTS Posts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_date DATE,
    content TEXT
  )'

  db.execute 'CREATE TABLE IF NOT EXISTS Comments (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_date DATE,
    content TEXT,
    post_id INTEGER
  )'
end


---


@db.execute 'INSERT INTO Comments (content, created_date, post_id) VALUES (?, datetime(), ?)', [content, post_id]


---


redirect to('/details/' + post_id)


---


@comments = @db.execute 'SELECT * FROM Comments WHERE post_id = ? ORDER BY id', [post_id]


---


<% @comments.each do |comment| %>
  <p>
    <%= comment['content'] %>
  </p>
<% end %>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------
29. ACRIVERECORD, DATABASE MAPPERS:
-----------------------------------


need gem's:
-----------

gemfile:
--------

source 'https://rubygems.org'

gem 'sinatra'
gem 'sqlite3'
gem 'activerecord'
gem 'sinatra-activerecord'
gem 'sinatra-contrib'

group :development do
  gem 'tux'
end

bundle install

config.ru:

require './app'
run Sinatra::Application

for tux

deploy, deployment - add app to hosting

require 'rubygems'
require 'sinatra'
require 'sinatra/reloader' if development?
require 'sinatra/activerecord'

set database:

set :database, 'sqlite3:barber_AR_29.sqlite'

essence:
client
barber

post
comment

create essence:


class Client < ActiveRecord::Base
end

tux:
> Clients.all

> rake -T

# app.rb
require "sinatra/activerecord"

set :database, {adapter: "sqlite3", database: "foo.sqlite3"}

# Rakefile
require "sinatra/activerecord/rake"

namespace :db do
  task :load_config do
    require "./app"
  end
end

rake aborted!
No Rakefile found (looking for: rakefile, Rakefile, rakefile.rb, Rakefile.rb)


(See full trace by running task with --trace)

si/si++ - Makefile
ruby - Rakefile

app.directory:
touch Rakefile:

require './app'
require 'sinatra/activerecord/rake'



> rake -T

rake db:create              # Creates the database from DATABASE_URL or con...
rake db:create_migration    # Create a migration (parameters: NAME, VERSION)
rake db:drop                # Drops the database from DATABASE_URL or confi...
rake db:environment:set     # Set the environment value for the database
rake db:fixtures:load       # Loads fixtures into the current environment's...
rake db:migrate             # Migrate the database (options: VERSION=x, VER...
rake db:migrate:down        # Runs the "down" for a given migration VERSION
rake db:migrate:redo        # Rolls back the database one migration and re-...
rake db:migrate:status      # Display status of migrations
rake db:migrate:up          # Runs the "up" for a given migration VERSION
rake db:prepare             # Runs setup if database does not exist, or run...
rake db:reset               # Drops and recreates the database from db/sche...
rake db:rollback            # Rolls the schema back to the previous version...
rake db:schema:cache:clear  # Clears a db/schema_cache.yml file
rake db:schema:cache:dump   # Creates a db/schema_cache.yml file
rake db:schema:dump         # Creates a database schema file (either db/sch...
rake db:schema:load         # Loads a database schema file (either db/schem...
rake db:seed                # Loads the seed data from db/seeds.rb
rake db:seed:replant        # Truncates tables of each database for current...
rake db:setup               # Creates the database, loads the schema, and i...
rake db:structure:dump      # Dumps the database structure to db/structure.sql
rake db:structure:load      # Recreates the databases from the structure.sq...
rake db:version             # Retrieves the current schema version number

rake db:create_migration NAME=name_of_migration - create new migration at db/migrate/
rake db:migrate - implement new created migration
rake db:rollback - back to previous migration



> rake db:create_migration NAME=create_clients

db/migrate/20210117064606_create_clients.rb



class CreateClients < ActiveRecord::Migration[6.1]
  def change
  end
end



10 years ago:

def up
end
def down
end...


now:

def change
end


class CreateClients < ActiveRecord::Migration[6.1]
  def change
    create_table :client do |t|
      t.text :name
      t.text :phone
      t.text :datestamp
      t.text :barber
      t.text :color

      t.timestamps
    end
  end
end

t.timestamps:
add 2 columns:
created_at
updated_at

t.text -> TEXT
t.string -> VARCHAR(255)


> rake db:migrate --trace

** Invoke db:migrate (first_time)
** Invoke db:load_config (first_time)
** Execute db:load_config
** Execute db:migrate
** Invoke db:_dump (first_time)
** Execute db:_dump
** Invoke db:schema:dump (first_time)
** Invoke db:load_config
** Execute db:schema:dump



gem install activerecord -v 5.2.4



> rake db:create_migration NAME=create_clients

db/migrate/20210117104230_create_clients.rb



> rake db:migrate

== 20210117104230 CreateClients: migrating ====================================
-- create_table(:client)
   -> 0.0037s
== 20210117104230 CreateClients: migrated (0.0182s) ===========================



sqlite> .tables

ar_internal_metadata  client                schema_migrations



mapping

ORM - Object Relational Mapper



> rake db:create_migration NAME=create_barbers

db/migrate/20210117112435_create_barbers.rb



> rake db:migrate

== 20210117112435 CreateBarbers: migrating ====================================
-- create_table(:barbers)
   -> 0.0028s
== 20210117112435 CreateBarbers: migrated (0.0986s) ===========================



> select * from Barbers;

id          name            created_at                  updated_at
----------  --------------  --------------------------  --------------------------
1           Jessie Pincman  2021-01-17 11:28:49.962575  2021-01-17 11:28:49.962575
2           Walter White    2021-01-17 11:28:50.022897  2021-01-17 11:28:50.022897
3           Gus Fring       2021-01-17 11:28:50.024329  2021-01-17 11:28:50.024329


tux
Loading development environment (Rack 1.3)


>> Barber.count

D, [2021-01-17T14:35:37.671472 #4368] DEBUG -- :    (2.8ms)  SELECT sqlite_version(*)
D, [2021-01-17T14:35:37.678405 #4368] DEBUG -- :    (0.2ms)  SELECT COUNT(*) FROM "barbers"



Barber.create - create object in database (one step)

b = Barber.new - create object in memory (two steps)
b.save - create object in database



>> Barber.create name: 'Mike Ehrmanthrauth'

D, [2021-01-17T14:41:06.734842 #4368] DEBUG -- :   TRANSACTION (0.1ms)  begin transaction
D, [2021-01-17T14:41:06.740245 #4368] DEBUG -- :   Barber Create (4.0ms)
INSERT INTO "barbers" ("name", "created_at", "updated_at") VALUES (?, ?, ?)
[["name", "Mike Ehrmanthrauth"],
["created_at", "2021-01-17 11:41:06.734372"],
["updated_at", "2021-01-17 11:41:06.734372"]]
D, [2021-01-17T14:41:06.830162 #4368] DEBUG -- :   TRANSACTION (88.6ms)  commit transaction
=> #<Barber id: 4, name: "Mike Ehrmanthrauth", created_at: "2021-01-17 11:41:06.734372000 +0000", updated_at: "2021-01-17 11:41:06.734372000 +0000">



sqlite> select * from Barbers;

id          name            created_at                  updated_at
----------  --------------  --------------------------  --------------------------
1           Jessie Pincman  2021-01-17 11:28:49.962575  2021-01-17 11:28:49.962575
2           Walter White    2021-01-17 11:28:50.022897  2021-01-17 11:28:50.022897
3           Gus Fring       2021-01-17 11:28:50.024329  2021-01-17 11:28:50.024329
4           Mike Ehrmanthr  2021-01-17 11:41:06.734372  2021-01-17 11:41:06.734372


>> b = Barber.new name: 'John Smith'

=> #<Barber id: nil, name: "John Smith", created_at: nil, updated_at: nil>


>> b.new_record?
=> true



>> b.save

D, [2021-01-17T14:47:03.458951 #4368] DEBUG -- :   TRANSACTION (0.1ms)  begin transaction
D, [2021-01-17T14:47:03.462257 #4368] DEBUG -- :
Barber Create (2.1ms)  INSERT INTO "barbers" ("name", "created_at", "updated_at") VALUES (?, ?, ?)
[["name", "John Smith"],
["created_at", "2021-01-17 11:47:03.458516"],
["updated_at", "2021-01-17 11:47:03.458516"]]
D, [2021-01-17T14:47:03.666676 #4368] DEBUG -- :   TRANSACTION (200.2ms)  commit transaction
=> true


>> b.new_record?
=> false



sqlite> select * from Barbers;

id          name            created_at                  updated_at
----------  --------------  --------------------------  --------------------------
1           Jessie Pincman  2021-01-17 11:28:49.962575  2021-01-17 11:28:49.962575
2           Walter White    2021-01-17 11:28:50.022897  2021-01-17 11:28:50.022897
3           Gus Fring       2021-01-17 11:28:50.024329  2021-01-17 11:28:50.024329
4           Mike Ehrmanthr  2021-01-17 11:41:06.734372  2021-01-17 11:41:06.734372
5           John Smith      2021-01-17 11:47:03.458516  2021-01-17 11:47:03.458516



>> Barber.all

D, [2021-01-17T14:57:51.890029 #4368] DEBUG -- :   Barber Load (0.4ms)
SELECT "barbers".* FROM "barbers" /* loading for inspect */ LIMIT ?
[["LIMIT", 11]]
=> #<ActiveRecord::Relation
[#<Barber id: 1, name: "Jessie Pincman", created_at: "2021-01-17 11:28:49.962575000 +0000", updated_at: "2021-01-17 11:28:49.962575000 +0000">,
#<Barber id: 2, name: "Walter White", created_at: "2021-01-17 11:28:50.022897000 +0000", updated_at: "2021-01-17 11:28:50.022897000 +0000">,
#<Barber id: 3, name: "Gus Fring", created_at: "2021-01-17 11:28:50.024329000 +0000", updated_at: "2021-01-17 11:28:50.024329000 +0000">,
#<Barber id: 4, name: "Mike Ehrmanthrauth", created_at: "2021-01-17 11:41:06.734372000 +0000", updated_at: "2021-01-17 11:41:06.734372000 +0000">,
#<Barber id: 5, name: "John Smith", created_at: "2021-01-17 11:47:03.458516000 +0000", updated_at: "2021-01-17 11:47:03.458516000 +0000">]>


http://guides.rubyonrails.org/active_record_querying.html


get '/' do

  @barbers = Barber.all

  erb :index
end


<div class="container mt-5 mb-5">
  <h2>List of our Barbers</h2>
</div>

<div class="container">
  <% @barbers.each do |barber| %>
    <p><%= barber.name %></p>
  <% end %>
</div>


shift + ctrl + i - console


migration:
----------

require 'sinatra/activerecord'

1. require "sinatra/activerecord"
set :database, {adapter: "sqlite3", database: "foo.sqlite3"}

2. create model:

class Model_name < ActiveRecord::Base
end

3. rake db:create_migration NAME=name_of_migration

4. edit migrate, create table:

class MigrateName < ActiveRecord::Migrarion
  def change
    create_table :table_name do |t|
      t.text :column_name

      t.timestamps
    end
  end
end

5. rake db:migrate


---


1. Need all gems (gem install) | (add to Gemfile) then (bundle install)
2. RakeFile


---


tux:
----

> Barber.count

D, [2020-06-05T22:59:30.752557 #14092] DEBUG -- :
(0.7ms)  SELECT COUNT(*) FROM "barbers"

=> 3


---


> Barber.create

D, [2020-06-05T23:05:52.492629 #14092] DEBUG -- :
(0.1ms)  begin transaction

D, [2020-06-05T23:05:52.523221 #14092] DEBUG -- :
Barber Create (29.8ms)  INSERT INTO "barbers"
("name", "created_at", "updated_at") VALUES (?, ?, ?)
[["name", "Mike Smith"], ["created_at", "2020-06-05 20:05:52.492086"],
 ["updated_at", "2020-06-05 20:05:52.492086"]]

D, [2020-06-05T23:05:52.629577 #14092] DEBUG -- :
(105.0ms)  commit transaction

=> #<Barber id: 4, name: "Mike Smith", created_at: "2020-06-05 20:05:52", updated_at: "2020-06-05 20:05:52">


---


tux:
----

>> b = Barber.new :name => 'Roman'

#=>

#<Barber id: nil, name: "Roman", created_at: nil, updated_at: nil>

>> b.new_record?
=> true

>> b.save

#=> INSERT INTO "barbers" ("name", "created_at", "updated_at") VALUES (?, ?, ?)  [["name", "Roman"], ..., ...


---


https://guides.rubyonrails.org/active_record_querying.html


---


index.erb:
----------

@barbers = Barber.all


---


@barbers = Barber.order "created_at DESC"


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------
30. ACTIVERECORD, SINATRA, REST:
--------------------------------


add database to sinatra app:
----------------------------

1. set database
{adapter: 'sqlite3', database: 'barber_AR_29.sqlite'}

2. create model
class Barber < ActiveRecord::Base
end

3. bundle exec rake db:create_migration NAME=migration_name

4. create table:
create_table :clients do |t|

  t.text :name

  t.timestamps
end
Client.create name: 'John'

5. bundle exec rake db:migrate


!gems:
------

gem 'sinatra'
gem 'sqlite3'
gem 'activerecord'
gem 'sinatra-activerecord'
gem 'sinatra-contrib'
gem 'rake'

group :development do
  gem 'tux'
end


!Rakefile:
----------

require './app'
require 'sinatra/activerecord/rake'

namespace :db do
  task :load_config do
    require "./app"
  end
end


data.save:
----------

c = Client.new
c.username = @username
c.phone = @phone
c.datestamp = @datetime
c.barber = @barber
c.color = @color
c.save


---


better way:
-----------

c = Client.new params[:client]
c.save


---


https://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-save

.save - check validation automaticly


---


validation:
-----------

class Client < ActiveRecord::Base
  validates :username, presence: true
  validates :phone, presence: true
  validates :datestamp, presence: true
  validates :color, presence: true
end


---


tux:
----

>> c = Client.new:

=> #<Client id: nil, username: nil, phone: nil, datestamp: nil, barber: nil, color: nil, created_at: nil, updated_at: nil>


>> c.valid?

=> false


>> c.errors.count:

=> 4


>> c.errors.messages:

=> {:username=>["can't be blank"], :phone=>["can't be blank"], :datestamp=>["can't be blank"], :color=>["can't be blank"]}


---


get '/visit' do

  @c = Client.new

  erb :visit
end


---


value="<%= @c.name %>"
value='<%= @c.datestamp %>

@error = c.errors.full_messages.first


---


post '/visit' do

  @c = Client.new params[:client]

  if !@c.save
    @error = @c.errors.full_messages.first
  else
    @message = @c.username + ', you signed'
  end

  erb :visit
end


---


https://guides.rubyonrails.org/active_record_validations.html


---


validates :username, presence: true, length: { minimum: 3 }


---


get '/barbers/:id' do

  @barber = Barber.find(params[:id])

  erb :barber
end


---


http://guides.rubyonrails.org/active_record_querying.html


---


@barber = Barber.find(params[:id])

.find - listens primary key


---


REST


---


before do
  @clients = Client.all
end

get '/secure/place' do

  @clients = Client.order('created_at DESC')

  erb :users
end


---


one_to_many


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------
31. REPEAT HTTP, WEB, JS:
-------------------------


https://stackoverflow.com/questions/20918321/how-exacty-http-protocol-works

> ping yandex.ru

Обмен пакетами с yandex.ru [5.255.255.60] с 32 байтами данных:
Ответ от 5.255.255.60: число байт=32 время=12мс TTL=249
Ответ от 5.255.255.60: число байт=32 время=13мс TTL=249
Ответ от 5.255.255.60: число байт=32 время=8мс TTL=249
Ответ от 5.255.255.60: число байт=32 время=8мс TTL=249

Статистика Ping для 5.255.255.60:
    Пакетов: отправлено = 4, получено = 4, потеряно = 0
    (0% потерь)
Приблизительное время приема-передачи в мс:
    Минимальное = 8мсек, Максимальное = 13 мсек, Среднее = 10 мсек


---


127.0.0.1 = localhost
:4567 = port
:80 - default port
127.0.0.1 = 127.0.0.1:80



SSL - https://ya.ru - connect by secure channel

:80	http://ya.ru
:443	https://ya.ru



1. domain => ip
see ip >ping site_name:


> ping google.com

Обмен пакетами с google.com [64.233.165.101] с 32 байтами данных:
Ответ от 64.233.165.101: число байт=32 время=23мс TTL=46
Ответ от 64.233.165.101: число байт=32 время=19мс TTL=46
Ответ от 64.233.165.101: число байт=32 время=23мс TTL=46
Ответ от 64.233.165.101: число байт=32 время=19мс TTL=46

Статистика Ping для 64.233.165.101:
    Пакетов: отправлено = 4, получено = 4, потеряно = 0
    (0% потерь)
Приблизительное время приема-передачи в мс:
    Минимальное = 19мсек, Максимальное = 23 мсек, Среднее = 21 мсек

64.233.165.101:...
------	       ----
ip             port

(localhost:4567)
4567 - port
80 - default port


2.

HTTP:
IP:

ping site.ru

80 http://ya.ru

443 https://ya.ru


3. GET / HTTP / 1.0


4. HTTP/1.1 200 OK


5. close

HTTP request: GET / HTTP/1.0


---


telnet cmd's:
-------------

c - close - закрыть текущее подключение
d - display - отобразить параметры операции. Доступные параметры:
- WILL AUTH (проверка подлинности NTLM)
- WONT AUTH
- WILL TERM TYPE
- WONT TERM TYPE
- LOCALECHO off
- LOCALECHO on

o - open имя_узла [Порт] - подключиться к сайту (по умолчанию, Порт = 23)
q - quit - выйти из telnet
set - set установить параметры ("set ?" для вывода их списка).

Доступные параметры:
- bsasdel     символ  будет отправляться как символ
- crlf        режим возврата каретки; приводит к отправке символов CR & LF
- delasbs     символ  будет отправляться как символ
- escape x    где x - символ переключения в режим telnet-терминала и обратно
- localecho   включение локального эха.
- logfile x   где x - файл входа текущего клиента в систему
- logging     выполнение входа в систему
- mode x      где x - консоль или поток
- ntlm        включение проверки подлинности NTLM.
- term x      где x - ansi, vt100, vt52, или vtnt
sen - send - отправить строки на сервер
st - status - вывести сведения о текущем состоянии
u - unset - сбросить параметры ("unset ?" для вывода их списка)

Доступные параметры:
- bsasdel     символ  будет отправляться как символ
- crlf        режим возврата каретки; приводит к отправке символов CR & LFbsasdel     символ  будет отправляться как символ
- crlf        режим перевода строки; приводит к отправке символа CR
- delasbs     символ  будет отправляться как символ
- escape      символ переключения в режим telnet-терминала и обратно не задан
- localecho   отключение локального эха
- logging     отключение выполнения входа в систему
- ntlm        отключение проверки подлинности NTLM.
?/h - help вывести справку


---


HTTP:
stateless

IRC:
unstateless


---


url.unescape.com


---


gem devise


---


HTTP:
-----

http://stackoverflow.com/questions/20918321/how-exacty-http-protocol-works


---


CMD:
----

ping ya.ru


---


127.0.0.1:4567

80 http://ya.ru

443 https://ya.ru

GET / HTTP / 1.0


---


telnet

telnet ya.ru 80


---


http://stackoverflow.com/questions/2092527/what-happens-when-you-type-in-a-url-in-browser:

1.  browser checks cache; if requested object is in cache and is fresh, skip to #9
2.  browser asks OS for server's IP address
3.  OS makes a DNS lookup and replies the IP address to the browser
4.  browser opens a TCP connection to server (this step is much more complex with HTTPS)
5.  browser sends the HTTP request through TCP connection
6.  browser receives HTTP response and may close the TCP connection, or reuse it for another request
7.  browser checks if the response is a redirect or a conditional response (3xx result status codes), authorization request (401), error (4xx and 5xx), etc.; these are handled differently from normal responses (2xx)
8.  if cacheable, response is stored in cache
9.  browser decodes response (e.g. if it's gzipped)
10. browser determines what to do with response (e.g. is it a HTML page, is it an image, is it a sound clip?)
11. browser renders response, or offers a download dialog for unrecognized types

stateless - HTTP/HTTPS
IRC - no stateless protocol

http://stackoverflow.com/questions/13200152/why-say-that-http-is-a-stateless-protocol

autorization mechanism:

1. the use of HTTP cookies.
2. server side sessions,
3. hidden variables (when the current page contains a form), and
4. URL-rewriting using URI-encoded parameters, e.g., /index.php?session_id=some_unique_session_code

browser -> server
state is only in apps

(@booking = Client.new params[:client])

url.unescape online (online decoder)


---


gem devise

javascript

vanilla.js

http://vanilla-js.com

js	jQuery


---


def somethig
  puts "Hello"
end

function test() {
  alert('Hello');
}

ruby:
something

js:
---

by hendler:
-----------

onclick="test()"
<button class="btn btn-primary btn-lg" type="button" name="button" onclick="test()">Click me</button>


---


node.js
meteor.js


---


script.js:
----------

let x = 1

function something () {

  alert(x)
  x += 1
}

x - don't save automatically


---


index.erb:
----------

<button type="button" class="btn btn-primary btn-lg" onclick="something()">Click me</button>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------
32. SINATRA ONLINE STORE, PIZZASHOP, LOCALSTORAGE:
--------------------------------------------------


Test question:
--------------

1. What is class?
2. What is Object?
3. What is module?
4. What is mixins?
5. What is access control in Ruby?


---


1. classes are a blue-print for constructing computer models for real or virtual objects
classes hold data, have methods that interact with that data, and are used to instantiate objects

class WhatAreClasses
  def initialize
    @data = "I'm instance data of this object. Hello."
  end

  def method
    puts @data.gsub("instance", "altered")
  end
end

object = WhatAreClasses.new
object.method
 #=> I'm altered data of this object. Hello.


2. An instance of a class
To some, it's also the root class in ruby
Classes themselves descend from the Object root class


3. Modules serve as a mechanism for namespaces

module ANamespace
  class AClass
    def initialize
      puts "Another object, coming right up!"
    end
  end
end

ANamespace::AClass.new
 #=> Another object, coming right up!


4. Also, modules provide as a mechanism for multiple inheritance via mix-ins and cannot be instantiated like classes can

module AMixIn
  def who_am_i?
    puts "An existentialist, that's who."
  end
end


# String is already the parent class

class DeepString < String
  # extend adds instance methods from AMixIn as class methods
  extend AMixIn
end

DeepString.who_am_i?
 #=> An existentialist, that's who.

AMixIn.new
 #=> NoMethodError: undefined method ‘new’ for AMixIn:Module


5. All methods, no matter the access control, can be accessed within the class

Public methods enforce no access control -- they can be called in any scope.
Protected methods are only accessible to other objects of the same class.
Private methods are only accessible within the context of the current object.


class AccessLevel

  def something_interesting
    another = AccessLevel.new
    another.public_method
    another.protected_method
    another.private_method
  end

  def public_method
    puts "Public method. Nice to meet you."
  end

  protected

  def protected_method
    puts "Protected method. Sweet!"
  end

  private

  def private_method
    puts "Incoming exception!"
  end
end


AccessLevel.new.something_interesting
 #=> Public method.  Nice to meet you.
 #=> Protected method.  Sweet!
 #=> NoMethodError: private method ‘private_method’ called for
 #=>  #<AccessLevel:0x898c8>

Here, I'm looking for the dot operator (or period operator), the Object#send method, or method(:foo).call

object = Object.new
puts object.object_id
 #=> 282660

puts object.send(:object_id)
 #=> 282660

puts object.method(:object_id).call # (Kudos to Ezra)
 #=> 282660



https://gist.github.com/ryansobol/5252653
Modernizr - javascript framework

https://github.com/ro31337/first-visit-js
Modernizr


---


About Local Storage:
--------------------

www.w3schools.com/html/html5_webstorage.asp

window.localStorage - хранит данные без срока годности
window.sessionStorage - данные теряются при закрытии вкладки браузера!


---


localStorage - is Hash


---


window.localStorage - stores data with no expiration date
window.sessionStorage - stores data for one session (data is lost when the browser tab is closed)

Test of local storage:
----------------------

if (typeof(Storage) !== "undefined") {

  //Code for localStorage/sessionStorage.
} else {
  // Sorry! No Web Storage support..
}


---


Store:
------

localStorage.setItem("lastname", "Smith");


Retrieve:
---------

document.getElementById("result").innerHTML = localStorage.getItem("lastname");


---


Store:
------

localStorage.lastname = "Smith";


Retrieve:
---------

document.getElementById("result").innerHTML = localStorage.lastname;


---


localStorage.removeItem("lastname");


---


Count example:
--------------

if (localStorage.clickcount) {

  localStorage.clickcount = Number(localStorage.clickcount) + 1;
} else {
  localStorage.clickcount = 1;
}
document.getElementById("result").innerHTML = "You have clicked the button " +
localStorage.clickcount + " time(s).";


---


save variable ruby:
-------------------


hh['x'] = 1
hh['x'] = hh['x'] + 1 / hh['x'] += 1


---


function something () {

  let x = window.localStorage.getItem('item_1')
  window.localStorage.setItem('item_1', 555)

  alert(x)
}


---


function something () {

  let x = window.localStorage.getItem('item_1')
  x++
  window.localStorage.setItem('item_1', x)
  alert(x)
}


---


http://stackoverflow.com/questions/3138564/looping-through-localstorage-in-html5-and-javascript


---


for (var i = 0; i < localStorage.length; i++){

  $('body').append(localStorage.getItem(localStorage.key(i)));
}


---


seed.db


---


> rake db:create_migration NAME=create_products
db/migrate/20210118081656_create_products.rb


1.

require 'sinatra/activerecord':
set :database "sqlite3:pizzashop.sqlite"


2.

create model:
class Product < ActiveRecord::Base
end


3.

create Rakefile
cat Rakefile:
require "./app"
require "sinatra/activerecord/rake"


4.

create migrate:
rake db:create_migration NAME=create_products


---


app_Name/db/migrate/111_create_products.rb
cat 111_create_products.rb:

class CreateProducts < ActiveRecord::Migration
  def change
  end
end


---

5.

create_table :products do |t|

  t.timestamps
end


---


id, created_at, updated_at (automaticly becouse - t.timestamps)


---


6.

api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html


---


class CreateProducts < ActiveRecord::Migration
  def change
    create_table :products do |t|
      t.string :title
      t.text :description
      t.decimal :price
      t.decemal :decimal
      t.boolean :is_spicy
      t.boolean :is_veg
      t.boolean :is_best_offer
      t.string :path_to_image

      t.timestamps
    end
  end
end


---


$ rake db:migrate

== 20210118081656 CreateProducts: migrating ===================================
-- create_table(:products)
   -> 0.0070s
== 20210118081656 CreateProducts: migrated (0.0104s) ==========================


Add product: (seed)
-------------------

1.

$ rake db:create_migration NAME=add_products

$ rake db:create_migration NAME=add_products
db/migrate/20210118085117_add_products.rb


2.

Create product:
---------------

class AddProducts < ActiveRecord::Migration
  def change
    Product.create ({
      title: 'Huwaiian',
      description: 'This is Huwaiian pizza',
      price: 350,
      size: 30,
      is_spicy: false,
      is_veg: false,
      is_best_offer: false,
      path_to_image: 'images/pizza_hawaiian.jpg'
    })

    Product.create ({
      title: 'Pepperoni',
      description: 'This is Pepperoni pizza',
      price: 400,
      size: 30,
      is_spicy: true,
      is_veg: false,
      is_best_offer: false,
      path_to_image: 'images/pizza_pepperoni.jpg'
    })

    Product.create ({
      title: 'Vegetarian',
      description: 'This is Vegetarian pizza',
      price: 350,
      size: 30,
      is_spicy: false,
      is_veg: true,
      is_best_offer: false,
      path_to_image: 'images/pizza_vegetarian.jpg'
    })
  end
end


3.

$ rake db:migrate

== 20210118085117 AddProducts: migrating ======================================
== 20210118085117 AddProducts: migrated (0.0447s) =============================


4.

Check info:
-----------

$ sqlite3 pizzashop.sqlite

.tables
select * from porducts


---


rake db:create_migration NAME=name_of_migration - создает новую миграцию в папку db/migrate/
rake db:migrate - применяет (выполняет) созданную миграцию
rake db:rollback - возврат к предыдущей миграции

rake db:create_migration NAME=create_products
rake db:migrate

seed database - наплнить базу данных начальными значениями


get bootstrap:
--------------

grid system:
------------

container1 -> *rows1 -> *cols

length of col:
--------------

1 - 12

xs - xsmall (swatch)
sm - small  (iphone)
md - middle (ipad)
lg - large  (pc, mac)


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------
33. PIZZASHOP, FRONTAND:
------------------------


https://gist.github.com/ryansobol/5252653


Test:
-----

1. Two ways call method?
2. Ruby construction: x || = y?
3. What does self mean?
4. What is Proc?
5. yield?


1. Here, I'm looking for the dot operator (or period operator),
the Object#send method,
or method(:foo).call:

object = Object.new
puts object.object_id
 #=> 282660
animal = Animal.new
animal.run

puts object.send(:object_id)
 #=> 282660
animal.send(:run)

puts object.method(:object_id).call # (Kudos to Ezra)
 #=> 282660
animal.method(:run).call


2.

# a = b when a == false
# otherwise a remains unchanged
a = a || b

a = 1
b = 2
a ||= b #=> a = 1

a = nil
b = 2
a ||= b #=> a = 2

a = false
b = 2
a ||= b #=> a = 2


3. self always refers to the current object. But this question is more difficult than it seems
because Classes are also objects in ruby

class WhatIsSelf

  def test
    puts "At the instance level, self is #{self}"
  end

  def self.test
    puts "At the class level, self is #{self}"
  end
end


WhatIsSelf.test
 #=> At the class level, self is WhatIsSelf

WhatIsSelf.new.test
 #=> At the instance level, self is #<WhatIsSelf:0x28190>

This short snippet indicates two things:

at the class level, self is the class, in this case WhatIsSelf.

at the instance level, self is the instance in context, in this case the instance
of WhatIsSelf at memory location 0x28190


4. Everyone usually confuses procs with blocks, but the strongest rubyist can grok the true meaning of the question

Essentially, Procs are anonymous methods (or nameless functions) containing code.
They can be placed inside a variable and passed around like any other object or scalar value.
They are created by Proc.new, lambda, and blocks (invoked by the yield keyword)

# wants a proc, a lambda, AND a block

def three_ways(proc, lambda, &block)
  proc.call
  lambda.call
  yield # like block.call
  puts "#{proc.inspect} #{lambda.inspect} #{block.inspect}"
end

anonymous = Proc.new { puts "I'm a Proc for sure." }
nameless  = lambda { puts "But what about me?" }

three_ways(anonymous, nameless) do
  puts "I'm a block, but could it be???"
end

 #=> I'm a Proc for sure.
 #=> But what about me?
 #=> I'm a block, but could it be???
 #=> #<Proc:0x00089d64> #<Proc:0x00089c74> #<Proc:0x00089b34>

def test
  yield
end

test do
  puts 'Hello'
end


---


https://www.ruby-forum.com/topic/151660/

git clone https://github.com/ro31337/PizzaShop.git


---


localStorage (for cart)


---


Show orders:
------------


---


bootstrap grid:

<div class = "row">
  <div class= "col-md-1"></div>
</div>


---


google:
-------

dynamic number of items bootstrap site: stackoverflow.com:

https://stackoverflow.com/questions/19607851/use-bootstrap0grid0with-variable-number-of-ceils


---


<div class="row">
    <div class="col-md-3"> <img src="1"> </div>
    <div class="col-md-3"> <img src="2"> </div>
    <div class="col-md-3"> <img src="3"> </div>
    <div class="col-md-3"> <img src="4"> </div>
    <div class="col-md-3"> <img src="5"> </div>
    <div class="col-md-3"> <img src="6"> </div>
</div>


---


get '/' do

  @products = Product.all

  erb :index
end


---


const add_to_cart = (id) => {
  alert('Pizza with id' + id)
}

index.erb:

<button type="button" class="btn btn-success" onclick="add_to_cart(<%= p.id %>)">Success</button>


---


data structure


---


show products (index/view):
@products = Product.all


---


Data structure (hash):
----------------------

key | value
key = id's
value = count


---


hh = {}

loop do
  print "Enter product id: "
  id = gets.chomp

  print "Enter amount (how much items you want to wrder): "
  n = gets.chomp.to_i

  x = hh[id].to_i # read hash value (0 if not exists)
  x = x + n # increase by n
  hh[id] = x # set hash value

  puts hh.inspect
  puts '----------------'
end


> ruby data_structure.rb

Enter product id: 1
Enter amount (how much items you want to order): 4
{"1"=>4}


hh = {}

loop do
  print 'Enter product id: '
  id = gets.chomp

  print 'Enter amount (how much items you want to order): '
  n = gets.chomp.to_i

  hh[id] = n

  puts hh.inspect
  puts '-------'
end


>ruby data_structure.rb

Enter product id: 2
Enter amount (how much items you want to order): 5
{"2"=>5}
-------
Enter product id: 1
Enter amount (how much items you want to order): 6
{"2"=>5, "1"=>6}
-------
Enter product id: 1
Enter amount (how much items you want to order): 4
{"2"=>5, "1"=>4}
-------



hh = {}

loop do
  print 'Enter product id: '
  id = gets.chomp

  print 'Enter amount (how much items you want to order): '
  n = gets.chomp.to_i

  x = hh[id].to_i
  x += n
  hh[id] = x

  puts hh.inspect
  puts '-------'
end


>ruby data_structure.rb

Enter product id: 4
Enter amount (how much items you want to order): 3
{"4"=>3}
-------
Enter product id: 4
Enter amount (how much items you want to order): 1
{"4"=>4}
-------
Enter product id: 3
Enter amount (how much items you want to order): 6
{"4"=>4, "3"=>6}
-------
Enter product id: 4
Enter amount (how much items you want to order): 10
{"4"=>14, "3"=>6}
-------


---


json


---


const add_to_cart = (id) => {
  let x = window.localStorage.getItem('product_' + id)
  x++
  window.localStorage.setItem('product_' + id, x)
}


console:
--------

localStorage

Storage {product_1: "1", product_2: "1", aaa: "55511117", bbb: "5", length: 4}
aaa: "55511117"
bbb: "5"
length: 4
product_1: "1"
product_2: "1"


localStorage.clear()

localStorage
Storage {length: 0}


---


const add_to_cart = (id) => {
  let key = 'product_' + id
  let x = window.localStorage.getItem(key)
  x++
  window.localStorage.setItem(key, x)
}


---


product_1
for localStorage

localStorage.clear(); (by console)


---


extract variable, code refactoring:


---


hh = {}

loop do
  print "Enter product id: "
  id = gets.chomp

  print "Enter amount (how much items you want to wrder): "
  n = gets.chomp.to_i

  x = hh[id].to_i # read hash value (0 if not exists)
  x = x + n # increase by n
  hh[id] = x # set hash value

  total = 0

  hh.each do |key, value| # calculate total items in cart
    total += value
  end

  # puts total variable

  puts "Total items in cart: #{total}"

  puts hh.inspect
  puts '----------------'
end


---


hh = {}

loop do
  print 'Enter product id: '
  id = gets.chomp

  print 'Enter amount (how much items you want to order): '
  n = gets.chomp.to_i

  x = hh[id].to_i
  x += n
  hh[id] = x

  puts hh.inspect

  total = 0
  hh.each do |key, value|
    total += value
  end

  puts "Total items in cart: #{total}"

  puts '-------'
end

>ruby data_structure.rb

Enter product id: 3
Enter amount (how much items you want to order): 5
{"3"=>5}
Total items in cart: 5
-------
Enter product id: 3
Enter amount (how much items you want to order): 7
{"3"=>12}
Total items in cart: 12
-------
Enter product id: 1
Enter amount (how much items you want to order): 9
{"3"=>12, "1"=>9}
Total items in cart: 21
-------
Enter product id: 1
Enter amount (how much items you want to order): 1
{"3"=>12, "1"=>10}
Total items in cart: 22
-------


google:
enumirate localStorage:

stackoverflow.com


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------
34. PIZZASHOP, RUBY ON RAILS:
-----------------------------


>irb

> x = 1
=> 1

> x += 1
=> 2


x ||= y

x op = y
x += 1

x = x || y
x || = y


---


PizzaShop data, cart data structure:
------------------------------------

key		value
---		---
product1	amount


window.localStorage.length
3


> window.localStorage

Storage {product_1: "5", product_2: "4", product_3: "1", length: 3}
length: 3
product_1: "5"
product_2: "4"
product_3: "1"


> window.localStorage.key(0)
"product_1"


> let key = window.localStorage.key(0)
undefined


> key
"product_1"


> let value = window.localStorage.getItem(key)
undefined


> value
"5"


> key.indexOf('product_')
0


> key.indexOf('product_') == 0
true


cart_get_number_of_items()
10


.indexOf(some_key)
key.indexOf(some_key) == 0


window.localStorage.clear()


---


const cart_get_number_of_items = () => {
  let cnt = 0
  for (let i = 0; i < window.localStorage.length; i++) {
    let key = window.localStorage.key(i) // get key, hh[x] = hh[(x += 1)]
    let value = window.localStorage.getItem(key) // get value, in ruby: y = hh[x]
    if (key.indexOf('product_') == 0) {
      cnt++
    }
  }
  return cnt
}


---


const cart_get_number_of_items = () => {
  let cnt = 0
  for (let i = 0; i < window.localStorage.length; i++) {
    let key = window.localStorage.key(i) // get key, hh[x] = hh[(x += 1)]
    let value = window.localStorage.getItem(key) // get value, in ruby: y = hh[x]
    if (key.indexOf('product_') === 0) {
      cnt += value * 1
    }
  }
  return cnt
}


---


const cart_get_orders = () => {
  let orders = ''
  for (let i = 0; i < window.localStorage.length; i++) {
    let key = window.localStorage.key(i)
    let value = window.localStorage.getItem(key)

    if (key.indexOf('product_') === 0) {
      orders = orders + key + '=' + value + ','
    }
  }
  return orders
}


---


const update_orders_input = () => {
  let orders = cart_get_orders()
  $('#orders_input').val(orders)
}


const update_orders_button = () => {
  let text = 'Cart (' + cart_get_number_of_items() + ')'
  $('#orders_button').val(text)
}


---


script.js:
----------

const something = () => {
  let x = window.localStorage.getItem('item_2')
  x++
  window.localStorage.setItem('item_2', x)
  alert(x);
}


const add_to_cart = (id) => {
  let key = 'product_' + id;
  let x = window.localStorage.getItem(key)
  x++
  window.localStorage.setItem(key, x)

  update_orders_input()
  update_orders_button()
}


const update_orders_input = () => {
  let orders = cart_get_orders()
  $('#orders_input').val(orders)
}


const update_orders_button = () => {
  let text = 'Cart (' + cart_get_number_of_items() + ')'
  $('#orders_button').val(text)
}


const cart_get_number_of_items = () => {
  let cnt = 0
  for (let i = 0; i < window.localStorage.length; i++) {
    let key = window.localStorage.key(i) // get key, hh[x] = hh[(x += 1)]
    let value = window.localStorage.getItem(key) // get value, in ruby: y = hh[x]
    if (key.indexOf('product_') === 0) {
      cnt += value * 1
    }
  }
  return cnt
}


const cart_get_orders = () => {
  let orders = ''
  for (let i = 0; i < window.localStorage.length; i++) {
    let key = window.localStorage.key(i)
    let value = window.localStorage.getItem(key)

    if (key.indexOf('product_') === 0) {
      orders = orders + key + '=' + value + ','
    }
  }
  return orders
}


cart_get_orders()
"product_1=3,product_2=1,product_3=1,"


---


json - universal data type


---


https://github.com/DefactoSoftware/Hours


---


Rails:
------

environments:
-------------

development
test
production


---


Rails work steps:
-----------------

1. boot.rb
2. rails
3. environment.rb
4. development.rb || test.rb || production.rb


---


Rails create:
-------------

1. rails new project_name
2. cd project_name
3. bundle install


---


Rails app starting schema:
--------------------------

1. boot.rb
2. rails
3. environment.rb
4. development.rb || test.rb || production.rb (app/config/environment/...)


---


rails application start cmd:
----------------------------

$ rails server


---


Using host:
-----------

http://localhost:3000


---


MVC:
----

Model
 View
  Controller


---


Create controller:
------------------

rails generate controller home index:
-------------------------------------

create    app/helpers/home_helper.rb
invoke    test_unit
invoke  assets
invoke    scss

create      app/assets/stylesheets/home.scss


---


app/controllers/home_controller.rb:

class HomeController < ApplecationController
  def index
  end
end


---


http://localhost:3000/home/index


---


Rails.application.routes.draw do
  get 'home/index'
end

Rails.application.routes.draw do
  get '/' => 'home#index'
end

https://guides.rubyonrails.org/routing.html


---


http://localhost:3000


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

---------------
35. RUBY TESTS:
---------------

Tests:
------

1. What is unit testing?
2. Typization?
3. Ruby gems?
4. REST?


---


Unit testing:
-------------

Testing moduls of app.

test coverage = module:

class SomeClass
end

class SomeClassTest
end


1. Unit testing, simply put, is testing methods -- the smallest unit in object-oriented programming.
Strong candidates will argue that it allows a developer to flesh out their API before it's consumed by
other systems in the application.

The primary way to achieve this is to assert that the actual result of the method matches an expected result.

require "test/unit"

class Brokened

  def uh_oh
    "I needs fixing"
  end
end

class BrokenedTest < Test::Unit::TestCase

  def test_uh_oh
    actual = Brokened.new
    assert_equal("I'm all better!", actual.uh_oh)
  end
end

 #=> Started
 #=> F
 #=> Finished in 0.663831 seconds.
 #=>
 #=>   1) Failure:
 #=> test_uh_oh:11
 #=> <"I'm all better!"> expected but was
 #=> <"I needs fixing">.
 #=>
 #=> 1 tests, 1 assertions, 1 failures, 0 errors


2.

// Java
public boolean isEmpty(String s) {
  return s.length() == 0;
}

# ruby
def empty?(s)
  return s.size == 0
end


The Java method only accepts Strings as arguments and only returns a boolean while...

The ruby method accepts any Object and could return anything, but in this case will return
a boolean if executed without exceptions.
That ruby program use less code and are more flexible.

Developers cannot be 100% certain that all arguments sent this empty? method will have a size method that is
publicly accessible. Also, ruby is an interpreted language and it may take longer to run than compiled programs,
such as Java, that are programmed similarly.

She could write unit tests or specs to ensure her application behaves as intended.
She could also profile her application with tools like the unix time command, the ruby Benchmark class,
and the ruby library called ruby-prof

A cunning programmer would also argue that these two techniques ought to be used for
both static and dynamic languages when developing complex systems

3. rubygems is package manager software for ruby libraries (i.e. gems).
The package manager has basic CRUD operations, dependency trees, and supports asynchronous
communication between multiple gem servers


4. rest


---


Integration testing: (automaticly from browser)

http://odesk-tests.com/


---


http://guides.rubyonrails.org/active_record_querying.html

less flexible
more flexible


---


smoge-test electronicals tests (little check)


---


PizzaShop data format:
----------------------

key		value
---		-----
1		2
3		1
(id)		(amount)


---


cart_get_orders()
"product_1=2,product_2=1,product_3=1,"

orders = "product_1=2,product_2=1,product_3=1,"

s1 = orders.split(/,/)

puts s1.inspect
puts

s1.each do |order|
  s2 = order.split(/=/)
  s3 = s2[0].split(/_/)

  key = s3[1]
  value = s2[1]

  puts "Product id: #{key}, amount of items: #{value}"
end


Atom Runner: split_hash.rb
["product_1=2", "product_2=1", "product_3=1"]

Product id: 1, amount of items: 2
Product id: 2, amount of items: 1
Product id: 3, amount of items: 1


json!!!


https://guides.rubyonrails.org/active_record_querying.html

.find


---


flexible
more flexible


---


Pizza Shop:
-----------

post cart method for show:

def parse_orders_line orders_line

  s1 = orders_line.split(/,/)
  arr = []

  s1.each do |x|

    s2 = x.split(/=/)
    s3 = s2[0].split(/_/)

    id = s3[1]
    cnt = s2[1]

    arr2 = [id, cnt]
    arr.push arr2
  end

  return arr
end


---


post '/cart' do

  orders_input = params[:orders]
  @orders = parse_orders_input orders_input

  erb :cart
end


---


Activerecord:
-------------

.find (looking for item by id)
http://guides.rubyonrails.org/active_record_querying.html


---


@items.each do |item|
  item[0] = @products.find(item[0])
end


---


post '/cart' do

  @orders_input = params[:orderstring]
  @items = parse_orders_input @orders_input

  @items.each do |item|
    item[0] = Product.find(item[0])
  end

  erb :cart
end

get '/cart' do

  erb :cart
end


orders_line = "product_1=2,product_2=1,product_3=1,"

def parse_orders_line orders_line

  s1 = orders_line.split(/,/)
  arr = []

  s1.each do |order|

    s2 = order.split(/=/)
    s3 = s2[0].split(/_/)

    id = s3[1]
    cnt = s2[1]

    arr2 = [id, cnt]
    arr.push arr2
  end

  return arr
end

puts (parse_orders_line orders_line).inspect


Atom Runner: split_hash.rb
[["1", "2"], ["2", "1"], ["3", "1"]]


data structure:
[
  ['1', '4'],
  ['2', '5'],
  ['3', '5']
]


.find


flexible


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------
36. SINATRA, PIZZASHOP, WEB, REPEAT:
------------------------------------


HTTP protocol methods:
----------------------

POST /cart (html <form action="...">)
product_1 = 3 ... send (html <form action="...">)


---


GET /cart?...&...&...


---


PUT


---


DELETE


---


1. GET
2. POST
3. PUT
4. DELETE


---


Representetive State Transfer

REST (pattern for product):
---------------------------

-------------------------------------------------------------------------------------------------------
1.

index		/products		(get)		- list of products
show		/products/id		(get)		- show concret product
-------------------------------------------------------------------------------------------------------
2.

new		/products/new		(get)		- output form for create new single product
create		/products		(post)		- creating new model with new params
-------------------------------------------------------------------------------------------------------
3.

edit		/products/id/edit	(get)		- output page for editing product
update		/products/id		(put)		- editing created product with new edit params
-------------------------------------------------------------------------------------------------------
4.

destroy		/products/id		(delete)	- delete product
-------------------------------------------------------------------------------------------------------


---


BitBucket


---


Create essence:
---------------

1. add

class Order < Activerecord::Base
end


2. run

$ rake db:create_migration NAME=add_orders


---


class AddOrders < ActiveRecord::Migration
  def change
  end
end


$ rake db:create_migration NAME=add_orders

db/migrate/20210119135926_add_orders.rb


$ rake db:migrate

== 20210119135926 AddOrders: migrating ========================================
-- create_table(:orders)
   -> 0.0330s
== 20210119135926 AddOrders: migrated (0.0337s) ===============================


post '/place_order' do

  @order = Order.create params[:order]

  erb "Thank you, your order has been placed."
end


---


post '/place_order' do

  @orders = Order.create params[:orders]

  erb :place_order
end


---


onclick="alert('danger');return false"
onclick="alert('a');return false


---


<button onclick="alert('danger');return false" class="btn btn-danger btn-lg">Cancel</button>


---


const cancel_order = () => {

  alert('aaa');
  return false;
}

cancel_order();

onclick="return cancel_order()"


---


const cancel_order = () => {

  window.localStorage.clear()

  update_orders_input()
  update_orders_button()

  return false
}


---


Plunker


---


$('#cart').text('Your cart is now empty')


---


div id="cart"


---


const cancel_order = () => {

  window.localStorage.clear()

  update_orders_input()
  update_orders_button()

  $('#cart').text('Your cart is now empty')

  return false
}


---


Clean cart:

<script type="text/javascript">

  $(fucntion() {
    window.localStorage.clear();
  })
</script>


---


<button class="btn btn-danger btn-lg" onclick="alert('aaa'),return false">Cancel</button>

<button class="btn btn-danger btn-lg" onclick="return cancel_order()">Cancel</button>

https://plnkr.co/edit/?open=lib%2Fscript.js


---


const cancel_order = () => {

  window.localStrorage.clear();
  return false;
}


---


plunker:
--------

package.json:
-------------

{
  "name": "plunker-project",
  "dependencies": {
    "jquery": "^3.5.1",
    "bootstrap": "^4.6.0"
  }
}

https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON

https://www.json.org/json-en.html


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------
37. RUBY ON RAILS, INTRO:
-------------------------


pull reauest:
https://habrahabr.ru/post/125999/


---


Sublime text settings:
http://stackoverflow.com/questions/9474090/how-do-i-force-sublime-text-2-to-two-spaces-per-tab


---


key		value


Test work:
----------

Word coutner:
-------------

f = File.open 'trump.txt', 'r'
@hh = {}


def add_to_hash word

  if !word.empty?
    word.downcase!

    cnt = @hh[word].to_i
    cnt += 1

    @hh[word] = cnt
  end
end


f.each_line do |line|

  arr = line.split(/\s|\n|\.|\,|\(|\)|\-|\$/)
  arr.each { |word| add_to_hash(word) }
end

puts @hh.inspect
puts


@hh.each do |k, v|
  puts "#{v} #{k}"
end

f.close


---


Rails:
------

1. rails new app_name (than: bundle install)
2. cd app_name
3. bundle update
4. rails server

5. localhost:3000 (browser)


---


GOW, AUTOHOTKEY

tools for web development


---


-e key (envirenment)

rails server -e development
rails server -e test
rails server -e production


---


rails generate + generation params
(rails g)


---


Generate cmd's:
---------------

$ rails g controller params
$ rails g model params


---


$ rails generate controller home index

create    app/helpers/home_helper.rb
invoke    test_unit
invoke  assets
invoke    scss

create      app/assets/stylesheets/home.scss


---


home  - controller name
index - action of home (action - method for concret url (controller))


---


localhost:3000/home/index:
--------------------------

Home#index
Find me in app/views/home/index.html.erb


---


$ rails generate model Article title:string text:text:
------------------------------------------------------

invoke  active_record
create    db/migrate/20200608201501_create_articles.rb
create    app/models/article.rb
invoke    test_unit

create      test/models/article_test.rb
create      test/fixtures/articles.yml


---


$ rake db:migrate

== 20200608201501 CreateArticles: migrating ===================================
-- create_table(:articles)
   -> 0.0048s
== 20200608201501 CreateArticles: migrated (0.0052s) ==========================


---


REST pattern:
-------------

rake routes:
------------

Prefix 		Verb   	URI Pattern                 Controller#Action
home_index 	GET    	/home/index(.:format)       home#index


---


routes.rb:
----------

resources :articles


---


Rails.application.routes.draw do

  get 'home/index'

  resources :articles
end


> rake routes

 Prefix Verb   URI Pattern                            Controller#Action
              GET    /                                home#index
     articles GET    /articles(.:format)              articles#index
              POST   /articles(.:format)              articles#create
  new_article GET    /articles/new(.:format)          articles#new
 edit_article GET    /articles/:id/edit(.:format)     articles#edit
      article GET    /articles/:id(.:format)          articles#show
              PATCH  /articles/:id(.:format)          articles#update
              PUT    /articles/:id(.:format)          articles#update
              DELETE /articles/:id(.:format)          articles#destroy



$ rails g controller articles

  create  app/controllers/articles_controller.rb
  invoke  erb
  create    app/views/articles
  invoke  test_unit
  create    test/controllers/articles_controller_test.rb
  invoke  helper
  create    app/helpers/articles_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/articles.scss


---


https://guides.rubyonrails.org/routing.html


---


new.html.erb:
-------------

<div class="container mt-5 mb-5">
  <h2>New article</h2>
</div>

<div class="container">

  <%= form_for :article do |f| %>
    <p>
      <%= f.label :title %><br>
      <%= f.text_field :title %>
    </p>
    <p>
      <%= f.label :text %><br>
      <%= f.text_area :text %>
    </p>

    <%= f.submit %>
  <% end %>
</div>


for POST:
---------

+ url: '/articles' == url: articles_path


<div class="container mt-5 mb-5">
  <h2>New article</h2>
</div>

<div class="container">

  <%= form_for :article, url: '/articles' do |f| %>
    <p>
      <%= f.label :title %><br>
      <%= f.text_field :title %>
    </p>
    <p>
      <%= f.label :text %><br>
      <%= f.text_area :text %>
    </p>

    <%= f.submit %>
  <% end %>
</div>

<form action="/articles" ...


render plain: params[:article].inspect


class ArticlesController < ApplicationController

  def new
  end

  def create
    render plain: params[:article].inspect
  end
end


<ActionController::Parameters {"title"=>"My story", "text"=>"Story"} permitted: false>


http://localhost:3000/articles/new



rake routes:
------------

------------------------------------------------------------------------------------------------
Prefix Verb   		URI 		Pattern    			            Controller#Action
------------------------------------------------------------------------------------------------
home_index 		    GET    		/home/index(.:format)       	home#index
article_index 		GET    		/article(.:format)            	article#index
              		POST   		/article(.:format)             	article#create

new_article 		GET    		/article/new(.:format)         	article#new
edit_article 		GET    		/article/:id/edit(.:format)     article#edit
article 		    GET    		/article/:id(.:format)          article#show
         		    PATCH  		/article/:id(.:format)          article#update
         		    PUT    		/article/:id(.:format)          article#update
         		    DELETE 		/article/:id(.:format)          article#destroy
------------------------------------------------------------------------------------------------


---


http://localhost:3000/articles/new:
-----------------------------------

Routing Error
No route matches [GET] "/articles/new"


---


$ rails g controller articles:
------------------------------

  create  app/controllers/articles_controller.rb
  invoke  erb
  create    app/views/articles

  invoke  test_unit
  create    test/controllers/articles_controller_test.rb
  invoke  helper
  create    app/helpers/articles_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/articles.scss


---


http://localhost:3000/articles/new:
-----------------------------------

Unknown action
The action 'new' could not be found for ArticlesController


---


def new
end


---


class ArticlesController < ApplicationController

  def new
  end
end


---


http://localhost:3000/articles/new:
-----------------------------------

No template for interactive request
ArticlesController#new is missing a template for request formats: text/html


---


new.html.erb:
-------------

<h1>New article</h1>

<%= form_for :article do |f| %>
  <p>Test</p>
<% end %>


---


<%= form_for :article do |f| %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>
<% end %>


---


<h1>New article</h1>

<%= form_for :article do |f| %>
  <p>
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </p>
  <p>
    <%= f.label :text %><br>
    <%= f.text_area :text %>
  </p>
  <p>
    <%= f.submit %>
  </p>
<% end %>


---


url: articles_path


---


<%= form_for :article, url: articles_path do |f| %>
  <p>
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </p>
  <p>
    <%= f.label :text %><br>
    <%= f.text_area :text %>
  </p>
  <p>
    <%= f.submit %>
  </p>
<% end %>


---


def create
end


---


class ArticlesController < ApplicationController

  def new
  end

  def create
  end
end


---


render plain: params[:article].inspect


class ArticlesController < ApplicationController

  def new
  end

  def create
    render plain: params[:article].inspect
  end
end


---


<ActionController::Parameters {"title"=>"My story", "text"=>"This is a story..."} permitted: false>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------
38. RUBY ON RAILS, BLOG:
------------------------


Blog, reverse words exersize:
-----------------------------

text reverser:
--------------

f = File.open 'trump.txt', 'r'
@arr = []

f.each_line do |line|
  words = line.split(/\s|\n|\.|\,|\(|\)|\-|\$/)

  words.each do |word|
    @arr << word
  end
end

puts @arr.reverse.join(' ')


---


Fizz Buzz Test


---


$ rails g controller contacts

  create  app/controllers/contacts_controller.rb
  invoke  erb
  create    app/views/contacts
  invoke  test_unit
  create    test/controllers/contacts_controller_test.rb
  invoke  helper
  create    app/helpers/contacts_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/contacts.scss


REST

Contacts:
---------

1. get page from server

=> new


2. post data to server

=> create



resource :contacts, only: [ :new, :create ]



Rails.application.routes.draw do

  get '/' => 'home#index'

  resource :contacts, only: [ :new, :create ]
  resources :articles
end



ctrl + shift + p   - serch file (Atom)



$ rake routes

      Prefix Verb   URI Pattern             Controller#Action

             GET    /                       home#index
new_contacts GET    /contacts/new(.:format) contacts#new
    contacts POST   /contacts(.:format)     contacts#create


---


$ rails g model Contact email:string message:text


---


$ rake db:migrate


---


rails console:
--------------

Contact.all
Contact.atribut_names


---


$ rails g controller contacts

  create  app/controllers/contacts_controller.rb
  invoke  erb
  create    app/views/contacts
  invoke  test_unit
  create    test/controllers/contacts_controller_test.rb
  invoke  helper
  create    app/helpers/contacts_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/contacts.scss


---


app/controllers/contacts_controller.rb:
---------------------------------------

class ContactsController < ApplicationController

  def index
  end
end

class ContactsController < ApplicationController

  def new
  end

  def create
  end
end


---


routes.rb:
----------

resource :contacts, only: [:new, :create]

Rails.application.routes.draw do

  get 'home/index'

  resource :contacts, only: [:new, :create]
  resources :articles
end


---


$ rails g model Contact email:string message:text

  invoke  active_record
  create    db/migrate/20200608230645_create_contacts.rb
  create    app/models/contact.rb
  invoke    test_unit
  create      test/models/contact_test.rb
  create      test/fixtures/contacts.yml


---


class CreateContacts < ActiveRecord::Migration[6.0]

  def change
    create_table :contacts do |t|
      t.string :email
      t.text :message

      t.timestamps
    end
  end
end


---


class Contact < ApplicationRecord
end


---


$ rake db:migrate

== 20200608230645 CreateContacts: migrating ===================================
-- create_table(:contacts)
   -> 0.0193s
== 20200608230645 CreateContacts: migrated (0.0200s) ==========================


---


Rails console:
--------------

$ rails console
$ rails c

Loading development environment (Rails 6.0.3.1)
irb(main):001:0>


---


$ Contact.all

(3.7ms)  SELECT sqlite_version(*)
  Contact Load (0.4ms)  SELECT "contacts".* FROM "contacts" LIMIT ?  [["LIMIT", 11]]
=> #<ActiveRecord::Relation []>


$ Article.all

  Article Load (0.4ms)  SELECT "articles".* FROM "articles" LIMIT ?  [["LIMIT", 11]]
=> #<ActiveRecord::Relation []>


$ Contact.attribute_names

=> ["id", "email", "message", "created_at", "updated_at"]


$ Article.attribute_names

=> ["id", "title", "text", "created_at", "updated_at"]


---


$ start rails console


---


<h2>Contact us</h2>

<%= form_for :contact, url: contacts_path do |f| %>
  <p>
    <%= f.label :email %><br>
    <%= f.text_field :email %>
  </p>
  <p>
    <%= f.label :message %><br>
    <%= f.text_area :message %>
  </p>
  <p>
    <%= f.submit %>
  </p>
<% end %>


---


http://guides.rubyonrails.org/routing.html#singular-resources


---


Save to database:
-----------------

def contact_params

  params.require(:contact).permit(:email, :message)
end


---


def create

  @contact = Contact.new(contact_params)
end


---


ActiveModel::ForbiddenAttributesError

Extracted source (around line #7):

  def create
    @contact = Contact.new(params[:contact])
  end
end


  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end

  def create
    @contact = Contact.new(contact_params)
  end


class ContactsController < ApplicationController

  def new
  end

  def create
    @contact = Contact.new(contact_params)
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


---


@contact.save


---


class ContactsController < ApplicationController

  def new
  end

  def create
    @contact = Contact.new(contact_params)
    @contact.save
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


---


rails console:
--------------

$ Contact.all

  Contact Load (0.5ms)  SELECT "contacts".* FROM "contacts" LIMIT ?  [["LIMIT", 11]]
=> #<ActiveRecord::Relation [#<Contact id: 1, email: "xxx@yyy", message: "zzzzzzzz",
created_at: "2020-06-08 23:52:02", updated_at: "2020-06-08 23:52:02">]>


---


Validation:
-----------

validates :email, presence: true
validates :message, presence: true


---


class Contact < ApplicationRecord

  validates :email, presence: true
  validates :message, presence: true
end


---


if @contact.valid?

  @contact.save
else
  render action: 'new'
end


---


def create
  @contact = Contact.new(contact_params)

  if @contact.valid?
    @contact.save
  else
    render action: 'new'
  end
end


---


class ContactsController < ApplicationController

  def new
  end

  def create
    @contact = Contact.new(contact_params)

    if @contact.valid?
      @contact.save
    else
      render action: 'new'
    end
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


---


application.css:
----------------

.field_with_errors input {
  border-color: red;
}

.field_with_errors textarea {
  border-color: red;
}


---


routes.rb:
----------

path_names: { :new => '' }


---


resource :contacts, only: [:new, :create], path_names: { :new => '' }


---


localhost:3000/contacts (get response)


---


get '/contacts' => 'contacts#new'


---


Errors output:
--------------

new.html.erb:
-------------

.errors.full_messages

<%= @contacts.errors.full_messages %>


---


<h2>Contact us</h2>

<%= form_for :contact, url: contacts_path do |f| %>
  <p>
    <%= @contact.errors.full_messages %>
  </p>
  <p>
    <%= f.label :email %><br>
    <%= f.text_field :email %>
  </p>
  <p>
    <%= f.label :message %><br>
    <%= f.text_area :message %>
  </p>
  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


---


NoMethodError in Contacts#new


---


<% if @contact  %>
  <p>
    <%= @contact.errors.full_messages %>
  </p>
<% end %>


---


.any?

<h2>Contact us</h2>

<%= form_for :contact, url: contacts_path do |f| %>
  <% if @contact  %>
    <p>
      <%= @contact.errors.full_messages %>
    </p>
  <% end %>
  <p>
    <%= f.label :email %><br>
    <%= f.text_field :email %>
  </p>
  <p>
    <%= f.label :message %><br>
    <%= f.text_area :message %>
  </p>
  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


---


<% if @contact && @contact.errors.any?  %>
  <p>
    <%= @contact.errors.full_messages %>
  </p>
<% end %>


---


<h2>Contact us</h2>

<%= form_for :contact, url: contacts_path do |f| %>

  <% if @contact && @contact.errors.any?  %>
    <p>
      <ul>
        <% @contact.errors.full_messages.each do |msg| %>
          <li>
            <%= msg %>
          </li>
        <% end %>
      </ul>
    </p>
  <% end %>

  <p>
    <%= f.label :email %><br>
    <%= f.text_field :email %>
  </p>

  <p>
    <%= f.label :message %><br>
    <%= f.text_area :message %>
  </p>

  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


---


http://guides.rubyonrails.org/routing.html#singular-resources


---


resource
resources


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------
39. RUBY ON RAILS, BLOG, REST:
------------------------------


REST:
-----

resource
resources


----


routes.rb (app/config)


discard all


---------------------------------------------------------------------------
resource:			resources:
---------------------------------------------------------------------------
6 methods			7 methods
profile				articles
---------------------------------------------------------------------------

				list:
				(actions: index)	get
---------------------------------------------------------------------------

show:				show:
(actions: show)			(actions: show)		get
---------------------------------------------------------------------------

create:				create:
(actions: new, create)		(actions: new, create)	post
---------------------------------------------------------------------------

edit:				edit:
(actions: edit, update)		(actions: edit, update)	get, put(patch)
---------------------------------------------------------------------------

delete:				delete:
(action: destroy)		(action: destroy)	delete
---------------------------------------------------------------------------


---


http://github.com/ro31337/sample-blog


---


Rails:
------

cmd:
----

$ rails console

Article.attribute_names
Article.all


---


Pattern:
--------

PRG Post Redirect Get


---


warkaround for PUT


---


class ArticlesController < ApplicationController

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
    else
      render action: 'new'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---


irb(main):004:0> Article.all

=> #<ActiveRecord::Relation [#<Article id: 1, title: "1231123", text: "xxx",


---

<h2>Thank you</h2>
<p>Article has been created</p>
<a href="/articles">Show all articles</a>


---


<h2>Thank you</h2>
<p>Article has been created</p>
<%= link_to 'Show all articles', articles_path %>


---


redirect_to @article


http://localhost:3000/articles/5


class ArticlesController < ApplicationController

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  private
  def article_params
    params.require(:article).permit(:title, :text)
  end
end


article GET    /articles/:id(.:format)
articles#show

def show
  @article = Article.find(params[:id])
end


---


Output list of Articles:
------------------------

def index
  @articles = Article.all
end


---


class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  private
  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---


anchor + edit:
--------------

<h2>List of articles</h2>

<% @articles.each do |article| %>
  <h3><%= article.title %></h3>
  <p><%= article.text %></p>
  <p>
    <%= link_to 'Show', article_path(article) %>
    <%= link_to 'Edit', edit_article_path(article) %>
  </p>
  <hr>
<% end %>

article_path(article)
edit_article_path(article)


---


def edit
  @article = Article.find(params[:id])
end


---


class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---


article_path(@article)
method: :put

<h1>Edit article</h1>

<%= form_for :article, url: article_path(@article), method: :put do |f| %>
  <p>
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </p>
  <p>
    <%= f.label :text %><br>
    <%= f.text_area :text %>
  </p>
  <p>
    <%= f.submit %>
  </p>
<% end %>


Unknown action
The action 'update' could not be found for ArticlesController


if @article.save

  redirect_to @article
else
  render action: new
end


---


action update:
--------------

def update

  @article = Article.find(params[:id])

  if @article.update(article_params)
    redirect_to @article
  else
    render action: 'edit'
  end
end


---


class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---


Static pages:
-------------

$ rails g controller Pages

  create  app/controllers/pages_controller.rb
  invoke  erb
  create    app/views/pages
  invoke  test_unit
  create    test/controllers/pages_controller_test.rb
  invoke  helper
  create    app/helpers/pages_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/pages.scss


---


pages_controller.rb:
--------------------

class PagesController < ApplicationController

  def terms
  end

  def about
  end
end


---


routes.rb:
----------

get'terms' => 'pages#terms'
get 'about' => 'pages#about'


---


Rails.application.routes.draw do

  get 'home/index'
  get'terms' => 'pages#terms'
  get 'about' => 'pages#about'

  resource :contacts, only: [:new, :create], path_names: { :new => '' }
  resources :articles
end


---


https://github.com/DefactoSofware/Hours/


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------
40. RUBY ON RAILS, BLOG, CONTINUE:
----------------------------------


$ start cmd

C:\new_repeat\ruby_cource\lesson_40_rails_blog\Blog_40>


show page:
----------

/terms
/about


---


Add static pages:
-----------------

1. add controller:

$ rails g controller Pages


2. add actions:

def some_action
  @info_vaiable = Info_variable.all
end


3. add views:

$ touch about.html.erb


4. add routes:

get '/index' => 'pages/index'


---


sinatra:
--------

1. route (app.rb)
2. view (project/views)


---


Work with dynamic pages, rails:
-------------------------------

1. Add model:
-------------

a) create model (rails g model Article string:title text:text)
b) create migration (rake db:migrate)


2. Add routes:

a) resource (profile of user)
b) resources (products)


3. Add controller:

> rails g controller Articles


4. Create actions in controllers:

a) index*
b) new + create
c) edit + update
e) destroy


5. Add views

a) show.html.erb
b) index.html.erb
c) new.html.erb
d) edit.html.erb
e) static.html.erb


---


https://github.com/ro31337/sample-blog


---


delete:
-------

$ Article.find(2)

Article Load (1.6ms)  SELECT "articles".* FROM "articles" WHERE "articles"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
=> #<Article id: 2, title: "1231123", text: "xxx", created_at: "2020-06-09 23:45:13", updated_at: "2020-06-09 23:45:13">

$ @article.destroy

(1.1ms)  begin transaction
  Article Destroy (2.3ms)  DELETE FROM "articles" WHERE "articles"."id" = ?  [["id", 2]]
   (215.1ms)  commit transaction
=> #<Article id: 2, title: "1231123", text: "xxx", created_at: "2020-06-09 23:45:13", updated_at: "2020-06-09 23:45:13">


---


$ rails console

Article.all
Article.find(id)
@article = Article.find(1)
@article.destroy


$ @article.destroy

(0.1ms)  begin transaction
  Article Destroy (17.9ms)  DELETE FROM "articles" WHERE "articles"."id" = ?  [["id", 1]]
   (97.0ms)  commit transaction
=> #<Article id: 1, title: "My story", text: "My story's message", created_at: "2021-01-23 12:44:04", updated_at: "2021-01-23 14:46:17">


---


def destroy
  @article = Article.find(params[:id])
  @article.destroy
end


---


class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end

  def destroy
    @article = Article.find(params[:id])
    @article.destroy

    redirect_to articles_path
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


redirect_to articles_path


---


Go to client:
-------------

<%= link_to 'Destroy', article_path(article), method: :delete %>


---


<h2>List of articles</h2>

<% @articles.each do |article| %>

  <h3><%= article.title %></h3>
  <p><%= article.text %></p>
  <p>
    <%= link_to 'Show', article_path(article) %> |
    <%= link_to 'Edit', edit_article_path(article) %> |
    <%= link_to 'Destroy', article_path(article), method: :delete %>
  </p>
  <hr>
<% end %>

data-method="delete"
ajax


---


  <body>
    <h2>List of articles</h2>

  <h3>1231123</h3>
  <p>xxx</p>
  <p>
    <a href="/articles/1">Show</a> |
    <a href="/articles/1/edit">Edit</a> |
    <a rel="nofollow" data-method="delete" href="/articles/1">Destroy</a>
  </p>
  <hr>
  <h3>777</h3>
  <p>www
</p>


---


data-method="delete" (HTML5)


---


link_to docs:
-------------

http://api.rubyonrails.org/classes/ActionViews/Helpers/UrlHelper.html#method-i-link_to


---


<%= link_to 'Destroy', article_path(article), method: :delete, data: { confirm: 'Are you sure?' } %>


---


render:
-------

method returns action: 'data'


---


call.back


---


comments:
---------

$ rails g model ...

http://railsguides.net/advanced-rails-model-generators/


---


Article 1 ------- * Comment

one-to-many


---


$ rails g model Comment author:string body:text article:references

  invoke  active_record

  create    db/migrate/20200610232329_create_comments.rb
  create    app/models/comment.rb
  invoke    test_unit
  create      test/models/comment_test.rb
  create      test/fixtures/comments.yml


---


$ rails db:migrate
$ sqlite3 development.sqlite


---


comment.rb:
-----------

class Comment < ApplicationRecord
  belongs_to :article
end


---


20200610232329_create_comments.rb:
----------------------------------

class CreateComments < ActiveRecord::Migration[6.0]
  def change
    create_table :comments do |t|
      t.string :auther
      t.text :body
      t.references :article, null: false, foreign_key: true

      t.timestamps
    end
  end
end


---


$ rake db:migrate

== 20200610232329 CreateComments: migrating ===================================
-- create_table(:comments)
   -> 0.0140s
== 20200610232329 CreateComments: migrated (0.0144s) ==========================


---


sqlite> pragma table_info(articles);

cid         name        type        notnull     dflt_value  pk
----------  ----------  ----------  ----------  ----------  ----------
0           id          integer     1                       1
1           title       varchar     0                       0
2           text        text        0                       0
3           created_at  datetime(6  1                       0
4           updated_at  datetime(6  1                       0


---


sqlite> pragma table_info(comments);

cid         name        type        notnull     dflt_value  pk
----------  ----------  ----------  ----------  ----------  ----------
0           id          integer     1                       1
1           auther      varchar     0                       0
2           body        text        0                       0
3           article_id  integer     1                       0
4           created_at  datetime(6  1                       0
5           updated_at  datetime(6  1                       0


---


pragma_table(table_name);


every 1 comment -> 1 article
every 1 article -> has many comments


---


article.rb:
-----------

has_many :comments


---


class Article < ApplicationRecord
  has_many :comments
end


---


routes.rb:
----------

resource :contacts, only: [:new, :create], path_names: { :new => '' }

resources :articles do
  resources :comments
end


---



$ rake routes

Prefix Verb   URI Pattern                                                       Controller#Action

                      GET    /                                                  home#index
                terms GET    /terms(.:format)                                   pages#terms
                about GET    /about(.:format)                                   pages#about
         new_contacts GET    /contacts(.:format)                                contacts#new
             contacts POST   /contacts(.:format)                                contacts#create
     article_comments GET    /articles/:article_id/comments(.:format)           comments#index
                      POST   /articles/:article_id/comments(.:format)           comments#create
  new_article_comment GET    /articles/:article_id/comments/new(.:format)       comments#new
 edit_article_comment GET    /articles/:article_id/comments/:id/edit(.:format)  comments#edit
      article_comment GET    /articles/:article_id/comments/:id(.:format)       comments#show
                      PATCH  /articles/:article_id/comments/:id(.:format)       comments#update
                      PUT    /articles/:article_id/comments/:id(.:format)       comments#update
                      DELETE /articles/:article_id/comments/:id(.:format)       comments#destroy




Rails.application.routes.draw do

  get 'home/index'
  get 'terms' => 'pages#terms'
  get 'about' => 'pages#about'

  resource :contacts, only: [:new, :create], path_names: { :new => '' }

  resources :articles do
    resources :comments
  end
end


---


$ rake routes


---


$ rails g controller comments

  create  app/controllers/comments_controller.rb
  invoke  erb
  create    app/views/comments
  invoke  test_unit
  create    test/controllers/comments_controller_test.rb
  invoke  helper
  create    app/helpers/comments_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/comments.scss


---


comments_controller.rb:
-----------------------

class CommentsController < ApplicationController

  def create
  end
end


---


$ Comment.all

(8.2ms)  SELECT sqlite_version(*)
  Comment Load (0.4ms)  SELECT "comments".* FROM "comments" LIMIT ?  [["LIMIT", 11]]
=> #<ActiveRecord::Relation []>


---


$ Article.comments

Traceback (most recent call last):
        1: from (irb):2
NoMethodError (undefined method `comments' for #<Class:0x0000000007830340>)

---


$ @article = Article.find(7)

Article Load (0.3ms)  SELECT "articles".* FROM "articles" WHERE "articles"."id" = ? LIMIT ?  [["id", 7], ["LIMIT", 1]]
=> #<Article id: 7, title: "Bla", text: "bla-bla", created_at: "2020-06-10 00:15:24", updated_at: "2020-06-10 00:15:24">


$ @article.comments

Comment Load (0.3ms)  SELECT "comments".* FROM "comments" WHERE "comments"."article_id" = ? LIMIT ?  [["article_id", 7], ["LIMIT", 11]]
=> #<ActiveRecord::Associations::CollectionProxy []>


---


$ @article.comments.create({ auther: 'Mike', body: 'Hello' })

(0.1ms)  begin transaction
  Comment Create (35.1ms)  INSERT INTO "comments" ("auther", "body", "article_id",
"created_at", "updated_at") VALUES (?, ?, ?, ?, ?)  [["auther", "Mike"],
["body", "Hello"], ["article_id", 7], ["created_at", "2020-06-11 20:28:23.265814"],
["updated_at", "2020-06-11 20:28:23.265814"]]
   (197.8ms)  commit transaction

=> #<Comment id: 1, auther: "Mike", body: "Hello", article_id: 7, created_at: "2020-06-11 20:28:23",
updated_at: "2020-06-11 20:28:23">


---


@article = Article.find(params[:atricle_id])
@article.comments.create({ auter: 'Mike', body: 'Hello'})


---


class CommentsController < ApplicationController

  def create
    @article = Article.find(params[:atricle_id])
    @article.comments.create({ auter: 'Mike', body: 'Hello'})
  end
end


---


private

def comment_params
  params.require(:comment).permit(:auter, :body)
end


---


class CommentsController < ApplicationController

  def create
    @article = Article.find(params[:atricle_id])
    @article.comments.create(comment_params)
  end

  private

  def comment_params
    params.require(:comment).permit(:auter, :body)
  end
end


---


class CommentsController < ApplicationController

  def create

    @article = Article.find(params[:atricle_id])
    @article.comments.create(comment_params)

    redirect_to article_path(@article)
  end

  private

  def comment_params
    params.require(:comment).permit(:author, :body)
  end
end


routes:
-------

article_comments GET    /articles/:article_id/comments(.:format)  comments#index
                 POST   /articles/:article_id/comments(.:format)  comments#create



<%= form_for :article do |f| %>
    <p>Bla</p>
<% end %>


/articles/4/comments
<form action="/articles/3" ...


neeed:
------

<form action="/articles/3/comments" ...


NameError in Articles#show

undefined local variable or method `comments_path' for #<#<Class:0x0000000007d71908>:0x0000000007d6b788>
Did you mean?  font_path
Extracted source (around line #10):


<div class="container">
  <%= form_for :comment, url: comments_path do |f| %>
    <p>Blabla</p>
  <% end %>
</div>


http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html

collection.build(attributes = {}):

@article.comments - collection

=> @article.comments.build

([@article, @article.comments.build])


---


$ @article.comments.build

=> #<Comment id: nil, auther: nil, body: nil, article_id: 7, created_at: nil, updated_at: nil>


---


<%= form_for([ @article, @article.comments.build ]) do |f| %>


---


<h2><%= @article.title %></h2>
<p>
  <%= @article.text %>
</p>

<p>
  <%= form_for([ @article, @article.comments.build ]) do |f| %>
    <p>
      blabla
    </p>
  <% end %>
</p>


action="/articles/4/comments"


---


.tables
.mode columns
.header on


SELECT * FROM articles;

pragma table_info(articles);
pragma table_info(comments);


---


every comment belonges_to article
every article has_many comments


---


app/models/article_model.rb:

has_many :comments


---


routes.rb:
----------

resources :articles do
  resources :comments
end


---


https://sql.ru
http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html


---


@article.comments

([@article, @article.comments.build])


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------
41. RUBY ON RAILS, RSPEC, TESTS:
--------------------------------


http://rutracker.org/forum/viewtopic.php?t=4691636


---


Rails:
------

table: many
model: one
controller: many


---


1 - *

Article			Comment
has_many :comments	belongs_to :article
id			article_id


---


1 - 1

Address			Order
belongs_to :order	has_one :address
order_id		id


---


denormalization for fast work (for server)


---


complex-type


---


* - *

Tag (category)		Article			tags.articles
id			id			tag_id
						article_id
has_and_belong_to_many :articles
has_and_belong_to_many :tags


---


Show comments:
--------------

article#show:
-------------

<% @article.comments.each do |comment| %>
  <p>
    <i><%= comment.auther %> said: </i>
    <% comment.body %>
  </p>
<% end %>


---


<h2><%= @article.title %></h2>
<p>
  <%= @article.text %>
</p>

<h2>Comments</h2>

<% @article.comments.each do |comment| %>
  <p>
    <i><%= comment.auther %> said: </i>
    <% comment.body %>
  </p>
<% end %>


<h2>Add comment</h2>

<p>
  <%= form_for([ @article, @article.comments.build ]) do |f| %>
  <p>
    <%= f.label :auther %><br>
    <%= f.text_field :auther %>
  </p>
  <p>
    <%= f.label :body %><br>
    <%= f.text_area :body %>
  </p>
  <p>
    <%= f.submit %>
  </p>
  <% end %>
</p>


---


ActiveRecord:
-------------

C		R		U		D
create		read		update		delete
-------		-----		-------		--------
.new		.find		.update		.destroy
.save		.all				.delete
.create		.where


---


google:
-------

ApplicationController params


---


REST:
-----

GET	POST	UPDATE	DELETE

ROY


---


resource
resources ... index


---


resources :... do
  resources :...
end


---


REST - Representeytional State Transfer


---


1 resource -> 1 url (or parametr)


---


Helpfull web resources:
-----------------------

https://plnkr.co/

https://plnkr.co/plunk/6N2IqTT36tvw4Mt8

Plunker


---


Bootstrap in Planker


---


chrome developer tools:
-----------------------

mobile phone:
-------------

iphone 5


---


jsfiddle.net
<script async src="//jsfiddle.net/TheGor/jqt3fhec/embed/"></script>

https://jsfiddle.net/TheGor/jqt3fhec/#&togetherjs=kFC90AwvlK
online frontend tool

TheGor - Log in


---


google:
-------

ruby fiddle:
------------

https://www.onlinegdb.com/online_ruby_compiler


---


x = 2 != 3
=> true

x = 2 == 3
=> false


---


rspec
framework


---


PS C:\Projects\ruby\rails\rspec> gem install rspec


---


$ rspec
No examples found.


Finished in 0.00066 seconds (files took 0.15738 seconds to load)
0 examples, 0 failures


---


describe
it


---


hero_spec.rb:
-------------

describe Hero do
end


---


gem install rspec

$ rspec

No examples found.


Finished in 0.03896 seconds (files took 1.01 seconds to load)
0 examples, 0 failures

touch hero_spec.rb

describe
it


console:

$ rspec hero_spec.rb

An error occurred while loading ./hero_spec.rb.
Failure/Error:
  describe Hero do
  end

NameError:
  uninitialized constant Hero
# ./hero_spec.rb:1:in `<top (required)>'
No examples found.


Finished in 0.00004 seconds (files took 0.18927 seconds to load)
0 examples, 0 failures, 1 error occurred outside of examples


not find:
Hero


---


hero.rb:
--------

class Hero
end

hero_spec.rb:

require './hero'

describe Hero do
end


console:
--------

$ rspec hero_spec.rb
No examples found.


Finished in 0.00051 seconds (files took 0.2812 seconds to load)
0 examples, 0 failures


---


class Hero

  def initialize(name, health=100)
    @name = name.capitalize
    @health = health
  end

  def name
    @name
  end

  def power_up
    @health += 10
  end

  def power_down
    @health -= 10
  end

  def hero_info
    "#{name} has a health #{@health}"
  end
end


hero = Hero.new 'Mike'

puts hero.name
puts hero.power_up
puts hero.hero_info


---


console:
--------

$ rspec hero_spec.rb

Mike
110
Mike has a health 110
No examples found.


Finished in 0.00059 seconds (files took 0.29684 seconds to load)
0 examples, 0 failures


---


hero_rspec.rb:
--------------

  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'Mike'
  end


---


require './hero'

describe Hero do
  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'Mike'
  end
end


---


console:
--------

$ rspec hero_spec.rb
.

Finished in 0.01089 seconds (files took 0.27059 seconds to load)
1 example, 0 failures


---


require './hero'

describe Hero do
  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'mike'
  end
end


---


console:
--------

$ rspec hero_spec.rb
F

Failures:

  1) Hero has a capitalized name
     Failure/Error: expect(hero.name).to eq 'mike'

       expected: "mike"
            got: "Mike"

       (compared using ==)
     # ./hero_spec.rb:7:in `block (2 levels) in <top (required)>'

Finished in 0.16185 seconds (files took 0.26991 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./hero_spec.rb:4 # Hero has a capitalized name


---


require './hero'

describe Hero do

  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'mike'
  end

  it "can power up" do
    hero = Hero.new 'mike'

    expect(hero_power_up).to eq 110
  end
end


---


console:
--------

$ rspec hero_spec.rb
FF


Failures:
---------

  1) Hero has a capitalized name
     Failure/Error: expect(hero.name).to eq 'mike'

       expected: "mike"
            got: "Mike"

       (compared using ==)
     # ./hero_spec.rb:7:in `block (2 levels) in <top (required)>'


  2) Hero can power up
     Failure/Error: expect(hero_power_up).to eq 110

     NameError:
       undefined local variable or method `hero_power_up' for #<RSpec::ExampleGroups::Hero "can power up" (./hero_spec.rb:10)>
     # ./hero_spec.rb:13:in `block (2 levels) in <top (required)>'

Finished in 0.03581 seconds (files took 0.26007 seconds to load)
2 examples, 2 failures


Failed examples:
----------------

rspec ./hero_spec.rb:4 # Hero has a capitalized name
rspec ./hero_spec.rb:10 # Hero can power up


---------------------------------------------------------------------------------------------------------------------------------------------------------

require './hero'

describe Hero do

  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'Mike'
  end

  it "can power up" do
    hero = Hero.new 'mike'

    expect(hero.power_up).to eq 110
  end
end


---


console:
--------

$ rspec hero_spec.rb
..

Finished in 0.012 seconds (files took 0.27174 seconds to load)
2 examples, 0 failures

---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------
42. RSPEC, RUBY ON RAILS, BLOG:
-------------------------------


rspec


---


require './hero'

describe Hero do

  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'Mike'
  end

  it "can power up" do
    hero = Hero.new 'mike'

    expect(hero.power_up).to eq 110
  end

  it "can power down" do
    hero = Hero.new 'mike'

    expect(hero.power_down).to eq 90
  end
end


---


console:
--------

$ rspec hero_spec.rb
...

Finished in 0.0115 seconds (files took 0.30839 seconds to load)
3 examples, 0 failures


---


require './hero'

describe Hero do

  it "has a capitalized name" do
    hero = Hero.new 'mike'

    expect(hero.name).to eq 'Mike'
  end

  it "can power up" do
    hero = Hero.new 'mike'

    expect(hero.power_up).to eq 110
  end

  it "can power down" do
    hero = Hero.new 'mike'

    expect(hero.power_down).to eq 90
  end

  it "displqys full hero info" do
    hero = Hero.new 'mike'

    expect(hero.hero_info).to eq 'Mike has a health of 100 '
  end
end


---


console:
--------

$ rspec hero_spec.rb

...F

Failures:

  1) Hero displqys full hero info
     Failure/Error: expect(hero.hero_info).to eq 'Mike has a health of 100 '

       expected: "Mike has a health of 100 "
            got: "Mike has a health 100"

       (compared using ==)
     # ./hero_spec.rb:25:in `block (2 levels) in <top (required)>'

Finished in 0.03427 seconds (files took 0.26228 seconds to load)
4 examples, 1 failure


$ rspec hero_spec.rb
....

Finished in 0.01839 seconds (files took 0.40494 seconds to load)
4 examples, 0 failures

Failed examples:

rspec ./hero_spec.rb:22 # Hero displqys full hero info


---


DRY:
----

DON'T
REPEAT
YOURSELF


---


require './hero'

describe Hero do

  before do
    hero = Hero.new 'mike'
  end

  it "has a capitalized name" do
    expect(hero.name).to eq 'Mike'
  end

  it "can power up" do
    expect(hero.power_up).to eq 110
  end

  it "can power down" do
    expect(hero.power_down).to eq 90
  end

  it "displays full hero info" do
    expect(hero.hero_info).to eq 'Mike has a health of 100'
  end
end


---


@

require './hero'

describe Hero do
  before do
    @hero = Hero.new 'mike'
  end

  it "has a capitalized name" do
    expect(@hero.name).to eq 'Mike'
  end

  it "can power up" do
    expect(@hero.power_up).to eq 110
  end

  it "can power down" do
    expect(@hero.power_down).to eq 90
  end

  it "displays full hero info" do
    expect(@hero.hero_info).to eq 'Mike has a health of 100'
  end
end

---


Tests must be:
--------------

1. reliable

1 000 000 times -> 1 result



2. easy to write

if it's not break it



3. easy to understand

for developers + comments


---


legacy
code


---


matchers:
---------

https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers


---


arrange  - ready (geting ready for testing)
act      - action
assert   - expecting (check the result of operation)


---


require './car'

describe Car do

  before do
    car = Car.new
  end

  it "must return range" do
    #act
    car.add_fuel 10
    #assert
    expect(car.range).to eq 200
  end
end


---


console:
--------

$ rspec car_spec.rb

Range is 0
F

Failures:

  1) Car must return range
     Failure/Error: car.add_fuel 10

     NameError:
       undefined local variable or method `car' for #<RSpec::ExampleGroups::Car:0x000000000322d4d8>
     # ./car_spec.rb:10:in `block (2 levels) in <top (required)>'

Finished in 0.00902 seconds (files took 0.27399 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./car_spec.rb:8 # Car must return range


---


require './car'

describe Car do

  before do
    @car = Car.new
  end

  it "must return range" do
    #act
    @car.add_fuel 10
    #assert
    expect(@car.range).to eq 200
  end
end


---


$ rspec car_spec.rb

Range is 0
F

Failures:

  1) Car must return range
     Failure/Error: expect(@car.range).to eq 200

       expected: 200
            got: 0

       (compared using ==)
     # ./car_spec.rb:12:in `block (2 levels) in <top (required)>'

Finished in 0.03461 seconds (files took 0.27288 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./car_spec.rb:8 # Car must return range


---


github.com/accaunt:
-------------------

Issues:
-------

New issue

1. Add title
2. Add comment
3. Add label (bug)
4. Submit

5. Fix bug
6. Commit fixed code with m 'Fixes #number_of_bug'
7. Refresh github.com page


labels:
-------

https://bitbucket.org


---


class Car

  MILES_PER_GALLON = 20

  attr_reader :fuel

  def initialize
    @fuel = 0
  end

  def add_fuel amount
    @fuel += amount
  end

  def range
    @fuel * MILES_PER_GALLON
  end
end


car = Car.new

car.add_fuel 10
puts "Range is #{car.range}"


---


$ rspec car_spec.rb

Range is 200
.

Finished in 0.01032 seconds (files took 0.27376 seconds to load)
1 example, 0 failures


---


http://bitbucket.org (private repo)


---


devise


---


http://github.com/ro31337/sample-blog


---


gem install devise

gem for authorization


---


Gemfile:
--------

gem 'devise'


---


$ bundle


---


$ rails g:
----------

rails\blog>rails g
Usage: rails generate GENERATOR [args] [options]

General options:
  -h, [--help]     # Print generator's options and usage
  -p, [--pretend]  # Run but do not make any changes
  -f, [--force]    # Overwrite files that already exist
  -s, [--skip]     # Skip files that already exist
  -q, [--quiet]    # Suppress status output

Please choose a generator below.

Deprecation warning: Expected boolean default value for '--orm'; got :active_record (string).
This will be rejected in the future unless you explicitly pass the options `check_default_type: false` or call
`allow_incompatible_default_type!` in your code
You can silence deprecations warning by setting the environment variable THOR_SILENCE_DEPRECATION.
Rails:
  application_record
  assets
  channel
  controller
  generator
  helper
  integration_test
  jbuilder
  job
  mailbox
  mailer
  migration
  model
  resource
  responders_controller
  scaffold
  scaffold_controller
  system_test
  task

ActiveRecord:
  active_record:application_record
  active_record:devise

Devise:
  devise
  devise:controllers
  devise:install
  devise:views

Mongoid:
  mongoid:devise

Responders:
  responders:install

TestUnit:
  test_unit:channel
  test_unit:generator
  test_unit:mailbox
  test_unit:plugin


----

$ rails g devise install

Deprecation warning: Expected boolean default value for '--orm'; got :active_record (string).
This will be rejected in the future unless you explicitly pass the options `check_default_type: false` or call
`allow_incompatible_default_type!` in your code
You can silence deprecations warning by setting the environment variable THOR_SILENCE_DEPRECATION.
      invoke  active_record
      create    db/migrate/20200613165701_devise_create_installs.rb
      create    app/models/install.rb
      invoke    test_unit
      create      test/models/install_test.rb
      create      test/fixtures/installs.yml
      insert    app/models/install.rb
       route  devise_for :installs


----


1. gem 'devise' -> Gemfile



2. run:

$ rails g devise:install



3. add to development.rb:

config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }



4. add to config/routes.rb:

root to: "home#index"



5. add to app/views/layouts/application.html.erb:

<p class="notice"><%= notice %></p>
<p class="alert"><%= alert %></p>



6. run in console:

$ rails g devise:views



7. run:

$ rails g devise User



8. run:

$ rake db:migrate



9. add to controller.rb:

before_action :authenticate_user!



10. add sign in and sign out links:

<a href="/users/sign_in">Sign in</a>
<a href="/users/sign_out">Sign out</a>



heroku.com

database indexes


$ rails g devise:install

      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================



Depending on your application's configuration some manual setup may be required:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

     * Required for all applications. *

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

     * Not required for API-only Applications *

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

     * Not required for API-only Applications *

  4. You can copy Devise views (for customization) to your app by running:

       rails g devise:views

     * Not required *

===============================================================================


---


development.rb:
---------------

config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }


---


routes.rb:
----------

root to: "home#index"


Rails.application.routes.draw do

  root to: "home#index"

  get 'home/index'
  # get 'contacts' => 'contacts#new'

  get 'terms' => 'pages#terms'
  get 'about' => 'pages#about'

  resource :contacts, only: [:new, :create], path_names: { :new => '' }

  resources :articles do
    resources :comments
  end
end


---


application.html.erb:
---------------------

<p class="notice"><%= notice %></p>
<p class="alert"><%= alert %></p>

<!DOCTYPE html>
<html>
  <head>
    <title>Blog2</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>

    <%= yield %>
  </body>
</html>


---


$ rails g devise User

Deprecation warning: Expected boolean default value for '--orm'; got :active_record (string).
This will be rejected in the future unless you explicitly pass the options `check_default_type: false` or call
`allow_incompatible_default_type!` in your code
You can silence deprecations warning by setting the environment variable THOR_SILENCE_DEPRECATION.
      invoke  active_record
      create    db/migrate/20200623201928_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for :users


---


$ rake db:migrate

Deprecation warning: Expected boolean default value for '--orm'; got :active_record (string).
This will be rejected in the future unless you explicitly pass the options `check_default_type: false` or call
`allow_incompatible_default_type!` in your code
You can silence deprecations warning by setting the environment variable THOR_SILENCE_DEPRECATION.
      invoke  active_record
      create    db/migrate/20200623201928_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for :users


$ rake db:migrate

== 20200623201928 DeviseCreateUsers: migrating ================================
-- create_table(:users)
   -> 0.0199s
-- add_index(:users, :email, {:unique=>true})
   -> 0.0036s
-- add_index(:users, :reset_password_token, {:unique=>true})
   -> 0.0060s
== 20200623201928 DeviseCreateUsers: migrated (0.0325s) =======================


---


articles_controller.rb:
-----------------------

before_action :authenticate_user!

class ArticlesController < ApplicationController

  before_action :authenticate_user!

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)

    if @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end

  def destroy
    @article = Article.find(params[:id])
    @article.destroy

    redirect_to articles_path
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---


application.html.erb:
---------------------

<!DOCTYPE html>
<html>
  <head>
    <title>Blog2</title>

    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <a class="text-decoration-none" href="/users/sign_in">Sign in</a> |

    <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>

    <%= yield %>
  </body>
</html>


---


sign out:
---------

routing error


---


delete method


---


turbolinks


---


application.html.erb:
---------------------

<!DOCTYPE html>
<html>
  <head>
    <title>Blog2</title>

    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <a class="text-decoration-none" href="/users/sign_in">Sign in</a> |
    <a class="text-decoration-none" data-method="delete" href="/users/sign_out">Sign out</a>

    <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>

    <%= yield %>
  </body>
</html>


---


https://github.com/DefactoSoftware/Hours


---


https://github.com/plataformatec/devise


---


https://github.com/plataformatec/devise/wiki/Example-Applications


---


routes.rb:
----------

devise_for :installs


---


https://habr.com/ru/post/208056/


---


https://github.com/DefactoSoftware/Hours


---


https://github.com/plataformatec/devise


---


https://github.com/plataformatec/devise/wiki/Example-Applications


---


https://github.com/imhta/rails_6_devise_example


---


https://guides.railsgirls.com/devise


---


<% if user_signed_in? %>

  <%= current_user.email %>
  <%= link_to 'Sign out', destroy_user_session_path, method: :delete, class: 'text-decoration-none' %>
<% else %>
  <%= link_to 'Sign in', new_user_session_path, class: 'text-decoration-none' %>
<% end %>


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------
43. RUBY ON RAILS, DEVISE, WEB:
-------------------------------


https://odeskwork.com/projects/

https://github.com/nwinkler/atom-keyboard-shortcuts - atom shortcuts


Far manager shortcut:
---------------------

$ cd working_dyrectory
$ start atom .


---


application.html.erb:
---------------------

<!DOCTYPE html>
<html>
  <head>
    <title>Blog2</title>
        <!-- CSS only -->
    <link rel="stylesheet"
    	  href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
	  integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
	  crossorigin="anonymous">

    <!-- JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
	    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
	    crossorigin="anonymous">
    </script>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
	    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
	    crossorigin="anonymous">
    </script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
	    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
	    crossorigin="anonymous">
    </script>

    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <div class="container">
      <div class="text-muted">
        <% if user_signed_in? %>
          Hello <%= current_user.email %>
          <%= button_to "Sign out", destroy_user_session_path, :method => :delete, :class => "btn btn-link text-decoration-none pl-0" %>
        <% else %>
          <%= button_to "Sign in", new_user_session_path, :class => "btn btn-link text-decoration-none pl-0" %>
        <% end %>
      </div>
    </div>

    <div class="container">
        <p class="notice text-muted"><%= notice %></p>
        <p class="alert text-muted"><%= alert %></p>
    </div>


    <%= yield %>
  </body>
</html>


https://github.com/heartcombo/devise



Controller filters and helpers:

before_action :authenticate_user!
user_signed_in?
current_user
user_session


---


sessions:
---------

server nn	s spb		s msk


http stateless:

no activ connection.
If loged in... can continue later...


---


AND -------> s
	l,p
AND <------- s
	cookie


---


don't need db connection


---


session - hash:

session['key'] = 'value'


---


session work without autorization


---


cookie getted automaticly


---


Add username:
-------------

https//github.com/plataformatec/devise


---


$ rails g migration add_username

  invoke  active_record
  create    db/migrate/20200624220955_add_username.rb


---


http://api.rubyonrails.org/classes/ActiveRecord/Migration.html

add_column :users, :username, :string


---


add_usrname.rb:
---------------

add_column :users, :username, :string

class AddUsername < ActiveRecord::Migration[6.0]

  def change
    add_column :users, :username, :string
  end
end

---


$ rake db:migrate

== 20200624220955 AddUsername: migrating ======================================
-- add_column(:users, :username, :string)
   -> 0.0424s
== 20200624220955 AddUsername: migrated (0.0432s) =============================


---


index in db   - it is a table in db, (helper for db, for fast work) it has key handlers, and do work faster.


---


$ rails g migration add_username_index

invoke  active_record
create    db/migrate/20200624222429_add_username_index.rb


---


add_username_index.rb:
----------------------

add_index :users, :username, unique: true

class AddUsernameIndex < ActiveRecord::Migration[6.0]

  def change
    add_index :users, :username, unique: true
  end
end


---


$ rake db:migrate

== 20200624222429 AddUsernameIndex: migrating =================================
-- add_index(:users, :username, {:unique=>true})
   -> 0.0183s
== 20200624222429 AddUsernameIndex: migrated (0.0191s) ========================


---


https://stackoverflow.com/questions/21478006/how-to-add-username-field-to-devise-gem


---


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

application_controller.rb:

class ApplicationController < ActionController::Base

  before_action :configure_permitted_parameters, if: :devise_controller?

  protected

  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:username])
  end
end


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


---


$ rails g devise:views

  invoke  Devise::Generators::SharedViewsGenerator
  create    app/views/devise/shared
  create    app/views/devise/shared/_error_messages.html.erb
  create    app/views/devise/shared/_links.html.erb
  invoke  form_for
  create    app/views/devise/confirmations
  create    app/views/devise/confirmations/new.html.erb
  create    app/views/devise/passwords
  create    app/views/devise/passwords/edit.html.erb
  create    app/views/devise/passwords/new.html.erb
  create    app/views/devise/registrations
  create    app/views/devise/registrations/edit.html.erb
  create    app/views/devise/registrations/new.html.erb
  create    app/views/devise/sessions
  create    app/views/devise/sessions/new.html.erb
  create    app/views/devise/unlocks
  create    app/views/devise/unlocks/new.html.erb
  invoke  erb
  create    app/views/devise/mailer
  create    app/views/devise/mailer/confirmation_instructions.html.erb
  create    app/views/devise/mailer/email_changed.html.erb
  create    app/views/devise/mailer/password_change.html.erb
  create    app/views/devise/mailer/reset_password_instructions.html.erb
  create    app/views/devise/mailer/unlock_instructions.html.erb


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------
44. RUBY ON RAILS, TWITTER BOOTSTRAP, BLOG:
-------------------------------------------


About Odesc


---


Plunker:
--------

add bootstrap


---


<!doctype html>

<html>
  <head>
    <link rel="stylesheet" href="lib/style.css">
    <script src="lib/script.js"></script>
    <!-- CSS only -->
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
	  integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
	  crossorigin="anonymous">

    <!-- JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
	    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
	    crossorigin="anonymous">
    </script>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
	    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
	    crossorigin="anonymous">
    </script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
	    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
	    crossorigin="anonymous">
    </script>
  </head>

  <body>
    <div class="container">
      <div class="row">
        <div class="col-sm-4 col-xs-4">
          <ul>
            <li>contact_1</li>
            <li>contact_2</li>
            <li>contact_3</li>
          </ul>
        </div>
        <div class="col-sm-8 col-xs-4">
          <ul>
            <li>message_1</li>
            <li>message_2</li>
            <li>message_3</li>
          </ul>
        </div>
      </div>
    </div>
  </body>
</html>


---


<!doctype html>

<html>
  <head>
    <link rel="stylesheet" href="lib/style.css">
    <script src="lib/script.js"></script>

    <!-- CSS only -->
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
	  integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
	  crossorigin="anonymous">

    <!-- JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
	    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
	    crossorigin="anonymous">
    </script>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
	    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
	    crossorigin="anonymous">
    </script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
	    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
	    crossorigin="anonymous">
    </script>
  </head>

  <body>
    <div class="visible-xs-block">
      Device is extra small
    </div>

    <div class="visible-sm-block">
      Device is small
    </div>

    <div class="visible-md-block">
      Device is medium
    </div>

    <div class="visible-lg-block">
      Device is large
    </div>

    <div class="container">
      <div class="row">
        <div class="col-md-6 col-sm-4 col-xs-4">
          <ul>
            <li>contact_1</li>
            <li>contact_2</li>
            <li>contact_3</li>
          </ul>
        </div>
        <div class="col-md-6 col-sm-8 col-xs-4">
          <ul>
            <li>message_1</li>
            <li>message_2</li>
            <li>message_3</li>
          </ul>
        </div>
      </div>
    </div>
  </body>
</html>


---


<!doctype html>

<html>
  <head>
    <link rel="stylesheet" href="lib/style.css">
    <script src="lib/script.js"></script>

    <!-- CSS only -->
    <link rel="stylesheet"
    	  href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
	  integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
	  crossorigin="anonymous">

    <!-- JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
	    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
	    crossorigin="anonymous">
    </script>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
	    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
	    crossorigin="anonymous">
    </script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
	    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
	    crossorigin="anonymous">
    </script>
  </head>

  <body>
    <div class="visible-xs-block">
      Device is extra small
    </div>

    <div class="visible-sm-block">
      Device is small
    </div>

    <div class="visible-md-block">
      Device is medium
    </div>

    <div class="visible-lg-block">
      Device is large
    </div>

    <div class="container">
      <div class="row">
        <div class="col-xs-3">
        </div>
        <div class="col-xs-3">
          aaa
        </div>
        <div class="col-xs-4">
          bbb
        </div>
        <div>
        </div>
      </div>
    </div>
  </body>
</html>


---


http://health-access-app.apphb.com/plans


---


Dan Vallen:
-----------

Angular.js course


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------
45. RUBY ON RAILS, RSPEC, TESTS:
--------------------------------


https://github.com/OlayNick/Blog-on-RoR


---


http://stackoverflow.com/questions/1844671/what-is-params-requireperson-permitname-age-doing-in-rails-4


---


http://api.rubyonrails.org/classes/ActionController/Parameters.html
https://api.rubyonrails.org/classes/ActionController/Parameters.html#method-i-permit


---


https://stackoverflow.com/questions/7493767/are-redirect-to-and-render-exchangeble


---


CI - continious integration
CD - continious delivery


---


HipChat.com


---


integrational tests
QA tests


---


agilezen.com
https://www.getapp.com/project-management-planning-software/a/agilezen/


---


trello.com


---


scrum (agile)


---


https://www.vagrantup.com/


---


virtualbox

rails dev box


---


https://www.virtualbox.org/


---


https://github.com/rails/rails-dev-box


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------
46. RUBY ON RAILS, TESTS:
-------------------------


Module tests


---


Gemfile:
--------

group :test, :development do

  gem 'rspec-rails', '~> 2.4'
  gem 'capybara'
end


$ bundle
$ bundle update


---


$ rails g rspec:install


---


create  .rspec
create  spec
create  spec/spec_helper.rb
create  spec/rails_helper.rb


---


touch spec/models/contact_spec.rb


---


contact.rb:
-----------

class Contact < ApplicationRecord

  validates :email, presence: true
  validates :message, presence: true
end


---


contact_spec.rb:
----------------

require 'spec_helper'

describe 'something' do

  it 'does something' do
  end
end


---


$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.9.3/lib' 'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/exe/rspec'
--pattern 'spec/**{,/*/**}/*_spec.rb'
No examples found.



$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
.

Finished in 0.04059 seconds (files took 2.06 seconds to load)
1 example, 0 failures


Finished in 0.0006 seconds (files took 1.13 seconds to load)
0 examples, 0 failures


---


Gemfile:
--------

group :test, :development do

  gem 'rspec-rails'
  # gem 'capybara'
  gem 'shoulda-matchers'
end


---


$ bundle install

---


https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers


---


https://thoughtbot.github.io/shoulda-matchers/


---


https://github.com/thoughtbot/shoulda-matchers


---


http://matchers.shoulda.io/docs/v4.3.0/


---


$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.9.3/lib' 'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/exe/rspec'
--pattern 'spec/**{,/*/**}/*_spec.rb'
Migrations are pending. To resolve this issue, run:



$ rails db:migrate RAILS_ENV=test

No examples found.
C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.9.3/lib' 'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/exe/rspec'
--pattern 'spec/**{,/*/**}/*_spec.rb' failed


---


$ rails db:migrate RAILS_ENV=test

== 20200618203225 CreateArticles: migrating ===================================
-- create_table(:articles)
   -> 0.0027s
== 20200618203225 CreateArticles: migrated (0.0034s) ==========================

== 20200619202252 CreateContacts: migrating ===================================
-- create_table(:contacts)
   -> 0.0020s
== 20200619202252 CreateContacts: migrated (0.0028s) ==========================

== 20200621185204 CreateComments: migrating ===================================
-- create_table(:comments)
   -> 0.0031s
== 20200621185204 CreateComments: migrated (0.0045s) ==========================

== 20200623201928 DeviseCreateUsers: migrating ================================
-- create_table(:users)
   -> 0.0029s
-- add_index(:users, :email, {:unique=>true})
   -> 0.0012s
-- add_index(:users, :reset_password_token, {:unique=>true})
   -> 0.0015s
== 20200623201928 DeviseCreateUsers: migrated (0.0103s) =======================

== 20200624220955 AddUsername: migrating ======================================
-- add_column(:users, :username, :string)
   -> 0.0024s
== 20200624220955 AddUsername: migrated (0.0032s) =============================

== 20200624222429 AddUsernameIndex: migrating =================================
-- add_index(:users, :username, {:unique=>true})
   -> 0.0029s
== 20200624222429 AddUsernameIndex: migrated (0.0037s) ========================



$ rails db:migrate RAILS_ENV=test

$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
F

Failures:

  1) Contact
     Failure/Error: it { should validate_presence_of :email }

     NoMethodError:
       undefined method `validate_presence_of' for #<RSpec::ExampleGroups::Contact:0x000000000928a8f8>
     # ./spec/models/contact_spec.rb:5:in `block (2 levels) in <top (required)>'

Finished in 0.32286 seconds (files took 5.68 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/models/contact_spec.rb:5 # Contact



$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
.

Finished in 0.46259 seconds (files took 20.12 seconds to load)
1 example, 0 failures


Add rspec-rails and shoulda-matchers in your Gemfile:

group :development, :test do
  gem 'rspec-rails', '~> 3.4', '>= 3.4.2'
  gem 'shoulda-matchers', '~> 3.1', '>= 3.1.1'
end
Set your spec/rails_helper.rb to use rspec-rails and shoulda-matchers:

require 'rspec/rails'
require 'shoulda/matchers'
And add in your spec/spec_helper.rb:

Shoulda::Matchers.configure do |config|
  config.integrate do |with|
    with.test_framework :rspec
    with.library :rails
  end
end


https://github.com/thoughtbot/shoulda-matchers


---


$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.9.3/lib' 'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/exe/rspec'
--pattern 'spec/**{,/*/**}/*_spec.rb'
FFF

Failures:

  1) Article is expected to have many :comments
     Failure/Error: it { should have_many :comments }
       expected #<Article:0x000000000b4b1490> to respond to `has_many?`
     # ./spec/models/article_spec.rb:5:in `block (2 levels) in <top (required)>'

  2) Contact
     Failure/Error: it { should validate_presence_of :email }

     NoMethodError:
       undefined method `validate_presence_of' for #<RSpec::ExampleGroups::Contact:0x000000000ac93088>
     # ./spec/models/contact_spec.rb:5:in `block (2 levels) in <top (required)>'

  3) Contact
     Failure/Error: it { should validate_presence_of :message }

     NoMethodError:
       undefined method `validate_presence_of' for #<RSpec::ExampleGroups::Contact:0x000000000aeee788>
     # ./spec/models/contact_spec.rb:6:in `block (2 levels) in <top (required)>'

Finished in 0.42688 seconds (files took 8.78 seconds to load)
3 examples, 3 failures

Failed examples:

rspec ./spec/models/article_spec.rb:5 # Article is expected to have many :comments
rspec ./spec/models/contact_spec.rb:5 # Contact
rspec ./spec/models/contact_spec.rb:6 # Contact

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.9.3/lib' 'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.9.2/exe/rspec'
--pattern 'spec/**{,/*/**}/*_spec.rb' failed


---


require 'spec_helper'
require 'rails_helper'


describe Article do
  describe 'validations' do
    it { should validate_presence_of :title }
    it { should validate_presence_of :text }
  end

  describe 'associations' do
    it { should have_many :comments }
  end
end


---


class Article < ApplicationRecord

  validates :title, presence: true
  validates :text, presence: true
  has_many :comments

  def subject
    title
  end
end


---


require 'spec_helper'
require 'rails_helper'


describe Article do
  describe 'validations' do
    it { should validate_presence_of :title }
    it { should validate_presence_of :text }
  end

  describe 'associations' do
    it { should have_many :comments }
  end

  describe '#subject' do
    it 'returns the article titile' do
      article = create(:article, title: 'Lorem Ipsum')
      expect(article.subject).to eq 'Lorem Ipsum'
    end
  end
end


---


$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
......

Finished in 0.294 seconds (files took 6.77 seconds to load)
6 examples, 0 failures


describe 'something' do
end

!!not method

#method if tests a method

#method - instace method
.method - class method (self.method)


$ rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
...F...

Failures:

  1) Article subject returns the article title
     Failure/Error: article = create(:article, title: 'Article for test')

     NoMethodError:
       undefined method `create' for #<RSpec::ExampleGroups::Article::Subject:0x0000000008df2340>
     # ./spec/models/article_spec.rb:16:in `block (3 levels) in <top (required)>'

Finished in 0.09138 seconds (files took 6.06 seconds to load)
7 examples, 1 failure

Failed examples:

rspec ./spec/models/article_spec.rb:14 # Article subject returns the article title

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.1/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb' failed


---


factory girl (factory_bot)

DRY - Don't Repeat Yourself


---


www.rubydoc.info/gems/factory_girl/file/GETTING_STARTED.md


---


Factory_girl:
-------------

FactoryGirl.define do
  factory :article do
    title "Article title"
    text "Article text"
  end
end


$ gem install factory_bot_rails

group :development, :test do
  gem 'factory_bot_rails'
end


# new

group :development, :test do
  gem "factory_bot_rails"
  # or
  gem "factory_bot"
end


$ bundle install
$ bundle update


C:\new_repeat\ruby_cource\lesson_46_rails_models_testing\Blog_46_tests\spec:

$ mkdir factories/model_name.rb
$ mkdir support

add to support:

RSpec.configure do |config|
  config.include FactoryBot::Syntax::Methods
end


C:\new_repeat\ruby_cource\lesson_46_rails_models_testing\Blog_46_tests\spec\rails_helper.rb:

require 'support/factory_bot.rb'



https://devhints.io/factory_bot
https://rubydoc.info/gems/factory_bot/file/GETTING_STARTED.md#configure-your-test-suite


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------
47. ACCEMPTACE TESTS, RUBY ON RAILS:
------------------------------------


Accempting to requirements lists and specifications

Blog, Rails, Tests


TESTS rspec:
------------

describe - unit testing
it

feature - acceptance testing
scenario


---


gem capybara


---


require 'rails_helper'

feature '...' do
  scenario '...' do

  end
end


$ touch spec/features/visitor_create_contact_spec.rb:

require 'spec_helper'
require 'rails_helper'

feature "Contact Creation" do

  scenario "allows access to contacts page" do
    visit '/contacts'

    expect(page).to have_content 'Blabla'
  end
end


---


https://github.com/jnicklas/capybara#using-capibara-with-rspec


---


i18n

internationalization


---


l10n

localization


---


C:\Projects\ruby\rails\blog_2\config\locales\en.yml:
----------------------------------------------------

# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   'true': 'foo'
#
# To learn more, please read the Rails Internationalization guide
# available at https://guides.rubyonrails.org/i18n.html.

en:
  hello: "Hello world"


need two spaces!!


---


en:
  hello: "Hello world"

  contacts:
    contact_us: "Contact Us!"


---


<%= t('hello') %>


---


C:\Projects\ruby\rails\blog_2\app\views\contacts\new.html.erb:
--------------------------------------------------------------

<div class="container">
  <h1 class="mb-5"><%= t('hello') %></h1>

  <%= form_for :contact, url: contacts_path, :html => {:class => "form-horizontal center"} do |f| %>
    <% if @contact && @contact.errors.any? %>
      <p>
        <ul>
          <% @contact.errors.full_messages.each do |msg| %>
            <li>
              <%= msg %>
            </li>
          <% end %>
        </ul>
      </p>
    <% end %>

    <div class="form-group">
      <%= f.label :email, :class => "form-group" %>
      <div class="col-md-8">
        <%= f.text_field :email, :class => "form-control" %>
      </div>
    </div>

    <div class="form-group">
      <%= f.label :message, :class => "form-group" %>
      <div class="col-md-8">
        <%= f.text_area :message, :class => "form-control" %>
      </div>
    </div>

      <%= f.submit 'Send message', :class => "btn btn-primary btn-lg" %>
  <% end %>
</div>


---


<%= t('contacts.contact_us') %>


---


<div class="container">
  <h1 class="mb-5"><%= t('contacts.contact_us') %></h1>

  <%= form_for :contact, url: contacts_path, :html => {:class => "form-horizontal center"} do |f| %>
    <% if @contact && @contact.errors.any? %>
      <p>
        <ul>
          <% @contact.errors.full_messages.each do |msg| %>
            <li>
              <%= msg %>
            </li>
          <% end %>
        </ul>
      </p>
    <% end %>

    <div class="form-group">
      <%= f.label :email, :class => "form-group" %>
      <div class="col-md-8">
        <%= f.text_field :email, :class => "form-control" %>
      </div>
    </div>

    <div class="form-group">
      <%= f.label :message, :class => "form-group" %>
      <div class="col-md-8">
        <%= f.text_area :message, :class => "form-control" %>
      </div>
    </div>

      <%= f.submit 'Send message', :class => "btn btn-primary btn-lg" %>
  <% end %>
</div>


---


C:\Projects\ruby\rails\blog_2\spec\factories\features\visitor_create_contact_spec.rb:
-------------------------------------------------------------------------------------

require 'spec_helper'
require 'rails_helper'

feature "Contact Creation" do

  scenario "allows access to contacts page" do

    visit '/contacts'
    expect(page).to have_content I18n.t 'contacts.contact_us'
  end
end


---


http://shots.m18.ru


---


fill_in :contact_email, :with => 'user@examle.com'

<div class="form-group">

  <label class="form-group" for="contact_email">Email</label>

  <div class="col-md-8">
    <input class="form-control" type="text" name="contact[email]" id="contact_email" />
  </div>
</div>


---


require 'spec_helper'
require 'rails_helper'

feature "Contact Creation" do
  scenario "allows access to contacts page" do
    visit '/contacts'

    expect(page).to have_content I18n.t 'contacts.contact_us'
  end

  scenario "allows a guest to create contact" do
    fill_in :contact_email, :with => 'user@examle.com'
    fill_in :contact_message, :with => 'something'
    click_button 'Send message'
  end
end


---


require 'spec_helper'
require 'rails_helper'

feature "Contact Creation" do
  scenario "allows access to contacts page" do
    visit '/contacts'

    expect(page).to have_content I18n.t 'contacts.contact_us'
  end

  scenario "allows a guest to create contact" do
    visit '/contacts'

    fill_in :contact_email, :with => 'user@examle.com'
    fill_in :contact_message, :with => 'something'

    click_button 'Send message'
  end
end


---


require 'spec_helper'
require 'rails_helper'

feature "Contact Creation" do
  scenario "allows access to contacts page" do
    visit '/contacts'

    expect(page).to have_content I18n.t 'contacts.contact_us'
  end

  scenario "allows a guest to create contact" do
    visit '/contacts'

    fill_in :contact_email, :with => 'user@examle.com'
    fill_in :contact_message, :with => 'something'

    click_button 'Send message'

    expect(page).to have_content 'Thanks!'
  end
end


---


require 'spec_helper'
require 'rails_helper'

feature "Account Creation" do
  scenario "allows guest to create account" do
    visit '/new_user_registration_path'

    fill_in :user_email, :with => 'user@examle.com'
    fill_in :user_username, :with => 'mike'
    fill_in :user_password, :with => 'secure123!@'
    fill_in :user_password_confirmation, :with => 'secure123!@'

    click_button 'Sign up'

    expect(page).to have_content I18n.t('decise.registrations.signed_up')
  end
end


---


require 'spec_helper'
require 'rails_helper'

feature "Account Creation" do
  scenario "allows guest to create account" do
    sign_up
    expect(page).to have_content I18n.t('decise.registrations.signed_up')
  end
end

def sign_up
  visit '/new_user_registration_path'

  fill_in :user_email, :with => 'user@examle.com'
  fill_in :user_username, :with => 'mike'
  fill_in :user_password, :with => 'secure123!@'
  fill_in :user_password_confirmation, :with => 'secure123!@'

  click_button 'Sign up'
end



>rake spec

C:/Ruby25-x64/bin/ruby.exe -I'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/lib';
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-support-3.10.2/lib'
'C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/rspec-core-3.10.1/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
...........

Finished in 7.35 seconds (files took 5.95 seconds to load)
11 examples, 0 failures


---


https://www.relishapp.com/rspec/rspec-core/v/2-2/docs/hooks/before-and-after-hooks


---


touch C:\Projects\ruby\rails\blog_2\spec\support\session_helper.rb:
-------------------------------------------------------------------

def sign_up

  visit '/new_user_registration_path'

  fill_in :user_email, :with => 'user@examle.com'
  fill_in :user_username, :with => 'mike'
  fill_in :user_password, :with => 'secure123!@'
  fill_in :user_password_confirmation, :with => 'secure123!@'

  click_button 'Sign up'
end


---


touch C:\Projects\ruby\rails\blog_2\spec\factories\features\user_creates_article_spec.rb:
-----------------------------------------------------------------------------------------


before (:each) do
	...
end - every time

before (:all) do
	...
end - one time


---


sign up testing fails:
----------------------

https://github.com/jnicklas/capybara#transactions-and-database-setup


---


database_cleaner:
-----------------

https://github.com/DatabaseCleaner/database_cleaner


---


C:\Projects\ruby\rails\blog_2\spec\support\database_cleaner.rb:
---------------------------------------------------------------

RSpec.configure do |config|

  config.before(:suite) do
    DatabaseCleaner.strategy = :transaction
    DatabaseCleaner.clean_with(:truncation)
  end

  config.around(:each) do |example|
    DatabaseCleaner.cleaning do
      example.run
    end
  end

end


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------
48. RUBY ON RAILS, SCAFFOLD CMD:
--------------------------------


scafolding


---


must be vagrant!


---


micro posting


---



table (model) Users:
--------------------

param		type
------		----
id 		integer
name 		string
email 		string


table (model) Microposts:
-------------------------

param		type
------		----
id 		integer
content 	text
user_id 	integer


----


scaffold - rails command


---


> rails g scaffold User name:string email:string

      invoke  active_record
      create    db/migrate/20200629190540_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      invoke  resource_route
       route    resources :users
      invoke  scaffold_controller
      create    app/controllers/users_controller.rb
      invoke    erb
      create      app/views/users
      create      app/views/users/index.html.erb
      create      app/views/users/edit.html.erb
      create      app/views/users/show.html.erb
      create      app/views/users/new.html.erb
      create      app/views/users/_form.html.erb
      invoke    test_unit
      create      test/controllers/users_controller_test.rb
      create      test/system/users_test.rb
      invoke    helper
      create      app/helpers/users_helper.rb
      invoke      test_unit
      invoke    jbuilder
      create      app/views/users/index.json.jbuilder
      create      app/views/users/show.json.jbuilder
      create      app/views/users/_user.json.jbuilder
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/users.coffee
      invoke    scss
      create      app/assets/stylesheets/users.scss
      invoke  scss
      create    app/assets/stylesheets/scaffolds.scss


> bundle exec rake db:migrate

== 20210129114458 CreateUsers: migrating ======================================
-- create_table(:users)
   -> 0.0053s
== 20210129114458 CreateUsers: migrated (0.0089s) =============================


---


> rails s


---


> rails db:migrate RAILS_ENV=development


---


== 20200629190540 CreateUsers: migrating ======================================
-- create_table(:users)
   -> 0.0039s
== 20200629190540 CreateUsers: migrated (0.0044s) =============================


MVC - Model View Controller


---


scaffolding faults:
-------------------

1. No validation
2. No authentication
3. No tests* (only elementary tests)
4. No styles (only basic styles)
5. Large code (only for nubs)


---


C:\Projects\ruby\rails\toy_app\test\controllers\users_controller_test.rb:
-------------------------------------------------------------------------

require 'test_helper'

class UsersControllerTest < ActionDispatch::IntegrationTest

  setup do
    @user = users(:one)
  end

  test "should get index" do
    get users_url
    assert_response :success
  end

  test "should get new" do
    get new_user_url
    assert_response :success
  end

  test "should create user" do
    assert_difference('User.count') do
      post users_url, params: { user: { email: @user.email, name: @user.name } }
    end

    assert_redirected_to user_url(User.last)
  end

  test "should show user" do
    get user_url(@user)
    assert_response :success
  end

  test "should get edit" do
    get edit_user_url(@user)
    assert_response :success
  end

  test "should update user" do
    patch user_url(@user), params: { user: { email: @user.email, name: @user.name } }
    assert_redirected_to user_url(@user)
  end

  test "should destroy user" do
    assert_difference('User.count', -1) do
      delete user_url(@user)
    end

    assert_redirected_to users_url
  end
end


---


> rails g scaffold Micropost content:text user_id:integer

      invoke  active_record
      create    db/migrate/20200629192856_create_microposts.rb
      create    app/models/micropost.rb
      invoke    test_unit
      create      test/models/micropost_test.rb
      create      test/fixtures/microposts.yml
      invoke  resource_route
       route    resources :microposts
      invoke  scaffold_controller
      create    app/controllers/microposts_controller.rb
      invoke    erb
      create      app/views/microposts
      create      app/views/microposts/index.html.erb
      create      app/views/microposts/edit.html.erb
      create      app/views/microposts/show.html.erb
      create      app/views/microposts/new.html.erb
      create      app/views/microposts/_form.html.erb
      invoke    test_unit
      create      test/controllers/microposts_controller_test.rb
      create      test/system/microposts_test.rb
      invoke    helper
      create      app/helpers/microposts_helper.rb
      invoke      test_unit
      invoke    jbuilder
      create      app/views/microposts/index.json.jbuilder
      create      app/views/microposts/show.json.jbuilder
      create      app/views/microposts/_micropost.json.jbuilder
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/microposts.coffee
      invoke    scss
      create      app/assets/stylesheets/microposts.scss
      invoke  scss
   identical    app/assets/stylesheets/scaffolds.scss


---


> bundle exec rake db:migrate

== 20200629192856 CreateMicroposts: migrating =================================
-- create_table(:microposts)
   -> 0.0050s
== 20200629192856 CreateMicroposts: migrated (0.0059s) ========================


---


validation:
-----------

class Micropost < ApplicationRecord
  validates :content, length: { maximum: 140 }
end


---


Associations realization:
-------------------------

one_to_many:

User 1------------->* Microposts:

class Micropost < ApplicationRecord
  belongs_to :user
  validates :content, length: { maximum: 140 }
end

class User < ApplicationRecord
  has_many :microposts
end


---


microposts		users
----------		-----
id			id
content			name
user_id			email


> select * from Microposts;

id          content              user_id     created_at                  updated_at
----------  -------------------  ----------  --------------------------  --------------------------
1           First scaffold post  1           2021-01-29 12:13:15.927452  2021-01-29 12:13:15.927452
2           Second scaffold pos  1           2021-01-29 12:13:52.438527  2021-01-29 12:13:52.438527
3           Third scaffold post  2           2021-01-29 12:14:38.829616  2021-01-29 12:14:38.829616


> select * from Users;

id          name        email             created_at                  updated_at
----------  ----------  ----------------  --------------------------  --------------------------
1           Mike        example@mail.com  2021-01-29 11:54:53.806982  2021-01-29 11:54:53.806982
2           Jake        xxx@mail.com      2021-01-29 11:56:20.852920  2021-01-29 11:56:20.852920


---


> start rails console


> First_user = User.first

(5.1ms)  SELECT sqlite_version(*)
  User Load (0.2ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?  [["LIMIT", 1]]
=> #<User id: 1, name: "Mike", email: "mike@some.com", created_at: "2020-06-29 19:14:22", updated_at: "2020-06-29 19:14:22">


---


> First_user.microposts

Micropost Load (0.3ms)  SELECT "microposts".* FROM "microposts" WHERE "microposts"."user_id" = ? LIMIT ?  [["user_id", 1], ["LIMIT", 11]]
=> #<ActiveRecord::Associations::CollectionProxy [#<Micropost id: 1, content: "First post haha", user_id: 1,
created_at: "2020-06-29 19:37:57", updated_at: "2020-06-29 19:37:57">, #<Micropost id: 2,
content: "Second post blabla", user_id: 1, created_at: "2020-06-29 19:38:35", updated_at: "2020-06-29 19:38:35">]>


---


> First_user.microposts.count

(94.2ms)  SELECT COUNT(*) FROM "microposts" WHERE "microposts"."user_id" = ?  [["user_id", 1]]
=> 2


---


> First_user.microposts.length

Micropost Load (0.5ms)  SELECT "microposts".* FROM "microposts" WHERE "microposts"."user_id" = ?  [["user_id", 1]]
=> 2


---


> First_user.microposts.first

=> #<Micropost id: 1, content: "First post haha", user_id: 1, created_at: "2020-06-29 19:37:57", updated_at: "2020-06-29 19:37:57">


---


> micropost = First_user.microposts.first

=> #<Micropost id: 1, content: "First post haha", user_id: 1, created_at: "2020-06-29 19:37:57", updated_at: "2020-06-29 19:37:57">


---


> micropost.user

=> #<User id: 1, name: "Mike", email: "mike@some.com", created_at: "2020-06-29 19:14:22", updated_at: "2020-06-29 19:14:22">


---


> micropost = First_user.microposts.last

=> #<Micropost id: 2, content: "Second post blabla", user_id: 1, created_at: "2020-06-29 19:38:35", updated_at: "2020-06-29 19:38:35">


---


inheritance:
------------

Activerecord::Base ---> user, micropost


---


usersController, micropostsController < ApplictionController < ActionController::Base


---


DRY


---


class Micropost < ApplicationRecord
  belongs_to :user
  validates :content, length: { maximum: 140 }, presece: true
  validates :user_id, presece: true
end

class User < ApplicationRecord
  has_many :microposts
  validates :name, presence: true
  validates :email, presence: true
end


DRY by inheritance


---


C:\Projects\ruby\rails\toy_app\app\assets\stylesheets\scaffolds.scss:
---------------------------------------------------------------------

body {
  background-color: #fff;
  color: #333;
  margin: 33px; }

body, p, ol, ul, td {
  font-family: verdana, arial, helvetica, sans-serif;
  font-size: 13px;
  line-height: 18px; }

pre {
  background-color: #eee;
  padding: 10px;
  font-size: 11px; }

a {
  color: #000; }

a:visited {
  color: #666; }

a:hover {
  color: #fff;
  background-color: #000; }

th {
  padding-bottom: 5px; }

td {
  padding: 0 5px 7px; }

div.field,
div.actions {
  margin-bottom: 10px; }

#notice {
  color: green; }

.field_with_errors {
  padding: 2px;
  background-color: red;
  display: table; }

#error_explanation {
  width: 450px;
  border: 2px solid red;
  padding: 7px 7px 0;
  margin-bottom: 20px;
  background-color: #f0f0f0; }

#error_explanation h2 {
  text-align: left;
  font-weight: bold;
  padding: 5px 5px 5px 15px;
  font-size: 12px;
  margin: -7px -7px 0;
  background-color: #c00;
  color: #fff; }

#error_explanation ul li {
  font-size: 12px;
  list-style: square; }

label {
  display: block; }


----


emails:
-------

SMTP server:
------------

1. Hosting - not too many messages, send to spam
2. Admin - best variant
3. Gmail - need add options


---


ActionMaileer


---


http:/rusrails.ru/action-mailer-basics


---


4. postmarkapp:
---------------

https://postmarkapp.com/

# Send an email with the Postmark Rails Gem
# Learn more -> https://postmarkapp.com/developer/integration/official-libraries#rails-gem


# Add this to your gemfile

gem 'postmark-rails'


# Add this to your config/application.rb file:

config.action_mailer.delivery_method = :postmark
config.action_mailer.postmark_settings = { :api_token => "POSTMARK_API_TEST" }


# Send the email

class TestMailer < ActionMailer::Base

  def hello
    mail(
      :subject => 'Hello from Postmark',
      :to  => 'receiver@example.com',
      :from => 'sender@example.com',
      :html_body => '<strong>Hello</strong> dear Postmark user.',
      :track_opens => 'true'
    )
  end
end


https://postmarkapp.com/developer/integration/official-libraries#rails-gem

transactional emails


---


https://github.com/wildbit/postmark-gem


---


https://github.com/wildbit/postmark-rails/


---


transactional emails:
---------------------

react to action in site


---


bulk email messaging


---


http://www.youtube.com/watch?v=FNOhpAWbika


---


unsubscribe_link!!


http://rusrails.ru/action-mailer-basics

http://rusrails.ru/a-guide-to-testing-rails-applications#testing-your-mailers


---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------
49. RUBY ON RAILS, POLYMORPHIC ASSOCIATIONS:
--------------------------------------------


Polymorphic associations:
-------------------------

git clone https://github.com/ro31337/poly-demo.git


---


DRY


---


Page:
-----

POST	PostComment
----

image	ImageComment
-----

link	LinkComment
----

POST	---|---
----

image	...
-----


---


comment for all models:
-----------------------

Post.comments
Image.comments
Link.comments


---


content, rating


---


> rails g model Comment content:text

  invoke  active_record
  create    db/migrate/20200630195658_create_comments.rb
  create    app/models/comment.rb
  invoke    test_unit
  create      test/models/comment_test.rb
  create      test/fixtures/comments.yml


---


> rails g model Post content:text

  invoke  active_record
  create    db/migrate/20200630195944_create_posts.rb
  create    app/models/post.rb
  invoke    test_unit
  create      test/models/post_test.rb
  create      test/fixtures/posts.yml


---


> rails g model Image url:string

  invoke  active_record
  create    db/migrate/20200630200117_create_images.rb
  create    app/models/image.rb
  invoke    test_unit
  create      test/models/image_test.rb
  create      test/fixtures/images.yml


---


comment.rb:
-----------

class Comment < ApplicationRecord
  belongs_to :commentable, polymorphic: true
end


---


post.rb:
--------

class Post < ApplicationRecord
  has_many :comments, as: :commentable
end


---


image.rb:
---------

class Post < ApplicationRecord
  has_many :comments, as: :commentable
end


---


C:\Projects\ruby\poly-demo\db\migrate\20200630195658_create_comments.rb:
------------------------------------------------------------------------

t.references :commentable, polymorphic: true

class CreateComments < ActiveRecord::Migration[6.0]

  def change
    create_table :comments do |t|
      t.text :content
      t.references :commentable, polymorphic: true

      t.timestamps
    end
  end
end


---


> bundle exec rake db:migrate

== 20200630195658 CreateComments: migrating ===================================
-- create_table(:comments)
   -> 0.0059s
== 20200630195658 CreateComments: migrated (0.0063s) ==========================

== 20200630195944 CreatePosts: migrating ======================================
-- create_table(:posts)
   -> 0.0060s
== 20200630195944 CreatePosts: migrated (0.0074s) =============================

== 20200630200117 CreateImages: migrating =====================================
-- create_table(:images)
   -> 0.0087s
== 20200630200117 CreateImages: migrated (0.0094s) ============================


---


> start rails c


> post = Post.create(content: 'Lorem Ipsum'):

(5.1ms)  SELECT sqlite_version(*)
   (0.1ms)  begin transaction
  Post Create (16.5ms)  INSERT INTO "posts" ("content", "created_at", "updated_at") VALUES (?, ?, ?)
[["content", "Lorem Ipsum"], ["created_at", "2020-06-30 20:21:42.102728"], ["updated_at", "2020-06-30 20:21:42.102728"]]
   (180.4ms)  commit transaction
=> #<Post id: 1, content: "Lorem Ipsum", created_at: "2020-06-30 20:21:42", updated_at: "2020-06-30 20:21:42">


---


> post.comments

Comment Load (0.3ms)  SELECT "comments".* FROM "comments" WHERE "comments"."commentable_id" = ? AND "comments"."commentable_type" = ?
LIMIT ?  [["commentable_id", 1], ["commentable_type", "Post"], ["LIMIT", 11]]
=> #<ActiveRecord::Associations::CollectionProxy []>


---


> post.comments.create(content: 'Comment one')

(0.1ms)  begin transaction
  Comment Create (2.0ms)  INSERT INTO "comments" ("content", "commentable_type", "commentable_id", "created_at", "updated_at")
VALUES (?, ?, ?, ?, ?)  [["content", "Comment one"], ["commentable_type", "Post"], ["commentable_id", 1],
["created_at", "2020-06-30 20:25:51.899699"], ["updated_at", "2020-06-30 20:25:51.899699"]]
   (106.6ms)  commit transaction
=> #<Comment id: 1, content: "Comment one", commentable_type: "Post", commentable_id: 1, created_at: "2020-06-30 20:25:51",
updated_at: "2020-06-30 20:25:51">


---


> post.comments.create(content: 'Comment two')

(0.1ms)  begin transaction
  Comment Create (2.0ms)  INSERT INTO "comments" ("content", "commentable_type", "commentable_id", "created_at", "updated_at")
VALUES (?, ?, ?, ?, ?)  [["content", "Comment two"], ["commentable_type", "Post"], ["commentable_id", 1],
["created_at", "2020-06-30 20:27:38.530938"], ["updated_at", "2020-06-30 20:27:38.530938"]]
   (246.3ms)  commit transaction
=> #<Comment id: 2, content: "Comment two", commentable_type: "Post", commentable_id: 1, created_at: "2020-06-30 20:27:38",
updated_at: "2020-06-30 20:27:38">


---


> image = Image.create(url: '1.jpg')

(0.1ms)  begin transaction
  Image Create (2.1ms)  INSERT INTO "images" ("url", "created_at", "updated_at") VALUES (?, ?, ?)  [["url", "1.jpg"],
["created_at", "2020-06-30 20:29:07.799997"], ["updated_at", "2020-06-30 20:29:07.799997"]]
   (201.6ms)  commit transaction
=> #<Image id: 1, url: "1.jpg", created_at: "2020-06-30 20:29:07", updated_at: "2020-06-30 20:29:07">


---


> image.comments

Comment Load (0.4ms)  SELECT "comments".* FROM "comments" WHERE "comments"."commentable_id" = ? AND "comments"."commentable_type" = ?
LIMIT ?  [["commentable_id", 1], ["commentable_type", "Image"], ["LIMIT", 11]]
=> #<ActiveRecord::Associations::CollectionProxy []>


---


> image.comments.create(content: 'comment for image 1')

(0.1ms)  begin transaction
  Comment Create (1.5ms)  INSERT INTO "comments" ("content", "commentable_type", "commentable_id", "created_at", "updated_at")
VALUES (?, ?, ?, ?, ?)  [["content", "comment for image 1"], ["commentable_type", "Image"], ["commentable_id", 1],
["created_at", "2020-06-30 20:32:14.531564"], ["updated_at", "2020-06-30 20:32:14.531564"]]
   (118.0ms)  commit transaction
=> #<Comment id: 3, content: "comment for image 1", commentable_type: "Image", commentable_id: 1, created_at: "2020-06-30 20:32:14",
updated_at: "2020-06-30 20:32:14">


---


> image.comments.create(content: 'comment for image 2')

(0.1ms)  begin transaction
  Comment Create (1.8ms)  INSERT INTO "comments" ("content", "commentable_type", "commentable_id", "created_at", "updated_at")
VALUES (?, ?, ?, ?, ?)  [["content", "comment for image 2"], ["commentable_type", "Image"], ["commentable_id", 1],
["created_at", "2020-06-30 20:33:31.674013"], ["updated_at", "2020-06-30 20:33:31.674013"]]
   (136.8ms)  commit transaction
=> #<Comment id: 4, content: "comment for image 2", commentable_type: "Image", commentable_id: 1, created_at: "2020-06-30 20:33:31",
updated_at: "2020-06-30 20:33:31">


---


> sqlite3 development.sqlite3

SQLite version 3.32.2 2020-06-04 12:58:43
Enter ".help" for usage hints.
sqlite> .mode columns
sqlite> .header on
sqlite> .tables:


ar_internal_metadata  images                schema_migrations
comments              posts


sqlite> select * from Images;

id          url         created_at                  updated_at
----------  ----------  --------------------------  --------------------------
1           1.jpg       2020-06-30 20:29:07.799997  2020-06-30 20:29:07.799997


sqlite> select * from Posts;

id          content      created_at                  updated_at
----------  -----------  --------------------------  --------------------------
1           Lorem Ipsum  2020-06-30 20:21:42.102728  2020-06-30 20:21:42.102728


sqlite> select * from Comments;

id          content      commentable_type  commentable_id  created_at                  updated_at
----------  -----------  ----------------  --------------  --------------------------  --------------------------
1           Comment one  Post              1               2020-06-30 20:25:51.899699  2020-06-30 20:25:51.899699
2           Comment two  Post              1               2020-06-30 20:27:38.530938  2020-06-30 20:27:38.530938
3           comment for  Image             1               2020-06-30 20:32:14.531564  2020-06-30 20:32:14.531564
4           comment for  Image             1               2020-06-30 20:33:31.674013  2020-06-30 20:33:31.674013


---


> Image.create(url: 'Lorem Ipsum'):

(0.1ms)  begin transaction
  Image Create (2.1ms)  INSERT INTO "images" ("url", "created_at", "updated_at") VALUES (?, ?, ?)  [["url", "Lorem Ipsum"],
["created_at", "2020-06-30 20:41:13.837408"], ["updated_at", "2020-06-30 20:41:13.837408"]]
   (135.9ms)  commit transaction
=> #<Image id: 2, url: "Lorem Ipsum", created_at: "2020-06-30 20:41:13", updated_at: "2020-06-30 20:41:13">


---


> image2 = Image.create(url: 'jpg 2'):

(0.1ms)  begin transaction
  Image Create (2.0ms)  INSERT INTO "images" ("url", "created_at", "updated_at") VALUES (?, ?, ?)  [["url", "jpg 2"],
["created_at", "2020-06-30 20:46:11.425738"], ["updated_at", "2020-06-30 20:46:11.425738"]]
   (190.6ms)  commit transaction
=> #<Image id: 3, url: "jpg 2", created_at: "2020-06-30 20:46:11", updated_at: "2020-06-30 20:46:11">


---


> image2.comments.create(content: 'Lorem ipsum')

(0.1ms)  begin transaction
  Comment Create (2.7ms)  INSERT INTO "comments" ("content", "commentable_type", "commentable_id", "created_at", "updated_at")
VALUES (?, ?, ?, ?, ?)  [["content", "Lorem ipsum"], ["commentable_type", "Image"], ["commentable_id", 3],
["created_at", "2020-06-30 20:47:29.087671"], ["updated_at", "2020-06-30 20:47:29.087671"]]
   (139.2ms)  commit transaction
=> #<Comment id: 5, content: "Lorem ipsum", commentable_type: "Image", commentable_id: 3, created_at: "2020-06-30 20:47:29",
updated_at: "2020-06-30 20:47:29">


---


select * from Images;

id          url         created_at                  updated_at
----------  ----------  --------------------------  --------------------------
1           1.jpg       2020-06-30 20:29:07.799997  2020-06-30 20:29:07.799997
2           Lorem Ipsu  2020-06-30 20:41:13.837408  2020-06-30 20:41:13.837408
3           jpg 2       2020-06-30 20:46:11.425738  2020-06-30 20:46:11.425738


sqlite> select * from Comments;

id          content      commentable_type  commentable_id  created_at                  updated_at
----------  -----------  ----------------  --------------  --------------------------  --------------------------
1           Comment one  Post              1               2020-06-30 20:25:51.899699  2020-06-30 20:25:51.899699
2           Comment two  Post              1               2020-06-30 20:27:38.530938  2020-06-30 20:27:38.530938
3           comment for  Image             1               2020-06-30 20:32:14.531564  2020-06-30 20:32:14.531564
4           comment for  Image             1               2020-06-30 20:33:31.674013  2020-06-30 20:33:31.674013
5           Lorem ipsum  Image             3               2020-06-30 20:47:29.087671  2020-06-30 20:47:29.087671


---


able


---


Pattern:
--------

singleton-demo:
---------------

git clone https://github.com/ro31337/singleton-demo.git


---


devops


GoF:
----

GANG OF FOUR


---


gof patterns


---


singleton:
----------

one object for everybody


---


@a          - instance variable


---


def blabla
end	   - instance method


---


@@a        - class variable


---


def self.bla
end	  - class method


---


private_class_method :new


---


require 'singleton'


---


@f.flash


---


app.rb:
-------

require 'singleton'

class Logger

  include Singleton

  def initialize
    @f = File.open 'log.txt', 'a'
  end

  def log_something what
    @f.puts what
  end
end


---


logger.rb:
----------

require './logger'

Logger.instance.log_something 'Blabla'

---------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------

----------
50. REGEX:
----------


Regex (regular expression):
---------------------------

[abc]  		Один символ: a, b или c
[^abc]  	Любой отдельный символ, кроме: a, b или c
[a-z]  		Любой отдельный символ в диапазоне a-z
[a-zA-Z]  	Любой отдельный символ в диапазоне a-z или A-Z
^  		Начало строки (line)
$  		Конец строки (line)
\A  		Начало строки (string)
\z  		Конец строки (string)
.  		Любой отдельный символ
\s  		Любой символ пробела
\S  		Любой непробельный символ
\d  		Любая цифра
\D  		Любая не цифра
\w  		Любой символ слова (буква, цифра, подчеркивание)
\W  		Any non-word character
\b  		Граница любого слова
(...)  		Захватить все вложенное
(a|b)  		a or b
a?  		Ноль или один из
a* 		Ноль или более
a+  		Один или несколько
a{3}  		Ровно 3
a{3,}  		3 или более
a{3,6}  	От 3 до 6


---


https://www.freeformatter.com/regex-tester.html


---


(?<month>\d{1,2})\/(?<day>\d{1,2})\/(?<year>\d{4})

Today's date is: 7/1/2020.


---


http://rubular.com


---


Regular expression

regex


---


find & replace


---


\b - Любая граница слова (cat\b)
\. - any symbol
\d - any number
{2} - count of same elements (\.\d{2}) (\.\d{1,2})
a+ - own or more (\n+)
* - zero or more (\n *) (\n\s*) (no+!*) (0{6}) (0{6}\b) (0{3,}) (ba{3,}) (^hello) (^http://.+)
\s - any whitespace
^ - start of line
$ - end of line (bye$) ($index.html) (^\$)
\w - word character
[abc] - single character of: a, b, or c ([$,])
() - pattern (something)+ ((\d{1,2})\/(\d{1,2})\/(\d{4}))


---


Regex functions:
----------------

1. Validation (email)
2. Change (cat -> dog)


---


Work with regex in sublime text:
--------------------------------

ctrl + h - regular expression panel


---


https://ruby-doc.org/core-2.5.1/Regexp.html



=========================================================================================================================================================
=========================================================================================================================================================


---------
Literals:
---------

%i - array of Symbols
%q - string
%r - regular Expression
%s - symbol
%w - array of Strings
%x - backtick (capture subshell result)



---------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------
Useful snippents for rails app building:
----------------------------------------


--------------------------
Check output info snippet:
--------------------------

render plain: params[:technology].inspect


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------
Rails console cmd for checking entity attributes:
-------------------------------------------------

Contact.attribute_names


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------
Restart page with get request syntax example:
---------------------------------------------

resource :contacts, only: [:new, :create], path_names: { :new => '' }


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------
Rails app for learn coding:
---------------------------

https://github.com/DefactoSoftWare/Hours/

https://happyhours.io/


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------
Link for sign out with helpers:
-------------------------------

<%= link_to 'Delete', technology_path(technology), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-primary btn-sm' %>


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Usefull sqlite3 helpfull cmd:
-----------------------------

pragma table_info(technologies);


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
Rails collections syntax example:
---------------------------------

@technology.lessons.build


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Form with collection example:
-----------------------------

<%= form_for ([@technology, @technology.lessons.build]) do |f| %>
  <%= f.text_field ... %>
<% end %>


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------
Add column (migration) cmd:
---------------------------

>rails g migration add_username_to_users username:string


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------
Migration example:
------------------

class AddUsername < ActiveRecord::Migration[6.0]
  def change
    add_column :users, :username, :string
  end
end


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------
Add index to database example:
------------------------------

rails g migration add_username_index


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------
Index migration example:
------------------------

class AddUsernameIndex < ActiveRecord::Migration[6.0]
  def change
    add_index :users, :username, unique: true
  end
end


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------------
Required params snippet (with devise):
--------------------------------------

class ApplicationController < ActionController::Base
  before_action :configure_permitted_parameters, if: :devise_controller?

  protected
  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:username])
  end
end


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------
DRY snippet example for controllers:
------------------------------------

Class ApplicationController < ActionController::Base
  before_action :set_categories

  private

  def set_categories
    @categories = Category.all
  end
end


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------
Learn more about accaunt creating:
----------------------------------

https://altalogy.com/blog/rails-6-user-accounts-with-3-types-of-roles/


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------
Account roles:
--------------

current_user.superadmin_role?
current_user.supervisor_role?
current_user.user_role?


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------
Snippet for sign out (for routes.rb):
-------------------------------------

devise_scope :user do
  get '/users/sign_out' => 'devise/sessions#destroy'
end


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------
Helpfull snippet:
-----------------

value: current_user.try(:username)


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------
LERN ABOUT AUTHENTICATION AND SENDING CONFIRMATION EMAIL USING DEVISE 2020:
---------------------------------------------------------------------------

https://www.bogotobogo.com/RubyOnRails/RubyOnRails_Devise_Authentication_Sending_Confirmation_Email.php


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------
Email and message sending API service (sendgrid):
-------------------------------------------------

https://sendgrid.com/docs/for-developers/sending-email/rubyonrails/


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------
Check later:
------------

https://www.youtube.com/watch?v=sVJRkTxqlSQ


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------
About mail send:
----------------

https://github.com/mikel/mail


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------
Add twitter-bootstrap to rails app:
-----------------------------------

---1---

yarn add bootstrap@4.5.2 jquery popper.js


---2---

add to environment.js:
       ---------------
const webpack = require("webpack")

environment.plugins.append("Provide", new webpack.ProvidePlugin({
  $: 'jquery',
  jQuery: 'jquery',
  Popper: ['popper.js', 'default']
}))


---3---

add to application.css:
       ----------------
 *= require bootstrap
 *= require_tree .
 *= require_self


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------
Lern ruby lessons:
------------------

https://www.youtube.com/channel/UCuEXLUx21ofCvFx8wFwtfNQ/videos


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------
Generate mailer cmd example:
----------------------------

rails g mailer CommentMailer new_comment


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
Configuration for gmail (mailer):
---------------------------------

https://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration-for-gmail


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------
Look at HTML Mailer:
--------------------

http://localhost:3000/rails/mailers/user_mailer/welcome_email

http://localhost:3000/rails/mailers


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------
Learn about simple_form helper:
-------------------------------

https://github.com/heartcombo/simple_form


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------
PostgerSQL documentation (db creating):
---------------------------------------

https://www.postgresql.org/docs/current/sql-createdatabase.html


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------
PostgreSQL cmd for role create:
-------------------------------

postgres=# CREATE ROLE second WITH SUPERUSER REPLICATION LOGIN CREATEDB CREATEROLE PASSWORD '123456';

\du
\q
\l


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------
Data Atom:
----------

[
  {
    name: "WindowsAuthentication"
    protocol: "sqlserver"
    user: "username"
    password: "password"
    server: "apphost/Username"
    database: "master"
    options: ""
  }

  {
    name: "SQLServerAuthentication"
    protocol: "sqlserver"
    user: "userlogin"
    password: "password"
    server: "apphost/sqlexpress"
    database: "master"
    options: ""
  }
]


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------
PostgreSQL documentation (Getting Started):
-------------------------------------------

https://www.microfocus.com/documentation/idol/IDOL_12_0/MediaServer/Guides/html/English/Content/Getting_Started/Configure/_TRN_Set_up_PostgreSQL.htm


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------------
Syntax for add POST params to console:
--------------------------------------

curl -d "name=oleg&price=120" -X POST http://localhost:3000/data


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------
PosgreSQL guide, get starting:
------------------------------

https://winitpro.ru/index.php/2019/10/25/ustanovka-nastrojka-postgresql-v-windows/


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------
PostgreSQL commands:
--------------------

https://guruadmin.ru/page/15-practical-postgresql-database-administration-commands


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------
Rails learning video:
---------------------

https://www.youtube.com/watch?v=qvGGz-2WHpU


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------
Rails app create cmd (property_finder):
---------------------------------------

rails new property_finder --database-postgresql --skip-test --skip-action-cable --skip-active-storage --skip-turbolinks --skip-yarn


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------
ImageMagick GraphicsMagick:
---------------------------

file:///C:/Program%20Files/ImageMagick-7.0.10-Q16-HDRI/index.html
file:///C:/Program%20Files%20(x86)/GraphicsMagick-1.3.34-Q16/www/index.html


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------
Add jquery to rails app snippet:
--------------------------------

const webpack = require('webpack')
environment.plugins.prepend('Provide',
  new webpack.ProvidePlugin({
    $: 'jquery/src/jquery',
    jQuery: 'jquery/src/jquery',
    Popper: ['popper.js', 'default']
  })
)


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Deploing rails app on heroku:
-----------------------------

1) heroku apps:create rails-geo-example
2) heroku open
3) git remote -v
4) git push heroku master
5) heroku rails db:migrate
   heroku run rails db:create
6) heroku logs
7) https://rails-geo-example.herokuapp.com/
8) https://git.heroku.com/rails-geo-example.git


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------
New API key for rails app:
--------------------------

>rails new my_api --api


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------
Console command for atom starting:
----------------------------------

>atom ./


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Add fontawesome to rails app:
-----------------------------

---1---

>yarn add @fortawesome/fontawesome-free


---2---

Import in your application.js file:
               --------------
import "@fortawesome/fontawesome-free/css/all.css";


https://stackoverflow.com/questions/55989717/rails-installing-font-awesome-in-rails-6-0-0-rc1-with-webpacker-and-yarn


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------
Rails multiple object create snippets for seeds.rb:
---------------------------------------------------

> Account.create([
  { username: 'John',  first_name: 'John',  last_name: 'Doe',   email: 'johndoe@example.com',    password: 'password' },
  { username: 'Jane',  first_name: 'Jane',  last_name: 'Smith', email: 'fanesmith@example.com',  password: 'password' },
  { username: 'Susan', first_name: 'Susan', last_name: 'Baker', email: 'susanbaker@example.com', password: 'password' },
])


Account.create([
  { first_name: 'Sarah',    last_name: 'Jones',   username: 'sarah',    email: 'sarah@example.com',     password: 'Password1' },
  { first_name: 'Emily',    last_name: 'Hart',    username: 'emily',    email: 'emily@example.com',     password: 'Password1' },
  { first_name: 'Melanie',  last_name: 'hunt',    username: 'melanie',  email: 'melanie@example.com',   password: 'Password1' },
  { first_name: 'Caroline', last_name: 'Simpson', username: 'caroline', email: 'caroline@example.com',  password: 'Password1' },
  { first_name: 'Bridget',  last_name: 'Smith',   username: 'bridget',  email: 'bridget@example.com',   password: 'Password1' }
])


Account.create([
  { username: 'sarah',    email: 'sarah@example.com',     password: 'Password1' },
  { username: 'emily',    email: 'emily@example.com',     password: 'Password1' },
  { username: 'melanie',  email: 'melanie@example.com',   password: 'Password1' },
  { username: 'caroline', email: 'caroline@example.com',  password: 'Password1' },
  { username: 'bridget',  email: 'bridget@example.com',   password: 'Password1' }
])


Account.create([
  { email: 'sarah@example.com',     password: 'Password1' },
  { email: 'emily@example.com',     password: 'Password1' },
  { email: 'melanie@example.com',   password: 'Password1' },
  { email: 'caroline@example.com',  password: 'Password1' },
  { email: 'bridget@example.com',   password: 'Password1' }
])


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------
OmniAuth Facebook for insta_clone:
----------------------------------

---1---

gem 'omniauth-facebook'

https://github.com/simi/omniauth-facebook
https://medium.com/@jvanier/omniauth-on-rails-4e0180e6a69e
https://www.youtube.com/watch?v=Dd8dOAL6WYs

---2---

>rails g migration AddOmniauthToAccounts provider:string uid:string

  invoke  active_record
  create    db/migrate/20210211092149_add_omniauth_to_accounts.rb

---3---

>rake db:migrate

== 20210211092149 AddOmniauthToAccounts: migrating ============================
-- add_column(:accounts, :provider, :string)
   -> 0.1721s
-- add_column(:accounts, :uid, :string)
   -> 0.0030s
== 20210211092149 AddOmniauthToAccounts: migrated (0.1778s) ===================


---4---

config.omniauth :facebook, 'APP_ID', 'APP_SECRET'


gem 'omniauth-facebook', '~> 8.0'
gem "omniauth", "~> 1.9.1"

https://developers.facebook.com/


---5---

class Accounts::OmniauthCallbacksController < Devise::OmniauthCallbacksController

  def facebook
    @account = Account.from_omniauth(request.env['omniauth.auth'])

    if @account.persisted?
      sign_in_and_redirect @account, event: :authentication
      set_flash_message(:notice, :success, kind: 'Facebook') if is_navigational_format?
    else
      session['devise.facebook_data'] = request.env['omniauth.auth']
      redirect_to new_account_registration_url
    end
  end

  def failure
    redirect_to root_path
  end
end


https://github.com/plataformatec/devise/wiki/OmniAuth:-Overview


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------
Add jquery twitter-bootstrap and popper.js to rails app with yarn:
------------------------------------------------------------------

>yarn add bootstrap jquery popper.js

@import 'bootstrap/scss/bootstrap';

require("bootstrap")



ADD JQUERY SNIPPET:

const webpack = require('webpack')
environment.plugins.prepend('Provide',
  new webpack.ProvidePlugin({
    $: 'jquery/src/jpuery',
    jQuery: 'jquery/src/jpuery',
    Popper: ['popper.js', 'default']
  })
)


https://gist.github.com/nachozt/799a54c1bba79975bdcfd4f67226ce22


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------
Rails 6 Amazon S3 storage guide:
--------------------------------

https://edgeguides.rubyonrails.org/active_storage_overview.html


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------
Site making resource:
---------------------

https://www.sitepoint.com/


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------
Rails ActiveStorage:
--------------------

---1---

>rails active_storage:install

Copied migration 20210212141003_create_active_storage_tables.active_storage.rb from active_storage


---2---

>rails db:migrate

== 20210212141003 CreateActiveStorageTables: migrating ========================
-- create_table(:active_storage_blobs, {})
   -> 1.0175s
-- create_table(:active_storage_attachments, {})
   -> 0.4084s
== 20210212141003 CreateActiveStorageTables: migrated (1.4302s) ===============


config.active_storage.service = :local


local:
  service: Disk
  root: <%= Rails.root.join("storage") %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Beautifull images and photos:
-----------------------------

https://unsplash.com/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------
Rails console reload from console:
----------------------------------

> reload!
                                                                                                                                                                                                                    Reloading...
=> true
irb(main):005:0>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------
Bootstrap 4.6:
--------------

https://getbootstrap.com/docs/4.6/getting-started/introduction/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------
Active Record Nested Attributes docs:
-------------------------------------

https://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------
Rails js.erb view file snippet example:
---------------------------------------

alert('message has been saved');
$("#initiate-conversation").hide();
$("#conversation_messages").html("<%= escape_javascript(render partial: 'browse/messages') %>");



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------------------------
Date helper for rails app with created_at example:
--------------------------------------------------

<%= @match.created_at.strftime("%d/%m/%Y") %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------
Get api key on UltraHook:
-------------------------

https://www.ultrahook.com/register



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------
Stripe documentation:
---------------------

https://dashboard.stripe.com/test/dashboard
https://dashboard.stripe.com/test/webhooks/we_1IQb1PAikeNSsMWCZHXNF934



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------
Stripe API:
-----------

https://stripe.com/docs/api/customers/create



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------
Stripe docs:
------------

https://stripe.com/docs/webhooks#signatures



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------
Get API key for Stripe:
-----------------------

https://www.ultrahook.com/

echo "api_key: PU6UGaBRGNKO65dcvhSAChdoxkxjSJr4" > ~/.ultrahook

PU6UGaBRGNKO65dcvhSAChdoxkxjSJr4



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------
Redirect to specific page by sign up with devise:
-------------------------------------------------

https://github.com/heartcombo/devise/wiki/How-To:-Redirect-to-a-specific-page-on-successful-sign-up-(registration)



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------
Twitter Bootstrap 4.3 examples:
-------------------------------

https://getbootstrap.com/docs/4.3/examples/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------
David Battersby clones:
-----------------------

https://github.com/search?q=david+battersby



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
Toastr for flash messages in app:
---------------------------------

https://github.com/CodeSeven/toastr

https://stackoverflow.com/questions/58777081/how-do-you-add-toastr-rails-gem-to-rails-6-project



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------
Flickr.com:
-----------

https://www.flickr.com/search/?text=groningen



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------
DefactoSoftware:
----------------

https://github.com/DefactoSoftware/Hours

https://happyhours.io/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------
Pluralize helper example:
-------------------------

<p><%= pluralize @subscriber_count %></p>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------
Simple format helper example:
-----------------------------

<%= simple_format @community.rules %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
Time ago in words helper example:
---------------------------------

<%= time_ago_in_words post.created_at %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------
Truncate helper example:
------------------------

<%= truncate post.body, length: 200 %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------
Date time format helper example:
--------------------------------

<%= @profile.created_at.strftime('%d/%m/%Y') %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------
Using javascript in rails controller example:
---------------------------------------------

class CommentsController < ApplicationController

  def create
    @comment = Comment.new comment_params
    @comment.account_id = current_account.id

    respond_to do |format|
      format.js {
        if @comment.save
          @comments = Comment.where(post_id: @comment.post_id)
          render 'comments/create'
        else
          # unable to save
        end
      }
    end
  end

  def comment_params
    params.require(:comment).permit(:message, :post_id)
  end
end


file.js.erb:
------------

document.getElementById('post-comments').innerHTML = "<%= escape_javascript(render partial: 'posts/comments', locals: { comments: @comments }) %>";



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------
New reloc One account:
----------------------

https://one.newrelic.com/launcher
/nr1-core.home?pane=eyJuZXJkbGV0SWQiOiJucjEtY29yZS5saXN0aW5nLWVtcHR5LXN0YXRlIn0=&cards[0]
=eyJuZXJkbGV0SWQiOiJzZXR1cC1uZXJkbGV0cy5zZXR1cC1ydWJ5LWludGVncmF0aW9uIiwiYWNjb3VudElkIjozMDg4OTg1fQ==&platform[accountId]
=3088985&platform[timeRange][duration]=1800000&platform[$isFallbackTimeRange]=true



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------
Sass tool:
----------

https://github.com/thoughtbot/bourbon#installation



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------
Sass basics:
------------

https://sass-lang.com/guide



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------
Declare jquery $:
-----------------

window.jQuery = $;
window.$ = $;



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------
$ is not defined for remote calls with respond to js.erb:
---------------------------------------------------------

https://github.com/gorails-screencasts/rails-6-webpacker-javascript-flatpickr/issues/1
https://stackoverflow.com/questions/55895494/is-not-defined-when-installing-jquery-in-rails-via-webpack



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------
Ruby Geocoder:
--------------

http://www.rubygeocoder.com/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------
Lorem Ipsum text:
-----------------

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------
Deploy app to heroku:
---------------------

---1---

$ heroku apps:create rails-location-detect

 »   Warning: heroku update available from 7.42.6 to 7.50.0.
Creating ⬢ rails-location-detect... done
https://rails-location-detect.herokuapp.com/ | https://git.heroku.com/rails-location-detect.git

---2---

$ heroku open

 »   Warning: heroku update available from 7.42.6 to 7.50.0.

---3---

$ git remote -v

heroku  https://git.heroku.com/rails-location-detect.git (fetch)
heroku  https://git.heroku.com/rails-location-detect.git (push)
origin  git@github.com:TheGor-365/location_detect.git (fetch)
origin  git@github.com:TheGor-365/location_detect.git (push)

---4---

$ git status

On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

---5---

$ git push heroku master


---6---

$ heroku run rails db:create
$ heroku run rails db:migrate

https://rails-location-detect.herokuapp.com/ deployed to Heroku



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------
Atom IDE constamization:
------------------------

https://www.material-theme.com/docs/configuration/icons-settings/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------
Getting API's for oath_app:
---------------------------

Add to Gemfile:
       --------
gem 'omniauth'
gem 'omniauth-facebook'
gem 'omniauth-github', github: 'omniauth/omniauth-github', branch: 'master'
gem 'omniauth-google-oauth2'
gem "omniauth-rails_csrf_protection"
gem 'activerecord-session_store'
gem 'devise', github: 'heartcombo/devise', branch: 'ca-omniauth-2'


devise for omniauth:

https://stackoverflow.com/questions/65702896/latest-omniauth-facebook-gem-breaks-devise


Credentials for Rails 6:

https://dev.to/yarotheslav/ruby-on-rails-6-credentials-quick-guide-2g8i



---1---

Facebook for developers
https://developers.facebook.com/apps/427450925200664/settings/basic/

Facebook App ID:
427450925200664

Secret key:
9da417863abd3abf9865ec583d06a6bb


---2---

GitHub for developers:
https://github.com/settings/applications/1495661


Authorization callback URL:
http://localhost:3000/users/auth/github/callback


Client ID:
312477946ec39dcb80ac


Client secrets:
138f3ef1603fe6759819167dcbc5fd63393dfb73


---3---

Google
https://console.cloud.google.com/apis/dashboard?pli=1&project=property-finder-289221&folder=&organizationId=


API key:
AIzaSyDGGhIBg984-J2vyWdsVznEpG2rf0Zk1c8


Authorization callback URL:
http://localhost:3000/users/auth/google_oauth2/callback


Client ID:
351657204801-oao6uomlmhqv2a9l3fupurjb444hqnds.apps.googleusercontent.com


Client secret:
R7s767hu79i4UvV8yFzyRCEi


---4---

C:\Projects\rails_basics\oauth_app\config\credentials.yml.enc
                                          -------------------
$ EDITOR=vim rails credentials:edit

for edit the file --- press i
                           ---
when done --- press ESC + :wq + ENTER to exit with saving
                    -----------------
( or ESC + :q! + ENTER to exit without saving )
     -----------------
editing vim file...


---5---

File encrypted and saved.


$ rails credentials:show

C:\Users\74955\AppData\Local\Temp\656.credentials.yml
                                  -------------------
facebook:
  facebook_client_id: 427450925200664
  facebook_client_secret: 9da417863abd3abf9865ec583d06a6bb

github:
  github_client_id: 312477946ec39dcb80ac
  github_client_secret: 138f3ef1603fe6759819167dcbc5fd63393dfb73

google:
  google_client_id: 351657204801-oao6uomlmhqv2a9l3fupurjb444hqnds.apps.googleusercontent.com
  google_client_secret: R7s767hu79i4UvV8yFzyRCEi

secret_key_base: 23960f33178f13b9ded84bbb7c5aaa28625fbc6167f2c7e1c20da0adb2dd9b4b965d2768c1fc4f502b90256de18098e5b341b5e856f166fddc01914e02c9c8d6


rails c:

> Rails.application.credentials.dig(:facebook, :facebook_client_secret)

=> "9da417863abd3abf9865ec583d06a6bb"


---7---

C:\Projects\rails_basics\oauth_app\config\initializers\devise.rb
                                                       ---------
#config.omniauth :github, 'APP_ID', 'APP_SECRET', scope: 'user,public_repo'

  config.omniauth :facebook, Rails.application.credentials.dig(:facebook, :facebook_client_id),
  Rails.application.credentials.dig(:facebook, :facebook_client_secret), scope: 'public_profile,email'

  config.omniauth :github, Rails.application.credentials.dig(:github, :github_client_id),
  Rails.application.credentials.dig(:github, :github_client_secret), scope: 'user,public_repo'

  config.omniauth :google_oauth2, Rails.application.credentials.dig(:google, :google_client_id),
  Rails.application.credentials.dig(:google, :google_client_secret), scope: 'userinfo.email,userinfo.profile'


---8---

$ cd 'c:\Projects\rails_basics\oauth_app\config\initializers\session_store.rb'
                                                             -----------------
Rails.application.config.session_store :active_record_store, key: '_devise_omniauth_session'


---9---

$ rails g migration update_users

      invoke  active_record
      create    db/migrate/20210312165207_update_users.rb


class UpdateUsers < ActiveRecord::Migration[6.0]
  def change
    add_column :users, :provider, :string, limit: 50, null: false, default: ''
    add_column :users, :uid, :string, limit: 500, null: false, default: ''
  end
end


$ rails g migration create_sessions

      invoke  active_record
      create    db/migrate/20210312165940_create_sessions.rb

class CreateSessions < ActiveRecord::Migration[6.0]
  def change
    create_table :sessions do |t|
      t.string :session_id, null: false
      t.text :data

      t.timestamps
    end
    add_index :sessions, :session_id, unique: true
    add_index :sessions, :updated_at
  end
end


$ rails db:migrate

== 20210312165207 UpdateUsers: migrating ======================================
-- add_column(:users, :provider, :string, {:limit=>50, :null=>false, :default=>""})
   -> 0.4033s
-- add_column(:users, :uid, :string, {:limit=>500, :null=>false, :default=>""})
   -> 0.0062s
== 20210312165207 UpdateUsers: migrated (0.4177s) =============================

== 20210312165940 CreateSessions: migrating ===================================
-- create_table(:sessions)
   -> 0.8919s
-- add_index(:sessions, :session_id, {:unique=>true})
   -> 0.2023s
-- add_index(:sessions, :updated_at)
   -> 0.0253s
== 20210312165940 CreateSessions: migrated (1.1264s) ==========================


---10---

C:\Projects\rails_basics\oauth_app\app\models\user.rb
                                              -------
class User < ApplicationRecord

  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable

  devise :database_authenticatable, :registerable,
  :recoverable, :rememberable, :validatable, :omniauthable,
  omniauth_providers: [ :facebook, :github, :google_oauth2 ]

  def self.create_from_provider_data(provider_data)
    where(provider: provider_data.provider, uid: provider_data.uid).first_or_create do |user|
      user.email = provider_data.info.email
      user.password = Devise.friendly_token[ 0, 20 ]
    end
  end
end


---11---

$ rails g controller omniauth

  create  app/controllers/omniauth_controller.rb
  invoke  erb
  create    app/views/omniauth
  invoke  test_unit
  create    test/controllers/omniauth_controller_test.rb
  invoke  helper
  create    app/helpers/omniauth_helper.rb
  invoke    test_unit
  invoke  assets
  invoke    scss
  create      app/assets/stylesheets/omniauth.scss



---12---

C:\Projects\rails_basics\oauth_app\app\controllers\omniauth_controller.rb
                                                   ----------------------
class OmniauthController < ApplicationController

  def facebook
    @user = User.create_from_provider_data(request.env['omniauth.auth'])

    if @user.persisted?
      sign_in_and_redirect @user
    else
      flash[:error] = 'There was a problem signing you in through Facebook. Please register or try signing in later.'
      redirect_to new_user_registration_url
    end
  end

  def github
    @user = User.create_from_provider_data(request.env['omniauth.auth'])

    if @user.persisted?
      sign_in_and_redirect @user
    else
      flash[:error] = 'There was a problem signing you in through Github. Please register or try signing in later.'
      redirect_to new_user_registration_url
    end
  end

  def google_oauth2
    @user = User.create_from_provider_data(request.env['omniauth.auth'])

    if @user.persisted?
      sign_in_and_redirect @user
    else
      flash[:error] = 'There was a problem signing you in through Google. Please register or try signing in later.'
      redirect_to new_user_registration_url
    end
  end

  def failure
    flash[:error] = 'There was a problem signing you in. Please register or signing in later.'
    redirect_to new_user_registration_url
  end
end


---13---

C:\Projects\rails_basics\oauth_app\app\views\devise\shared\_links.html.erb
                                                           ---------------
<%- if devise_mapping.omniauthable? %>
  <%- resource_class.omniauth_providers.each do |provider| %>
    <%= link_to "Sign in with #{OmniAuth::Utils.camelize(provider)}", omniauth_authorize_path(resource_name, provider),
method: :post, class: 'text-decoration-none' %><br />
  <% end %>
<% end %>

add:

method: :post / button_to


customize devise pages!


---14---

routes.rb
---------
Rails.application.routes.draw do

  devise_for :users, controllers: { omniauth_callbacks: 'omniauth' }

  root to: 'public#home'

end



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------
Oauth twitter for Rails app:
----------------------------

$ bundle add omniauth-twitter omniauth-rails_csrf_protection



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------
Set your master key in production (heroku example):
---------------------------------------------------

$ heroku config:set RAILS_MASTER_KEY=YOURMASTERKEY

$ heroku config:set RAILS_MASTER_KEY=`cat config/master.key`



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------
Devise Authentication Guide with GitHub OmniAuth for Rails Application (tutorial):
----------------------------------------------------------------------------------

https://salmaeng71.medium.com/devise-authentication-guide-with-github-omniauth-for-rails-application-220aa52d5b82



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------
Oauth authentication tutorial and guide:
----------------------------------------

https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview


https://github.com/cookpad/omniauth-rails_csrf_protection

gem "omniauth-rails_csrf_protection"



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------
Oauth: list of strategies guide:
--------------------------------

https://github.com/omniauth/omniauth/wiki/List-of-Strategies



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------
OmniAuth with multiple models guide:
------------------------------------

https://github.com/heartcombo/devise/wiki/OmniAuth-with-multiple-models



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------
Your Yarn packages are out of date:
-----------------------------------

$ yarn install --check-files



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------
github_login app oauth callback path:
-------------------------------------

http://localhost:3000/users/auth/github/callback



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------
add credentials for google_map app cmd:
---------------------------------------

$ rails credentials:edit --environment=development



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------
gem 'flash_rails_messages':
---------------------------

<%= render_flash_messages %>
<%= render_flash_messages dismissible: true %>
<%= render_flash_messages dismissible: true, id: 'my-alert', class: 'custom-class' %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------
google-maps project credentials and guides links:
-------------------------------------------------

https://console.cloud.google.com/apis/credentials?hl=ru&project=g-maps-307916&angularJsUrl=%2Fprojectselector%2Fapis%2
Fcredentials%3Fhl%3Dru%26supportedpurview%3Dproject%26project%3Dg-maps-307916&folder=&organizationId=&supportedpurview=project

https://github.com/apneadiving/Google-Maps-for-Rails
https://github.com/apneadiving/Google-Maps-for-Rails/wiki/Change-handler-behavior
http://underscorejs.org/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------
Rails toastr guide:
-------------------

https://stackoverflow.com/questions/58777081/how-do-you-add-toastr-rails-gem-to-rails-6-project


---1---

$ yarn add toastr


---2---

app/javascript/packs/application.js
                     --------------
global.toastr = require("toastr")


---3---

touch app/javascript/stylesheets/application.scss
                                 ----------------
import in app/javascript/stylesheets/application.scss
                                     ----------------
@import 'toastr'


---4---

app/javascript/packs/application.js
                     --------------
import "../stylesheets/application"


---5---

application_helper.rb
---------------------

def toastr_flash
  flash.each_with_object([]) do |(type, message), flash_messages|
    type = 'success' if type == 'notice'
    type = 'error' if type == 'alert'
    text = "<script>toastr.#{type}('#{message}', '', { closeButton: true, progressBar: true })</script>"
    flash_messages << text.html_safe if message
  end.join("\n").html_safe
end


---6---

layouts/application.html.erb
----------------------------

<%= toastr_flash %>



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


------------
Hello rails:
------------

https://hellorails.io/


https://www.youtube.com/playlist?list=PL01nNIgQ4uxNkDZNMON-TrzDVNIk3cOz4



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------
Rails 6 (and 5): User Accounts with 3 types of Roles – Devise, Rails Admin, CanCanCan:
--------------------------------------------------------------------------------------

https://altalogy.com/blog/rails-6-user-accounts-with-3-types-of-roles/



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


-------------------------
Build with Ruby on Rails:
-------------------------

https://web-crunch.com/collections/lets-build-with-ruby-on-rails



---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------


---------------
css web helper:
---------------

https://cssmatic.com/



---------------------------------------------------------------------------------------------------------------------------------------------------------




























