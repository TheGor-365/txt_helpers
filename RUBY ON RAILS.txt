----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------
☝️RUBY ON RAILS:
----------------


https://guides.rubyonrails.org/routing.html


---

----------------
Generalizations:
----------------

1. Создайте новое приложение Rails.
2. Создайте контроллер и добавьте действие.
3. Создайте маршрут, который сопоставляет URL-адрес с действием контроллера.
4. Создайте представление с помощью HTML и CSS.
5. Запустите локальный веб-сервер и просмотрите приложение в браузере.



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------
Hello Rails I:
--------------

$ rails new MySite

$ bundle install

$ rails server



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------
Hello Rails II:
---------------

---1---

$ rails generate controller Pages 

---2---

app/controllers/pages_controller.rb

---3---

def home
end


---

class PagesController < ApplicationController
  def home
  end
end



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

-------
Routes:
-------

1. config/routes.rb

2. get 'welcome' => 'pages#home'


---

Rails.application.routes.draw do
  get 'welcome' => 'pages#home'

  # The priority is based upon order of creation: first created -> highest priority.
  # See how all your routes lay out with "rake routes".

  # You can have the root of your site routed with "root"
  # root 'welcome#index'

  # Example of regular route:
  #   get 'products/:id' => 'catalog#view'

  # Example of named route that can be invoked with purchase_url(id: product.id)
  #   get 'products/:id/purchase' => 'catalog#purchase', as: :purchase

  # Example resource route (maps HTTP verbs to controller actions automatically):
  #   resources :products

  # Example resource route with options:
  #   resources :products do
  #     member do
  #       get 'short'
  #       post 'toggle'
  #     end
  #
  #     collection do
  #       get 'sold'
  #     end
  #   end

  # Example resource route with sub-resources:
  #   resources :products do
  #     resources :comments, :sales
  #     resource :seller
  #   end

  # Example resource route with more complex sub-resources:
  #   resources :products do
  #     resources :comments
  #     resources :sales do
  #       get 'recent', on: :collection
  #     end
  #   end

  # Example resource route with concerns:
  #   concern :toggleable do
  #     post 'toggle'
  #   end
  #   resources :posts, concerns: :toggleable
  #   resources :photos, concerns: :toggleable

  # Example resource route within a namespace:
  #   namespace :admin do
  #     # Directs /admin/products/* to Admin::ProductsController
  #     # (app/controllers/admin/products_controller.rb)
  #     resources :products
  #   end

end



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

------
Views:
------

1. app/views/pages/home.html.erb

2. <div class="main">
     <div class="container">
       <h1>Hello my name is __</h1>
       <p>I make Rails apps.</p>
     </div>
   </div>

3. app/assets/stylesheets/pages.css.scss

4. http://localhost:8000/welcome



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

$ rails new broadway
$ cd broadway
$ bundle install



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

------
Model:
------

1.

$ rails generate model Message 

2. db/migrate/

3. t.text :content 

4. 

class CreateMessages < ActiveRecord::Migration
     def change
       create_table :messages do |t|
         t.text :content
         t.timestamps
       end
     end
   end
end

5. bundle exec rake db:migrate

6. bundle exec rake db:seed



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------
Controller:
-----------

1. 

$ rails g controller Messages

2. app/config/routes.rb

3. get 'messages' => 'message#index'

4. app/controllers/messages_controller.rb

5. 

def index 
  @messages = Message.all 
end


---

class MessagesController < ApplicationController
  def index
    @messages = Message.all
  end
end




----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

-----
View:
-----

1. app/views/messages/index.html.erb

2. 

<% @messages.each do |message| %> 
<div class="message"> 
  <p class="content"><%= message.content %></p> 
  <p class="time"><%= message.created_at %></p> 
</div> 
<% end %>


---

<div class="header">
  <div class="container">
    <img src="http://s3.amazonaws.com/codecademy-content/courses/learn-rails/img/logo-1m.svg">
    <h1>Messenger</h1>
  </div>
</div>

<div class="messages">
  <div class="container">
  
    <!-- Your code here -->
    <% @messages.each do |message| %>
      <div class="message">
        <p class="content"><%= message.content %></p>
        <p class="time"><%= message.created_at %></p>
      </div>
    <% end %>
  </div>
</div>


---

3. http://localhost:8000/messages



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------
Create messages I:
------------------

1. config/routes.rb

2. get 'messages/new' => 'messages#new'

3. app/controllers/messages_controller.rb

4. 

def new 
  @message = Message.new 
end 


---

class MessagesController < ApplicationController
  def index
    @messages = Message.all
  end

  def new
    @message = Message.new
  end
end



5. config/routes.rb

6. post 'messages' => 'messages#create'

7. app/controllers/messages_controller.rb

8. 

private 
  def message_params 
    params.require(:message).permit(:content) 
  end 

9. 

def create 
  @message = Message.new(message_params) 
  if @message.save 
    redirect_to '/messages' 
  else 
    render 'new' 
  end 
end 

10. app/views/messages/new.html.erb

11. 

<%= form_for(@message) do |f| %>  
  <div class="field"> 
    <%= f.label :message %><br> 
    <%= f.text_area :content %> 
  </div> 
  <div class="actions"> 
    <%= f.submit "Create" %> 
  </div> 
<% end %>


---

<% @messages.each do |message| %> - перебирает каждое сообщение в массиве @messages
@messages - array
<%= message.content %> - отобразить его содержимое
<%= message.created_at %> - отображение времени его создания


---

<div class="header">
  <div class="container">
    <img src="http://s3.amazonaws.com/codecademy-content/courses/learn-rails/img/logo-1m.svg">
    <h1>Messenger</h1>
  </div>
</div>

<div class="create">
  <div class="container">
   	<%= form_for(@message) do |f| %>  
  		<div class="field"> 
    			<%= f.label :message %><br> 
    			<%= f.text_area :content %> 
  		</div> 
  		<div class="actions"> 
    			<%= f.submit "Create" %> 
  		</div> 
		<% end %>
  </div>
</div>


---

12. app/views/messages/index.html.erb

13. <%= link_to 'New Message', "messages/new" %>


---

<div class="header">
  <div class="container">
    <img src="http://s3.amazonaws.com/codecademy-content/courses/learn-rails/img/logo-1m.svg">
    <h1>Messenger</h1>
  </div>
</div>

<div class="messages">
  <div class="container">
  	<% @messages.each do |message| %> 
			<div class="message"> 
  				<p class="content"><%= message.content %></p> 
  				<p class="time"><%= message.created_at %></p> 
			</div> 
		<% end %>
		<%= link_to 'New Message', "messages/new" %>
  </div>
</div>


---

14. http://localhost:8000/messages



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

$ rails new innovation-cloud
$ cd innovation-cloud
$ bundle install

$ rails g controller Signups
$ rails g controller Pages

$ touch app/views/signups/new.html.erb
$ touch app/views/pages/thanks.html.erb
$ touch app/assets/stylesheets/pages.css

$ rails g model Signup
$ bundle exec rake db:migrate


app/controllers/pages_controller.rb:
------------------------------------

def thanks
	get '/thanks' => 'pages#thanks'
end


config/routes.rb:
-----------------

resources :signups


$ bundle exec rake routes


app/controllers/signup_controller.rb:
-------------------------------------

def new
    @signup = Signup.new
end


app/views/signups/new.html.erb:
-------------------------------

<%= form_for(@signup) do |f| %>
  <%= f.text_field :email, :placeholder => "Email" %>
  <%= f.submit "Join", :class =>'btn' %> 
<% end %>


config/routes.rb:
-----------------

root 'signup#new'


app/controllers/signups_controller.rb:
--------------------------------------

def create
  @signup = Signup.new(signup_params)

  if @signup.save
    redirect_to thanks_url
  else
    render 'new'
  end
end

private
def signup_params
params.require(:signup).permit(:email)
end


$ cd innovation-cloud
$ rails console


Signup.all
Ctrl + d



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

$ rails new threadly
$ cd threadly
$ bundle install

$ rails g controller Posts

$ touch app/views/posts/index.html.erb
$ touch app/assets/stylesheets/posts.css

$ rails g model Post


db/migrate/...:
---------------

t.string :comment

$ bundle exec rake db:migrate


app/controllers/posts_controller.rb:
------------------------------------

resources :posts


$ bundle exec rake routes


app/controllers/posts_controller.rb:
------------------------------------

def index
	@posts = Post.all
end

def index
	@new_post = Post.new
	@all_posts = Post.order(created_at: :desc).all
end


app/views/posts/index.html:
---------------------------

<ul class="comments">
  <% @all_posts.each do |p| %>
    <li><%= p.comment %></li>
  <% end %>
</ul>



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------
ASSOCIATIONS:
-------------

Models:
-------

Tag, Destination

class Tag < ActiveRecord::Base
  has_many :destinations
end

class Destination < ActiveRecord::Base
  belongs_to :tag
end

has_many :destinations  - обозначает, что один Tag может иметь несколько Destinations
belongs_to :tag         - обозначает, что каждый Destination принадлежит одному Tag
has_many / belongs_to   - часто используется для определения отношений один-ко-многим

t.references :some_table- добавляет внешний ключ, указывающий на таблицу

@destinations = @tag.destinations - извлекает все пункты назначения, принадлежащие тегу, и сохраняет их в файле @destinations



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

-------
ROR 37:
-------

1.

$ rails new blog

2.

$ rails server


---

http://localhost:3000


---

$ rails server -e (envairment key)
$ rails server -e development


---

$ rails server

4.

$ rails generate Some_Generator params
$ rails g


Generators:
-----------

controller
model


---

$ rails g controller home index

5.

http://localhost:3000/home/index

6.

$ rails g model Article title:string text:text


---

app/db/migrate/111_create_migrate.rb:
-------------------------------------

class Create Articles < ActiveRecord::Migration
  def change
    create_table :articles do |t|
      t.string :title
      t.text :text

      t.timestamps
    end
  end
end


---

app/models/article.rb:
----------------------

class Article < ActiveRecord::Base
end


7.

$ rake db:migrate


---

app/db/development.sqlite3


8.

sqlite3 development.sqlite

.tables


---

articles	schime_migrations


9.

$ rake routes


---

home_index GET /home/index(.:format) home#index


---

blog/config/routes.rb:

Rails.application.routes.draw do
  get '/' => 'home/index'
end


10.

blog/config/routes.rb:
----------------------

resources :articles

11.

$ rake routs


---

home_index	GET	/home/index		home#index
articles	GET	/articles		articles#index
		POST	/articles		articles#create
new_article	GET	/articles/new		articles#new
edit_article	GET	/articles/:id/edit	articles#edit
article		GET	/articles/:id/show	articles#show
		PATCH	/articles/:id		articles#update
		PUT	/articles/:id		articles#update
		DELETE	/articles/:id		articles#destroy



12.

http://localhost:3000/articles/new:


---

! Roating error


13.

$ rails g controller articles


---

app/controllers/articles_controller.rb:
---------------------------------------

class ArticlesController < ApplicationController
end	


14.

http://localhost:3000/articles/new:
-----------------------------------

! Uncknown action



15.

app/controllers/articles_controller.rb:
---------------------------------------

def new
end


---

class ArticlesController < ApplicationController
	def new
	end
end


16.

http://localhost:3000/articles/new:
-----------------------------------

! Template missing


17.

app/views/articles:
-------------------

new.html.erb:
-------------

<h1>New article</h1>


18. 

http://localhost:3000/articles/new:
-----------------------------------

=> New article

19.

app/views/articles/new.html.erb:
--------------------------------

<%= from_for :article do |f| %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>

  <p>
    <%= f.label :text %>
    <%= f.text_area :text %>
  </p>

  <p>
    <%= f.submit %>
  </p>	
<% end %>


20.

$ rake routes


---
...
new_article	GET	/articles/new	articles#new
...
---
new.html.erb:
url: '/articles'(or articles_path)


---

<%= from_for :article, url: articles_path do |f| %>


21.

app/controllers/articles_controller.rb:
---------------------------------------

def create
end


---

class ArticlesController < ApplicationController
  def new
  end

  def create
  end
end


---

localhost:3000/articles:
------------------------

! Template missing


22.

articles_controller.rb:
-----------------------

render plain: params[:article].inspect


---

def create
	render plain: params[:article].inspect
end


23.

localhost:3000/articles:
------------------------

{"title" => "123", "text" => "123"}



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

38.

localhost:3000/contacts:
------------------------

! Roating error


1.

$ rails g controller contacts


app/controllers/contacts_controller.rb:
---------------------------------------

class ContactsController < ApplecationController
end


2.

def index
end


---

class ContactsController < ApplecationController
  def index
  end
end


3.

config/routes.rb:
-----------------

get 'contacts/index'


---

Rails.application.routes.draw do
  get '/' => 'home/index'
  get 'contacts/index'
  resources :articles
end


---

--------
REVERSE:
--------

a. GET page (new)
b. POST data (create)

1.

contacts_controller.rb:
-----------------------

class ContactsController < ApplecationController
  def new
  end

  def create
  end
end

2.

config/routes.rb:
-----------------

resource :contacts, only: [:new, :create]


---

Rails.application.routes.draw do
  get '/' => 'home/index'

  resource :contacts, only: [:new, :create]
  resources :articles
end


3.

$ rake routes


---

contacts	POST	/contacts	contacts#create
new_contacts	GET	/contacts/new	contacts#new


4.

localhost:3000/contacts/new:
----------------------------

! template error


5.

app/views/contacts:
-------------------

new.html.erb:
-------------

<h1>Contact us</h1>


6.

localhost:3000/contacts/new:
=> Contact us


---

$ rails g model Contact email:string message:text


7.

$ rake db:migrate

$ sqlite3 evelopment.sqlite

.tables


8.

$ rails console

Contact.all
(SELECT * FROM contacts;)

Article.all
(SELECT * FROM article;)

Contact.attribute_names
Article.attribute_names

exit


9.

app/views/contacts/new.html.erb:
--------------------------------

<%= from_for :contact, url: contacts_path do |f| %>
  <p>
    <%= f.label :email %>
    <%= f.text_field :email %>
  </p>

  <p>
    <%= f.label :message %>
    <%= f.text_area :message %>
  </p>

  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


10.

http://guades.rubyonrails.org/routing.html

app/views/contacts/create.html.erb:
-----------------------------------

<h1>Thanks</h1>


11.

app/controllers/contacts_controller.rb:
---------------------------------------

def create
	@contact = Contact.new(params[:contact])
end


---

class ContactsController < ApplecationController
  def new
  end

  def create
    @contact = Contact.new(params[:contact])
  end
end


---


private

def contact_params
	params.require(:contact).permit(:email, :message)
end


---

class ContactsController < ApplecationController
  def new
  end

  def create
    @contact = Contact.new(contact_params)
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


12.

app/controllers/contacts_controller.rb:
---------------------------------------

def create
	@contact.save
end


---

class ContactsController < ApplecationController
  def new
  end

  def create
    @contact = Contact.new(contact_params)
    @contact.save
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


13.

$ rails console

Contact.all
(SELECT * FROM contacts;)


---

input info


---

Contact.all


14.

-----------
Validation:
-----------

app/models/contact.rb:
----------------------

validates :email, presence: true
validates :message, presence: true


---

class Contact < ActiveRecord::Base
  validates :email, presence: true
  validates :message, presence: true
end


---

app/controllers/contacts_controller.rb:
---------------------------------------

if @contact.valid?
	@contact.save
else
	render action: 'new'
end


---

class ContactsController < ApplecationController
  def new
  end

  def create
    @contact = Contact.new(contact_params)
    if @contact.valid?
      @contact.save
    else
      render action: 'new'
    end
  end

  private

  def contact_params
    params.require(:contact).permit(:email, :message)
  end
end


15.

app/assets/stylesheets/applecation.css:
---------------------------------------

.field_with_errors input {
  border-color: red;
}

.field_with_errors textarea {
  border-color: red;
}


16.

localhost:3000/contacts:
------------------------

! Routing error


1.

config/router.rb:
-----------------

get '/contacts' => 'contacts#new'
resource :contacts, only: [:create]


---

Rails.application.routes.draw do
  get '/' => 'home/index'
  get '/contacts' => 'contacts#new'

  resource :contacts, only: [:create]
  resources :articles
end


2.

path_names: {:new => ''}


---

Rails.application.routes.draw do
  get 'home/index'

  resource :contacts, only: [:new, :create], path_names: {:new => ''}
  resources :articles
end


17.

Output errors:
--------------

app/vews/contacts/new.html.erb:
-------------------------------

<p>
  <%= @contact.errors.full_messages %>
</p>


---

<%= from_for :contact, url: contacts_path do |f| %>
  <p>
    <%= @contact.errors.full_messages %>
  </p>
  
  <p>
    <%= f.label :email %>
    <%= f.text_field :email %>
  </p>

  <p>
    <%= f.label :message %>
    <%= f.text_area :message %>
  </p>

  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


---

<% if @contact && @contact.errors.any? %>
  <p>
    <%= @contact.errors.full_messages %>
  </p>
<% end %>


---

<h1>Contact us</h1>

<%= from_for :contact, url: contacts_path do |f| %>
  <% if @contact && @contact.errors.any? %>
    <p>
      <%= @contact.errors.full_messages %>
    </p>
  <% end %>

  <p>
    <%= f.label :email %>
    <%= f.text_field :email %>
  </p>

  <p>
    <%= f.label :message %>
    <%= f.text_area :message %>
  </p>

  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


18. 

Display error message:
----------------------

app/vews/contacts/new.html.erb:
-------------------------------

<ul>
  <% @contact.errors.full_messages.each do |msg| %>
    <li><%= msg %></li>
  <% end %>
</ul>


---

<h1>Contact us</h1>

<%= from_for :contact, url: contacts_path do |f| %>
  <% if @contact && @contact.errors.any? %>
    <p>
      <ul>
        <% @contact.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </p>
  <% end %>

  <p>
    <%= f.label :email %>
    <%= f.text_field :email %>
  </p>

  <p>
    <%= f.label :message %>
    <%= f.text_area :message %>
  </p>

  <p>
    <%= f.submit 'Send message' %>
  </p>
<% end %>


----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

39.

REST

resource
resources

app/config/router.rb


---

resource		resources
--------		---------
profile			articles


---

resource list:


index
-----


resource show:

show
----


resources show:

show
----


resource create: (6 methods)

new		create
---		------
GET form	POST form


---

resources create: (7 methods)

new		create
---		------
GET form	POST form


---

resource edit:

edit		update
----		------


resources edit:

edit		update
----		------


---

resource delete:

destroy
-------

resources delete:

destroy
-------


1.

$ rails console

Article.attribute_names

Article.all


---

$ sqlite3 development.sqlite

DELETE FROM atrticles;


---

app/controllers/articles_controller.rb:
---------------------------------------

    @article = Article.new(article_params)
    if @article.valid?
      @article.save
    else
      render action: 'new'
    end


---

class ArticlesController < ApplicationController
  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
    else
      render action: 'new'
    end
  end
end


---

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end


---

class ArticlesController < ApplicationController
  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
    else
      render action: 'new'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---

=> ! Template missing


2.

app/views/articles/create.html.erb:
-----------------------------------

=> Thank you!


3.

app/views/articles/create.html.erb:
-----------------------------------

<a href="/articles">Show all articles</a>


---

<h1>Thank you!</h1>
<p>Article has been created!</p>
<a href="/articles">Show all articles</a>


---

localhost:3000/articles/new


---

! Unknown action (GET only)


4.

Pattern PRG:
------------

POST Redirect Get


---

<%= link_to 'Show all articles', articles_path %>


---

<h1>Thank you!</h1>
<p>Article has been created!</p>
<%= link_to 'Show all articles', articles_path %>


---

app/controllers/articles_controller.rb:
---------------------------------------

redirect_to @article


---

class ArticlesController < ApplicationController
  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---

=> ! Unknown action (show)


---

app/controllers/articles_controller.rb:
---------------------------------------

def show
	@article = Article.find(params[:id])
end


---

class ArticlesController < ApplicationController
  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


5.

app/views/articles/show.html.erb:
---------------------------------

<h1><%= @article.title %></h1>
<p>
  <%= @article.text %>
</p>


---

=> Hello ...


6.

edit - GET
update - PUT/PATCH


---

app/controllers/articles_controller.rb:
---------------------------------------

def index
	@articles = Article.all
end


---

class ArticlesController < ApplicationController
  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


---

app/views/articles/index.html.erb:
----------------------------------

<h1>List of articles:</h1>

<% @article.each do |article| %>
  <h2>
    <%= @article.title %>
  </h2>

  <p>
    <%= @article.text %>
  </p>

  <hr>
<% end %>


7.

app/views/articles/index.html.erb:
----------------------------------

  <p>
    <%= link_to 'Show', artcle_path(article) %>
  </p>


---

<h1>List of articles:</h1>

<% @article.each do |article| %>
  <h2>
    <%= @article.title %>
  </h2>

  <p>
    <%= @article.text %>
  </p>

  <p>
    <%= link_to 'Show', artcle_path(article) %>
  </p>

  <hr>
<% end %>



8.

app/views/articles/index.html.erb:
----------------------------------

<%= link_to 'Edit', edit_article_path(article) %>


---

<h1>List of articles:</h1>

<% @article.each do |article| %>
  <h2>
    <%= article.title %>
  </h2>

  <p>
    <%= article.text %>
  </p>

  <p>
    <%= link_to 'Show', artcle_path(article) %>
    <%= link_to 'Edit', edit_article_path(article) %>
  </p>

  <hr>
<% end %>


---

Edit => ! Unknown action


9.

app/controllers/articles_controller.rb:
---------------------------------------

def edit
	@article = Article.find(params[:id])
end


---

class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


10.

app/views/articles/edit.html.erb:
---------------------------------

<h1>Edit article</h1>

<%= from_for :article, url: articles_path do |f| %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>

  <p>
    <%= f.label :text %>
    <%= f.text_area :text %>
  </p>

  <p>
    <%= f.submit %>
  </p>
<% end %>


---

localhost:3000/aticles/edit:
----------------------------

=> Hello ...


11.

warkaround for PUT/PATCH


---

app/views/articles/edit.html.erb:
---------------------------------

article_path(@article)


---

<h1>Edit article</h1>

<%= from_for :article, url: article_path(@article) do |f| %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>

  <p>
    <%= f.label :text %>
    <%= f.text_area :text %>
  </p>

  <p>
    <%= f.submit %>
  </p>
<% end %>


---

=> /article/6


---

method: :put


---

<h1>Edit article</h1>

<%= from_for :article, url: article_path(@article), method: :put do |f| %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>

  <p>
    <%= f.label :text %>
    <%= f.text_area :text %>
  </p>

  <p>
    <%= f.submit %>
  </p>
<% end %>


---

=> ! Unknown acion (update)


12.

app/controllers/articles_controller.rb:
---------------------------------------

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end


---

class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


13.

Create static pages:
--------------------

$ rails g controller Pages


---

app/controllers/pages_controller.rb:
------------------------------------

class PagesController < ApplicationController
end


---

  def terms
  end

  def about 
  end


---

class PagesController < ApplicationController
  def terms
  end

  def about
  end
end


14.

app/config/routes.rb:
---------------------

  get '/terms' => 'pages#terms'
  get '/about' => 'pages#about'


---

Rails.application.routes.draw do
  get 'home/index'

  get '/terms' => 'pages#terms'
  get '/about' => 'pages#about'

  resource :contacts, only: [:new, :create], path_names: {:new => ''}
  resources :articles
end


---

localhost:3000/terms:

=> ! Template missing


15.

app/views/pages/about.html.erb:
-------------------------------

<h1>About us</h1>

<p>
  Some text
</p>


---

localhost:3000/about:

=> About us



----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------

40.

RAILS:
Show page: (/terms /about)

1.

$ rails g controller Name

2.

app/controllers/page_controller.rb:
-----------------------------------

def some
end

3. 

app/views/page_dir/touch page_name.html.erb

4. 

config/routes.rb:
-----------------

get '/some' => 'page_name#some'


--------
SINATRA:
--------

1. 

app.rb:
-------

route:
------

get '/some' do
	erb 'some'
end

2.

view:
-----

views/some.html.erb


---

model:
------

Article

1. 

model:
------

$ rake db:create_some
$ rake db:migrate


2. 

route:
------

config/routes.rb:
-----------------

resource
resources


3. 

$ rake g controller Name


4. 

app/controllers/name_controller.rb:
-----------------------------------

actions: (index, new create, edit update, destroy (DELETE HTTP method))

def new
end

5. views
app/views/.../...html.erb


---

1. 

$ rails server (localhost:3000)

2.

http://github.com/ro31337/sample-blog


---

app/controllers/articles_controller.rb:
---------------------------------------

$ rails console

Article.all
(SELECT * FROM articles;)

Article.find(1)
(SELECT * FROM articles
WHERE id = 1;)

@article = Article.find(1)
(SELECT * FROM articles
WHERE id = ?
LIMIT 1 [["id", 1]])

@article.destroy
(DELETE FROM articles
WHERE id = ? [["id", 1]])

Article.all
(SELECT * FROM articles;)


---

  def destroy
    @article = Article.find(params[:id])
    @article.destroy
  end


---

class ArticlesController < ApplicationController

  def index
    @articles = Article.all
  end

  def show
    @article = Article.find(params[:id])
  end

  def new
  end

  def create
    @article = Article.new(article_params)
    if @article.valid?
      @article.save
      redirect_to @article
    else
      render action: 'new'
    end
  end

  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])

    if @article.update(article_params)
      redirect_to @article
    else
      render action: 'edit'
    end
  end

  def destroy
    @article = Article.find(params[:id])
    @article.destroy
  end

  private

  def article_params
    params.require(:article).permit(:title, :text)
  end
end


3.

app/controllers/articles_controller.rb:
---------------------------------------

redirect_to articles_path


---

  def destroy
    @article = Article.find(params[:id])
    @article.destroy

    redirect_to articles_path
  end


4.

app/views/articles/index.html.erb:
----------------------------------

<%= link_to 'Destroy', article_path(article), method: :delete %>


---

<h1>List of articles:</h1>

<% @article.each do |article| %>
  <h2>
    <%= article.title %>
  </h2>

  <p>
    <%= article.text %>
  </p>

  <p>
    <%= link_to 'Show', artcle_path(article) %> |
    <%= link_to 'Edit', edit_article_path(article) %> |
    <%= link_to 'Destroy', article_path(article), method: :delete %>
  </p>

  <hr>
<% end %>


---

https://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to

<%= link_to "Romove", article, method: :delete, data: { confirm: "Are you sure?" } %>

http://railsguides.net/advaced-rails-model-generators/


---

one-to-many:
------------

Article1		*Comment


1.

$ rails g model Comment autor:string body:text article:references


---

app/models/comment.rb:
----------------------

class Comment < ActiveRecord::Base
  belongs_to :article
end

app/db/migrate/333_create_comments.rb:

class CreateComments < ActiveRecord::Migration
  def change
    create_table :comments do |t|
      t.string :autor
      t.text :body
      t.references :article, index: true

      t.timestamps
    end
  end
end


2.

$ rake db:migrate

$ sqlite3 developer.sqlite

SELECT * FROM articles;

.tables

=>

articles	comments	contacts	schema_migrations


---

.mode columns
.header on

SELECT * FROM articles;
SELECT * FROM comments;

pragma table_info(articles);
pragma table_info(comments); (article_id)


---

- every comment => article
- every article << many comments


---

app/models/article.rb:
----------------------

has_many :comments


---

class Article < ActiveRecord::Base
  has_many :comments
end


4.

config/routes.rb:
-----------------

  resources :articles do
    resources :comment
  end


---

Rails.application.routes.draw do
  get 'home/index'

  get '/terms' => 'pages#terms'
  get '/about' => 'pages#about'

  resource :contacts, only: [:new, :create], path_names: {:new => ''}
  resources :articles do
    resources :comment
  end
end


---

$ rake routes


---

https://sql.ru


5.

$ rails g controller Comments


---

app/controllers/comments_controller.rb:
---------------------------------------

class CommmentsController < ApplicationController
	def create
	end
end


---

$ rails console

Comment.all
Article.comments
@article = Article.find(3)
@article.comments
@article.comments.create({ autor: 'Mike', bodi: 'Hello' })
(INSERT INTO comments (autor, body)
VALUES (?, ?), ['Mike', 'Hello'])


---

app/controllers/comments_controller.rb:
---------------------------------------

@article = Article.find(params[:article_id])
@article.comments.create({ autor: 'Mike', body: 'Hello' })


---

class CommmentsController < ApplicationController
  def create
    @article = Article.find(params[:article_id])
    @article.comments.create({ autor: 'Mike', body: 'Hello' })
  end
end


6.

app/controllers/comments_controller.rb:
---------------------------------------

  private

  def comment_params
    params.require(:comment).permit(:autor, :body)
  end


---

class CommmentsController < ApplicationController
  def create
    @article = Article.find(params[:article_id])
    @article.comments.create(comment_params)
  end

  private

  def comment_params
    params.require(:comment).permit(:autor, :body)
  end
end


7.

redirect_to article_path(@article)


---

class CommmentsController < ApplicationController
  def create
    @article = Article.find(params[:article_id])
    @article.comments.create(comment_params)

    redirect_to article_path(@article)
  end

  private

  def comment_params
    params.require(:comment).permit(:autor, :body)
  end
end


8.

app/views/articles/show.html.erb:
---------------------------------

POST /articles/:article_id/comments	comments#create
/articles/3/comments			comments@create


---

https://github.com/rails/rails/blob/7a085dac2a2820856cde6c2ca8c69779ac766a97
/actionview/lib/action_view/helpers/form_helper.rb


---

<%= form_for([@document, @comment]) do |f| %>


---

api.rubyonrails.org/classes/ActiveRecord/Associations/Class/Methods.html


---

@article.comments - collection

collection.build(attributes = {})

Returns a new object of the collection type that has been instantiated with 
attributes and linked to this object through the join table, but has not yet been saved.


---

@article.comments.build


---

@comment = @article.comments.build


---

<%= form_for([@article, @article.comments.build]) do |f| %>


---

<h1><%= @article.title %></h1>
<p>
  <%= @article.text %>
</p>

<%= form_for([@article, @article.comments.build]) do |f| %>
  <p>
    <%= f.label :autor %>
    <%= f.text_field :autor %>
  </p>

  <p>
    <%= f.label :body %>
    <%= f.text_area :body %>
  </p>

  <p>
    <%= f.submit %>
  </p>
<% end %>


9.

$ rails console

@article = Article.find(3)

@article.comments

Comment.all


----------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------












































